{"pageProps":{"frontmatter":{"name":"EzCheckbox","title":"Checkbox","category":"Inputs","path":"/components/ez-checkbox"},"code":"var Component=(()=>{var u=Object.create;var i=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var p=c=>i(c,\"__esModule\",{value:!0});var C=(c,n)=>()=>(n||c((n={exports:{}}).exports,n),n.exports),y=(c,n)=>{p(c);for(var t in n)i(c,t,{get:n[t],enumerable:!0})},w=(c,n,t)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let r of g(n))!x.call(c,r)&&r!==\"default\"&&i(c,r,{get:()=>n[r],enumerable:!(t=b(n,r))||t.enumerable});return c},z=c=>w(p(i(c!=null?u(f(c)):{},\"default\",c&&c.__esModule&&\"default\"in c?{get:()=>c.default,enumerable:!0}:{value:c,enumerable:!0})),c);var m=C((B,k)=>{k.exports=_jsx_runtime});var _={};y(_,{default:()=>j,frontmatter:()=>v});var e=z(m()),v={name:\"EzCheckbox\",title:\"Checkbox\",category:\"Inputs\",path:\"/components/ez-checkbox\"};function E(c){let n=Object.assign({p:\"p\",a:\"a\",hr:\"hr\",h2:\"h2\",ul:\"ul\",li:\"li\",h3:\"h3\",code:\"code\",span:\"span\"},c.components),{CodeDemo:t,Preview:r,EzCheckbox:h,EzLink:l,wrapper:s}=n,d=(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\"Checkbox inputs are used to capture binary choices; they can be used to toggle the state of something on or off.\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"For use within a form, \",(0,e.jsx)(n.a,{href:\"/components/ez-field#multiple-choice-input-field\",children:\"EzField\"}),\" should be used instead of EzCheckbox. Checkbox inputs are primarily provided to facilitate building custom components.\"]}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,(0,e.jsx)(n.h2,{id:\"best-practices\",children:\"Best Practices\"}),`\n`,(0,e.jsx)(n.p,{children:\"Checkbox inputs should:\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Be clearly labelled, or provide an accessible name for assistive technologies\"}),`\n`,(0,e.jsx)(n.li,{children:'Be labelled positively; for example, \"Enable notifications\"'}),`\n`,(0,e.jsx)(n.li,{children:\"Be labelled in the first person when asking for acceptance of terms of service\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"Be used for interactions where the effect of the interaction is deferred, typically when a form is submitted. For immediate interactions, such as immediately saving changes on interaction, use the \",(0,e.jsx)(n.a,{href:\"/components/ez-toggle\",children:\"toggle component\"}),\" instead;\"]}),`\n`]}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,(0,e.jsx)(n.h2,{id:\"examples\",children:\"Examples\"}),`\n`,(0,e.jsx)(n.h3,{id:\"basic-checkbox\",children:\"Basic checkbox\"}),`\n`,(0,e.jsx)(n.p,{children:\"Checkbox inputs are used to offer binary choices\"}),`\n`,(0,e.jsx)(t,{code:`() => {\n  const [checked, setChecked] = React.useState(true);\n  return (\n    <EzCheckbox label=\"Basic checkbox\" onChange={() => setChecked(!checked)} checked={checked} />\n  );\n};`,language:\"jsx\",children:(0,e.jsx)(r,{children:()=>{let[o,a]=React.useState(!0);return(0,e.jsx)(h,{label:\"Basic checkbox\",onChange:()=>a(!o),checked:o})}})}),`\n`,(0,e.jsx)(n.h3,{id:\"disabled-checkbox\",children:\"Disabled checkbox\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Use the \",(0,e.jsx)(n.code,{children:\"disabled\"}),\" prop to prevent users from being able to interact with the checkbox and to convey the inactive state to assistive technologies.\"]}),`\n`,(0,e.jsx)(t,{code:`() => {\n  const [checked, setChecked] = React.useState(true);\n  return (\n    <EzCheckbox\n      label=\"Disabled checkbox\"\n      disabled\n      onChange={() => setChecked(!checked)}\n      checked={checked}\n    />\n  );\n};`,language:\"jsx\",children:(0,e.jsx)(r,{children:()=>{let[o,a]=React.useState(!0);return(0,e.jsx)(h,{label:\"Disabled checkbox\",disabled:!0,onChange:()=>a(!o),checked:o})}})}),`\n`,(0,e.jsx)(n.h3,{id:\"acknowledgement-checkbox\",children:\"Acknowledgement checkbox\"}),`\n`,(0,e.jsx)(n.p,{children:\"Actions taken within applications may require explicit acknowledgment before they can proceed. In particular, legal agreements in place, such as a Terms & Conditions agreement, End-User License Agreement (EULA) or a Privacy Policy agreement may require that terms and conditions are presented for users to acknowledge.\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"An acknowledgement checkbox (indicated by an \",(0,e.jsx)(n.code,{children:\"acknowledgement\"}),\" prop) should be used to allow the user to record acceptance of terms.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Optionally, a \",(0,e.jsx)(n.code,{children:\"terms\"}),\" prop may be used to present a small amount of text inline below the checkbox. It is recommended that longer terms, such as a legal agreement, should be linked to in a new window, rather than included inline.\"]}),`\n`,(0,e.jsx)(t,{code:`() => {\n  const [checked, setChecked] = React.useState(true);\n  return (\n    <EzCheckbox\n      acknowledgement\n      label=\"I accept the new terms of service\"\n      terms={\n        <span>\n          I have read and agree to the{' '}\n          <EzLink>\n            <a href=\"/\" target=\"_blank\" rel=\"noreferrer noopener\">\n              terms of service\n            </a>\n          </EzLink>{' '}\n          and{' '}\n          <EzLink>\n            <a href=\"/\" target=\"_blank\" rel=\"noreferrer noopener\">\n              privacy policy\n            </a>\n          </EzLink>\n          .\n        </span>\n      }\n      onChange={() => setChecked(!checked)}\n      checked={checked}\n    />\n  );\n};`,language:\"jsx\",children:(0,e.jsx)(r,{children:()=>{let[o,a]=React.useState(!0);return(0,e.jsx)(h,{acknowledgement:!0,label:\"I accept the new terms of service\",terms:(0,e.jsxs)(n.span,{children:[\" I have read and agree to the\",\" \",(0,e.jsx)(l,{children:(0,e.jsx)(n.a,{href:\"/\",target:\"_blank\",rel:\"noreferrer noopener\",children:\" terms of service\"})}),\" \",\" and\",\" \",(0,e.jsx)(l,{children:(0,e.jsx)(n.a,{href:\"/\",target:\"_blank\",rel:\"noreferrer noopener\",children:\" privacy policy\"})}),\" .\"]}),onChange:()=>a(!o),checked:o})}})}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,(0,e.jsx)(n.h2,{id:\"related-components\",children:\"Related components\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"/components/ez-field\",children:\"EzField\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"/components/ez-form-layout\",children:\"EzFormLayout\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.a,{href:\"/components/ez-toggle\",children:\"EzToggle\"})}),`\n`]})]});return s?(0,e.jsx)(s,Object.assign({},c,{children:d})):d}var j=E;return _;})();\n;return Component.default;","toc":[{"children":[],"id":"best-practices","textContent":"Best Practices"},{"children":[{"children":[],"id":"basic-checkbox","textContent":"Basic checkbox"},{"children":[],"id":"disabled-checkbox","textContent":"Disabled checkbox"},{"children":[],"id":"acknowledgement-checkbox","textContent":"Acknowledgement checkbox"}],"id":"examples","textContent":"Examples"},{"children":[],"id":"related-components","textContent":"Related components"}],"filePath":"src/components/EzCheckbox/EzCheckbox.md"},"__N_SSG":true}