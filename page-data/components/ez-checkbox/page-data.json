{"componentChunkName":"component---src-components-markdown-js","path":"/components/ez-checkbox","result":{"data":{"markdownRemark":{"html":"<p>Checkbox inputs are used to capture binary choices; they can be used to toggle the state of something on or off.</p>\n<p>For use within a form, <a href=\"/recipe/components/ez-field#multiple-choice-input-field\">EzField</a> should be used instead of EzCheckbox. Checkbox inputs are primarily provided to facilitate building custom components.</p>\n<hr>\n<h2 id=\"best-practices\" style=\"position:relative;\"><a href=\"#best-practices\" aria-label=\"best practices permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Best Practices</h2>\n<p>Checkbox inputs should:</p>\n<ul>\n<li>Be clearly labelled, or provide an accessible name for assistive technologies</li>\n<li>Be labelled positively; for example, \"Enable notifications\"</li>\n<li>Be labelled in the first person when asking for acceptance of terms of service</li>\n<li>Be used for interactions where the effect of the interaction is deferred, typically when a form is submitted. For immediate interactions, such as immediately saving changes on interaction, use the <a href=\"/recipe/components/ez-toggle\">toggle component</a> instead;</li>\n</ul>\n<hr>\n<h2 id=\"examples\" style=\"position:relative;\"><a href=\"#examples\" aria-label=\"examples permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Examples</h2>\n<h3 id=\"basic-checkbox\" style=\"position:relative;\"><a href=\"#basic-checkbox\" aria-label=\"basic checkbox permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic checkbox</h3>\n<p>Checkbox inputs are used to offer binary choices</p>\n<pre><code class=\"language-jsx\">() => {\n  const [checked, setChecked] = React.useState(true);\n  return (\n    &#x3C;EzCheckbox label=\"Basic checkbox\" onChange={() => setChecked(!checked)} checked={checked} />\n  );\n};\n</code></pre>\n<h3 id=\"disabled-checkbox\" style=\"position:relative;\"><a href=\"#disabled-checkbox\" aria-label=\"disabled checkbox permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disabled checkbox</h3>\n<p>Use the <code>disabled</code> prop to prevent users from being able to interact with the checkbox and to convey the inactive state to assistive technologies.</p>\n<pre><code class=\"language-jsx\">() => {\n  const [checked, setChecked] = React.useState(true);\n  return (\n    &#x3C;EzCheckbox\n      label=\"Disabled checkbox\"\n      disabled\n      onChange={() => setChecked(!checked)}\n      checked={checked}\n    />\n  );\n};\n</code></pre>\n<h3 id=\"acknowledgement-checkbox\" style=\"position:relative;\"><a href=\"#acknowledgement-checkbox\" aria-label=\"acknowledgement checkbox permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Acknowledgement checkbox</h3>\n<p>Actions taken within applications may require explicit acknowledgment before they can proceed. In particular, legal agreements in place, such as a Terms &#x26; Conditions agreement, End-User License Agreement (EULA) or a Privacy Policy agreement may require that terms and conditions are presented for users to acknowledge.</p>\n<p>An acknowledgement checkbox (indicated by an <code>acknowledgement</code> prop) should be used to allow the user to record acceptance of terms.</p>\n<p>Optionally, a <code>terms</code> prop may be used to present a small amount of text inline below the checkbox. It is recommended that longer terms, such as a legal agreement, should be linked to in a new window, rather than included inline.</p>\n<pre><code class=\"language-jsx\">() => {\n  const [checked, setChecked] = React.useState(true);\n  return (\n    &#x3C;EzCheckbox\n      acknowledgement\n      label=\"I accept the new terms of service\"\n      terms={\n        &#x3C;span>\n          I have read and agree to the{' '}\n          &#x3C;EzLink>\n            &#x3C;a href=\"/\" target=\"_blank\" rel=\"noreferrer noopener\">\n              terms of service\n            &#x3C;/a>\n          &#x3C;/EzLink>{' '}\n          and{' '}\n          &#x3C;EzLink>\n            &#x3C;a href=\"/\" target=\"_blank\" rel=\"noreferrer noopener\">\n              privacy policy\n            &#x3C;/a>\n          &#x3C;/EzLink>\n          .\n        &#x3C;/span>\n      }\n      onChange={() => setChecked(!checked)}\n      checked={checked}\n    />\n  );\n};\n</code></pre>\n<hr>\n<h2 id=\"related-components\" style=\"position:relative;\"><a href=\"#related-components\" aria-label=\"related components permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Related components</h2>\n<ul>\n<li><a href=\"/recipe/components/ez-field\">EzField</a></li>\n<li><a href=\"/recipe/components/ez-form-layout\">EzFormLayout</a></li>\n<li><a href=\"/recipe/components/ez-toggle\">EzToggle</a></li>\n</ul>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Checkbox inputs are used to capture binary choices; they can be used to toggle the state of something on or off."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For use within a form, "},{"type":"element","tagName":"a","properties":{"href":"/recipe/components/ez-field#multiple-choice-input-field"},"children":[{"type":"text","value":"EzField"}]},{"type":"text","value":" should be used instead of EzCheckbox. Checkbox inputs are primarily provided to facilitate building custom components."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"best-practices","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#best-practices","ariaLabel":"best practices permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Best Practices"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Checkbox inputs should:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Be clearly labelled, or provide an accessible name for assistive technologies"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Be labelled positively; for example, \"Enable notifications\""}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Be labelled in the first person when asking for acceptance of terms of service"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Be used for interactions where the effect of the interaction is deferred, typically when a form is submitted. For immediate interactions, such as immediately saving changes on interaction, use the "},{"type":"element","tagName":"a","properties":{"href":"/recipe/components/ez-toggle"},"children":[{"type":"text","value":"toggle component"}]},{"type":"text","value":" instead;"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"examples","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#examples","ariaLabel":"examples permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Examples"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"basic-checkbox","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#basic-checkbox","ariaLabel":"basic checkbox permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Basic checkbox"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Checkbox inputs are used to offer binary choices"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"() => {\n  const [checked, setChecked] = React.useState(true);\n  return (\n    <EzCheckbox label=\"Basic checkbox\" onChange={() => setChecked(!checked)} checked={checked} />\n  );\n};\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"disabled-checkbox","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#disabled-checkbox","ariaLabel":"disabled checkbox permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Disabled checkbox"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"disabled"}]},{"type":"text","value":" prop to prevent users from being able to interact with the checkbox and to convey the inactive state to assistive technologies."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"() => {\n  const [checked, setChecked] = React.useState(true);\n  return (\n    <EzCheckbox\n      label=\"Disabled checkbox\"\n      disabled\n      onChange={() => setChecked(!checked)}\n      checked={checked}\n    />\n  );\n};\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"acknowledgement-checkbox","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#acknowledgement-checkbox","ariaLabel":"acknowledgement checkbox permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Acknowledgement checkbox"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Actions taken within applications may require explicit acknowledgment before they can proceed. In particular, legal agreements in place, such as a Terms & Conditions agreement, End-User License Agreement (EULA) or a Privacy Policy agreement may require that terms and conditions are presented for users to acknowledge."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An acknowledgement checkbox (indicated by an "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"acknowledgement"}]},{"type":"text","value":" prop) should be used to allow the user to record acceptance of terms."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Optionally, a "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"terms"}]},{"type":"text","value":" prop may be used to present a small amount of text inline below the checkbox. It is recommended that longer terms, such as a legal agreement, should be linked to in a new window, rather than included inline."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-jsx"]},"children":[{"type":"text","value":"() => {\n  const [checked, setChecked] = React.useState(true);\n  return (\n    <EzCheckbox\n      acknowledgement\n      label=\"I accept the new terms of service\"\n      terms={\n        <span>\n          I have read and agree to the{' '}\n          <EzLink>\n            <a href=\"/\" target=\"_blank\" rel=\"noreferrer noopener\">\n              terms of service\n            </a>\n          </EzLink>{' '}\n          and{' '}\n          <EzLink>\n            <a href=\"/\" target=\"_blank\" rel=\"noreferrer noopener\">\n              privacy policy\n            </a>\n          </EzLink>\n          .\n        </span>\n      }\n      onChange={() => setChecked(!checked)}\n      checked={checked}\n    />\n  );\n};\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"related-components","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#related-components","ariaLabel":"related components permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Related components"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"/recipe/components/ez-field"},"children":[{"type":"text","value":"EzField"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"/recipe/components/ez-form-layout"},"children":[{"type":"text","value":"EzFormLayout"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"/recipe/components/ez-toggle"},"children":[{"type":"text","value":"EzToggle"}]}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"frontmatter":{"path":"/components/ez-checkbox","title":"Checkbox","name":"EzCheckbox","tags":null}}},"pageContext":{}},"staticQueryHashes":["3052156184","771875118","771875118"]}