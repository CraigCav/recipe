{"pageProps":{"frontmatter":{"name":"EzSegmentedControl","title":"Segmented Control","category":"Inputs","path":"/components/ez-segmented-control"},"code":"var Component=(()=>{var b=Object.create;var o=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty;var d=n=>o(n,\"__esModule\",{value:!0});var f=(n,t)=>()=>(t||n((t={exports:{}}).exports,t),t.exports),x=(n,t)=>{d(n);for(var l in t)o(n,l,{get:t[l],enumerable:!0})},M=(n,t,l)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let a of g(t))!S.call(n,a)&&a!==\"default\"&&o(n,a,{get:()=>t[a],enumerable:!(l=v(t,a))||l.enumerable});return n},C=n=>M(d(o(n!=null?b(w(n)):{},\"default\",n&&n.__esModule&&\"default\"in n?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n);var p=f((V,c)=>{c.exports=_jsx_runtime});var T={};x(T,{default:()=>y,frontmatter:()=>j});var e=C(p()),j={name:\"EzSegmentedControl\",title:\"Segmented Control\",category:\"Inputs\",path:\"/components/ez-segmented-control\"};function z(n){let t=Object.assign({p:\"p\",hr:\"hr\",h2:\"h2\",ul:\"ul\",li:\"li\",a:\"a\",h3:\"h3\",code:\"code\"},n.components),{CodeDemo:l,Preview:a,EzSegmentedControl:i,wrapper:s}=t,r=(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.p,{children:\"A segmented control is a group of two or more options which function as mutually exclusive buttons. Within the control, all segments are equal width.\"}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.h2,{id:\"best-practices\",children:\"Best Practices\"}),`\n`,(0,e.jsx)(t.p,{children:\"Segmented controls should:\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsx)(t.li,{children:\"Have a limited number of options\"}),`\n`,(0,e.jsx)(t.li,{children:\"Try to keep segment content size consistent\"}),`\n`,(0,e.jsx)(t.li,{children:\"Avoid mixing text and icons inside a Segmented Control\"}),`\n`]}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.h2,{id:\"content-guidelines\",children:\"Content guidelines\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Follow the \",(0,e.jsx)(t.a,{href:\"/components/ez-button\",children:\"content guidelines\"}),\" outlined in the button component.\"]}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.h2,{id:\"examples\",children:\"Examples\"}),`\n`,(0,e.jsx)(t.h3,{id:\"segmented-control\",children:\"Segmented control\"}),`\n`,(0,e.jsx)(t.p,{children:\"Used to present mutually exclusive options as buttons.\"}),`\n`,(0,e.jsx)(l,{code:`() => {\n  const [active, setActive] = React.useState('map');\n  return (\n    <EzSegmentedControl\n      name=\"view-map-options\"\n      label=\"Map View\"\n      options={[\n        {label: 'Map', value: 'map'},\n        {label: 'Transit', value: 'transit'},\n        {label: 'Satellite', value: 'satellite'},\n      ]}\n      active={active}\n      onChange={value => setActive(value)}\n    />\n  );\n};`,language:\"jsx\",children:(0,e.jsx)(a,{children:()=>{let[h,u]=React.useState(\"map\");return(0,e.jsx)(i,{name:\"view-map-options\",label:\"Map View\",options:[{label:\"Map\",value:\"map\"},{label:\"Transit\",value:\"transit\"},{label:\"Satellite\",value:\"satellite\"}],active:h,onChange:m=>u(m)})}})}),`\n`,(0,e.jsx)(t.h3,{id:\"label-positioning\",children:\"Label Positioning\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Positioning of the label for the segmented control can be varied. Using the option \",(0,e.jsx)(t.code,{children:'\"hidden\"'}),\" will visually hide the label while still providing an accessible way for screen reader users to identify the related options.\"]}),`\n`,(0,e.jsx)(l,{code:`<div>\n  <h3>Left</h3>\n  <EzSegmentedControl\n    name=\"view-map-options-label-positioning\"\n    label=\"Map View\"\n    labelPosition=\"left\"\n    options={[\n      {label: 'Map', value: 'map'},\n      {label: 'Transit', value: 'transit'},\n      {label: 'Satellite', value: 'satellite'},\n    ]}\n    active=\"map\"\n  />\n  <br />\n  <h3>Hidden</h3>\n  <EzSegmentedControl\n    name=\"view-map-options-label-hidden\"\n    label=\"Map View\"\n    labelPosition=\"hidden\"\n    options={[\n      {label: 'Map', value: 'map'},\n      {label: 'Transit', value: 'transit'},\n      {label: 'Satellite', value: 'satellite'},\n    ]}\n    active=\"map\"\n  />\n</div>`,language:\"jsx\",children:(0,e.jsxs)(\"div\",{children:[(0,e.jsx)(\"h3\",{children:\"Left\"}),(0,e.jsx)(i,{name:\"view-map-options-label-positioning\",label:\"Map View\",labelPosition:\"left\",options:[{label:\"Map\",value:\"map\"},{label:\"Transit\",value:\"transit\"},{label:\"Satellite\",value:\"satellite\"}],active:\"map\"}),(0,e.jsx)(\"br\",{}),(0,e.jsx)(\"h3\",{children:\"Hidden\"}),(0,e.jsx)(i,{name:\"view-map-options-label-hidden\",label:\"Map View\",labelPosition:\"hidden\",options:[{label:\"Map\",value:\"map\"},{label:\"Transit\",value:\"transit\"},{label:\"Satellite\",value:\"satellite\"}],active:\"map\"})]})}),`\n`,(0,e.jsx)(t.h3,{id:\"disabled-option-state\",children:\"Disabled Option State\"}),`\n`,(0,e.jsx)(t.p,{children:\"Used to indicate to the user that an action is not currently available. Disabled buttons do not respond to user input (and therefore will not trigger onClick behavior).\"}),`\n`,(0,e.jsx)(l,{code:`<EzSegmentedControl\n  name=\"view-map-options-with-disabled-option\"\n  label=\"Map View\"\n  options={[\n    {label: 'Map', value: 'map'},\n    {label: 'Transit', value: 'transit'},\n    {label: 'Satellite', value: 'satellite', disabled: true},\n  ]}\n  active=\"map\"\n/>`,language:\"jsx\",children:(0,e.jsx)(i,{name:\"view-map-options-with-disabled-option\",label:\"Map View\",options:[{label:\"Map\",value:\"map\"},{label:\"Transit\",value:\"transit\"},{label:\"Satellite\",value:\"satellite\",disabled:!0}],active:\"map\"})}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.h2,{id:\"related-components\",children:\"Related components\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"For individual buttons, \",(0,e.jsx)(t.a,{href:\"/components/ez-button\",children:\"use the button component\"})]}),`\n`]})]});return s?(0,e.jsx)(s,Object.assign({},n,{children:r})):r}var y=z;return T;})();\n;return Component.default;","toc":[{"children":[],"id":"best-practices","textContent":"Best Practices"},{"children":[],"id":"content-guidelines","textContent":"Content guidelines"},{"children":[{"children":[],"id":"segmented-control","textContent":"Segmented control"},{"children":[],"id":"label-positioning","textContent":"Label Positioning"},{"children":[],"id":"disabled-option-state","textContent":"Disabled Option State"}],"id":"examples","textContent":"Examples"},{"children":[],"id":"related-components","textContent":"Related components"}],"filePath":"src/components/EzSegmentedControl/EzSegmentedControl.md"},"__N_SSG":true}