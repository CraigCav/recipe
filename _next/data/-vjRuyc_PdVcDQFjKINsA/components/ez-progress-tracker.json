{"pageProps":{"frontmatter":{"name":"EzProgressTracker","title":"Progress tracker","category":"Navigation","path":"/components/ez-progress-tracker","tags":["tracker","steps"]},"code":"var Component=(()=>{var z=Object.create;var h=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var E=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var g=r=>h(r,\"__esModule\",{value:!0});var x=(r,t)=>()=>(t||r((t={exports:{}}).exports,t),t.exports),B=(r,t)=>{g(r);for(var o in t)h(r,o,{get:t[o],enumerable:!0})},L=(r,t,o)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let c of C(t))!w.call(r,c)&&c!==\"default\"&&h(r,c,{get:()=>t[c],enumerable:!(o=f(t,c))||o.enumerable});return r},A=r=>L(g(h(r!=null?z(E(r)):{},\"default\",r&&r.__esModule&&\"default\"in r?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var S=x((F,b)=>{b.exports=_jsx_runtime});var D={};B(D,{default:()=>j,frontmatter:()=>R});var e=A(S()),R={name:\"EzProgressTracker\",title:\"Progress tracker\",category:\"Navigation\",path:\"/components/ez-progress-tracker\",tags:[\"tracker\",\"steps\"]};function P(r){let t=Object.assign({p:\"p\",hr:\"hr\",h2:\"h2\",ul:\"ul\",li:\"li\",h3:\"h3\",code:\"code\",a:\"a\"},r.components),{CodeDemo:o,Preview:c,EzLayout:p,EzProgressTracker:u,EzButton:l,wrapper:m}=t,y=(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.p,{children:\"A progress tracker conveys progress through linear steps or actions across multiple screens, in order to complete a task. The tracker shows users where they are in the process, and can be used to navigate through the process by selecting steps.\"}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.h2,{id:\"best-practices\",children:\"Best Practices\"}),`\n`,(0,e.jsx)(t.p,{children:\"Progress trackers should:\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsx)(t.li,{children:\"Use labels that clearly indicate the purpose of the step. When writing, keep options to a single line of text, be short and concise, ideally 1-2 words.\"}),`\n`,(0,e.jsx)(t.li,{children:\"If a task needs more than six steps, consider simplifying the process or breaking it up into multiple tasks\"}),`\n`,(0,e.jsx)(t.li,{children:\"If there are less than three steps, consider showing the steps on a single screen\"}),`\n`]}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.h2,{id:\"examples\",children:\"Examples\"}),`\n`,(0,e.jsx)(t.h3,{id:\"horizontal-progress-tracker\",children:\"Horizontal progress tracker\"}),`\n`,(0,e.jsx)(o,{code:`() => {\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const steps = [\n    {label: 'Check in at restaurant'},\n    {label: 'Leave for destination'},\n    {label: 'Arrive at drop-off'},\n    {label: 'Delivery Complete'},\n  ].map((step, i) => ({...step, complete: i < activeStep}));\n\n  return (\n    <EzLayout layout=\"stack\">\n      <EzProgressTracker steps={steps} selected={steps[activeStep] || steps[steps.length - 1]} />\n\n      {/* Buttons to navigatie between steps */}\n      <EzLayout layout=\"split\">\n        {activeStep === steps.length ? (\n          <EzButton use=\"primary\" onClick={() => setActiveStep(0)}>\n            Reset\n          </EzButton>\n        ) : (\n          <>\n            <EzButton\n              use=\"tertiary\"\n              disabled={activeStep === 0}\n              onClick={() => setActiveStep(activeStep - 1)}\n            >\n              Prev\n            </EzButton>\n            {steps[activeStep].label}\n            <EzButton use=\"primary\" onClick={() => setActiveStep(activeStep + 1)}>\n              {activeStep < steps.length - 1 ? 'Next' : 'Finish'}\n            </EzButton>\n          </>\n        )}\n      </EzLayout>\n    </EzLayout>\n  );\n};`,language:\"jsx\",children:(0,e.jsx)(c,{children:()=>{let[s,n]=React.useState(0),a=[{label:\"Check in at restaurant\"},{label:\"Leave for destination\"},{label:\"Arrive at drop-off\"},{label:\"Delivery Complete\"}].map((d,i)=>({...d,complete:i<s}));return(0,e.jsxs)(p,{layout:\"stack\",children:[(0,e.jsx)(u,{steps:a,selected:a[s]||a[a.length-1]}),(0,e.jsx)(p,{layout:\"split\",children:s===a.length?(0,e.jsx)(l,{use:\"primary\",onClick:()=>n(0),children:\" Reset\"}):(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(l,{use:\"tertiary\",disabled:s===0,onClick:()=>n(s-1),children:\" Prev\"}),a[s].label,(0,e.jsx)(l,{use:\"primary\",onClick:()=>n(s+1),children:s<a.length-1?\"Next\":\"Finish\"})]})})]})}})}),`\n`,(0,e.jsx)(t.h3,{id:\"vertical-progress-tracker\",children:\"Vertical progress tracker\"}),`\n`,(0,e.jsx)(o,{code:`() => {\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const steps = [\n    {label: 'Catering Menu'},\n    {label: 'Delivery Capcity & Hours'},\n    {label: 'Delivery Range & Fees'},\n    {label: 'Order Lead Time'},\n    {label: 'Payment Information'},\n  ].map((step, i) => ({...step, complete: i < activeStep}));\n\n  return (\n    <EzLayout layout=\"stack\">\n      <EzProgressTracker\n        steps={steps}\n        selected={steps[activeStep] || steps[steps.length - 1]}\n        orientation=\"vertical\"\n      />\n\n      {/* Buttons to navigatie between steps */}\n      <EzLayout layout=\"split\">\n        {activeStep === steps.length ? (\n          <EzButton use=\"primary\" onClick={() => setActiveStep(0)}>\n            Reset\n          </EzButton>\n        ) : (\n          <>\n            <EzButton\n              use=\"tertiary\"\n              disabled={activeStep === 0}\n              onClick={() => setActiveStep(activeStep - 1)}\n            >\n              Prev\n            </EzButton>\n            {steps[activeStep].label}\n            <EzButton use=\"primary\" onClick={() => setActiveStep(activeStep + 1)}>\n              {activeStep < steps.length - 1 ? 'Next' : 'Finish'}\n            </EzButton>\n          </>\n        )}\n      </EzLayout>\n    </EzLayout>\n  );\n};`,language:\"jsx\",children:(0,e.jsx)(c,{children:()=>{let[s,n]=React.useState(0),a=[{label:\"Catering Menu\"},{label:\"Delivery Capcity & Hours\"},{label:\"Delivery Range & Fees\"},{label:\"Order Lead Time\"},{label:\"Payment Information\"}].map((d,i)=>({...d,complete:i<s}));return(0,e.jsxs)(p,{layout:\"stack\",children:[(0,e.jsx)(u,{steps:a,selected:a[s]||a[a.length-1],orientation:\"vertical\"}),(0,e.jsx)(p,{layout:\"split\",children:s===a.length?(0,e.jsx)(l,{use:\"primary\",onClick:()=>n(0),children:\" Reset\"}):(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(l,{use:\"tertiary\",disabled:s===0,onClick:()=>n(s-1),children:\" Prev\"}),a[s].label,(0,e.jsx)(l,{use:\"primary\",onClick:()=>n(s+1),children:s<a.length-1?\"Next\":\"Finish\"})]})})]})}})}),`\n`,(0,e.jsx)(t.h3,{id:\"navigating-through-steps\",children:\"Navigating through steps\"}),`\n`,(0,e.jsx)(t.p,{children:\"Non-linear steps, or complex multi-step flows can be supported, allowing the user to enter or revist any prior step in the flow.\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Each step passed to the \",(0,e.jsx)(t.code,{children:\"steps\"}),\" prop allows an optional \",(0,e.jsx)(t.code,{children:\"href\"}),\", or \",(0,e.jsx)(t.code,{children:\"onClick\"}),\" handler to be provided, making each step label a clickable link to navigate through multi-step flows.\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"In order to support client-side routing implementations, each step also supports an optional \",(0,e.jsx)(t.code,{children:\"as\"}),\" property, accepting a Link component such as \",(0,e.jsx)(t.a,{href:\"https://reacttraining.com/react-router/web/api/Link\",children:\"react-router's Link\"}),\". The any additional props on each step will also be forwarded to the link component.\"]}),`\n`,(0,e.jsx)(o,{code:`() => {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState(new Set());\n\n  const steps = [\n    {label: 'Catering Menu'},\n    {label: 'Delivery Capcity & Hours'},\n    {label: 'Delivery Range & Fees'},\n    {label: 'Order Lead Time'},\n    {label: 'Payment Information'},\n  ].map((step, i) => ({\n    ...step,\n    complete: completed.has(i),\n    onClick: () => setActiveStep(i),\n  }));\n\n  return (\n    <EzLayout layout=\"stack\">\n      <EzProgressTracker\n        steps={steps}\n        selected={steps[activeStep] || steps[steps.length - 1]}\n        orientation=\"vertical\"\n      />\n\n      {/* Buttons to navigatie between steps */}\n      <EzLayout layout=\"split\">\n        {activeStep === steps.length ? (\n          <EzButton\n            use=\"primary\"\n            onClick={() => {\n              setActiveStep(0);\n              setCompleted(new Set());\n            }}\n          >\n            Reset\n          </EzButton>\n        ) : (\n          <>\n            <EzLayout>\n              <EzButton\n                use=\"tertiary\"\n                disabled={activeStep === 0}\n                onClick={() => setActiveStep(activeStep - 1)}\n              >\n                Prev\n              </EzButton>\n              <EzButton\n                use=\"primary\"\n                onClick={() => {\n                  if (completed.has(activeStep)) completed.delete(activeStep);\n                  else completed.add(activeStep);\n                  setCompleted(new Set(completed));\n                }}\n              >\n                {completed.has(activeStep) ? 'Mark as Incomplete' : 'Mark as Complete'}\n              </EzButton>\n            </EzLayout>\n            {steps[activeStep].label}\n            <EzButton use=\"primary\" onClick={() => setActiveStep(activeStep + 1)}>\n              {activeStep < steps.length - 1 ? 'Next' : 'Finish'}\n            </EzButton>\n          </>\n        )}\n      </EzLayout>\n    </EzLayout>\n  );\n};`,language:\"jsx\",children:(0,e.jsx)(c,{children:()=>{let[s,n]=React.useState(0),[a,d]=React.useState(new Set),i=[{label:\"Catering Menu\"},{label:\"Delivery Capcity & Hours\"},{label:\"Delivery Range & Fees\"},{label:\"Order Lead Time\"},{label:\"Payment Information\"}].map((k,v)=>({...k,complete:a.has(v),onClick:()=>n(v)}));return(0,e.jsxs)(p,{layout:\"stack\",children:[(0,e.jsx)(u,{steps:i,selected:i[s]||i[i.length-1],orientation:\"vertical\"}),(0,e.jsx)(p,{layout:\"split\",children:s===i.length?(0,e.jsx)(l,{use:\"primary\",onClick:()=>{n(0),d(new Set)},children:\" Reset\"}):(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(p,{children:[(0,e.jsx)(l,{use:\"tertiary\",disabled:s===0,onClick:()=>n(s-1),children:\" Prev\"}),(0,e.jsx)(l,{use:\"primary\",onClick:()=>{a.has(s)?a.delete(s):a.add(s),d(new Set(a))},children:a.has(s)?\"Mark as Incomplete\":\"Mark as Complete\"})]}),i[s].label,(0,e.jsx)(l,{use:\"primary\",onClick:()=>n(s+1),children:s<i.length-1?\"Next\":\"Finish\"})]})})]})}})}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.h2,{id:\"browser-support\",children:\"Browser support\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"The Progress Tracker component internally uses \",(0,e.jsx)(t.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\",children:(0,e.jsx)(t.code,{children:\"Array.prototype.findIndex()\"})}),\" and may require a polyfill to provide \",(0,e.jsx)(t.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex#browser_compatibility\",children:\"browser support\"}),\" depending on the specific requirements for your application. We recommend using \",(0,e.jsx)(t.a,{href:\"https://polyfill.io/v3/\",children:\"Polyfill.io\"}),\" in your application to apply necessary polyfills only when they are needed for the requesting browser.\"]}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.h2,{id:\"related-components\",children:\"Related components\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsx)(t.li,{children:(0,e.jsx)(t.a,{href:\"/components/ez-related\",children:\"Related\"})}),`\n`]})]});return m?(0,e.jsx)(m,Object.assign({},r,{children:y})):y}var j=P;return D;})();\n;return Component.default;","toc":[{"children":[],"id":"best-practices","textContent":"Best Practices"},{"children":[{"children":[],"id":"horizontal-progress-tracker","textContent":"Horizontal progress tracker"},{"children":[],"id":"vertical-progress-tracker","textContent":"Vertical progress tracker"},{"children":[],"id":"navigating-through-steps","textContent":"Navigating through steps"}],"id":"examples","textContent":"Examples"},{"children":[],"id":"browser-support","textContent":"Browser support"},{"children":[],"id":"related-components","textContent":"Related components"}],"filePath":"src/components/EzProgressTracker/EzProgressTracker.md"},"__N_SSG":true}