{"version":3,"sources":["webpack:///./src/components/Preview.js","webpack:///./node_modules/buble/dist/buble-browser-deps.umd.js"],"names":["opts","objectAssign","transforms","dangerousForOf","dangerousTaggedTemplateString","poly","assign","target","_varArgs","TypeError","to","Object","index","arguments","length","nextSource","nextKey","prototype","hasOwnProperty","call","ErrorBoundary","state","hasError","getDerivedStateFromError","render","this","props","children","React","Component","Eval","code","scope","codeTrimmed","trim","replace","result","scopeKeys","keys","scopeValues","map","key","Function","evalCode","buble","createElement","Container","exports","reservedWords","3","5","6","strict","strictBind","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","set","pos","i","isIdentifierStart","astral","test","String","fromCharCode","isIdentifierChar","TokenType","label","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","name","prec","keywords$1","kw","options","types","num","regexp","string","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","source","isNewLine","ecma2019String","nonASCIIwhitespace","skipWhiteSpace","ref","toString","has","obj","propName","isArray","Array","wordsRegexp","words","Position","line","col","column","offset","n","SourceLocation","p","start","end","sourceFile","getLineInfo","input","cur","lastIndex","match","exec","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","getOptions","opt","tokens","token","push","array","block","text","startLoc","endLoc","comment","type","value","loc","range","pushComment","functionFlags","async","generator","Parser","startPos","reserved","v","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","lineStart","lastIndexOf","curLine","slice","split","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","yieldPos","awaitPos","awaitIdentPos","labels","undefinedExports","skipLineComment","scopeStack","enterScope","regexpState","prototypeAccessors","inFunction","configurable","inGenerator","inAsync","allowSuper","allowDirectSuper","treatFunctionsAsVar","parse","node","startNode","nextToken","parseTopLevel","get","currentVarScope","flags","currentThisScope","treatFunctionsAsVarInScope","currentScope","inNonArrowFunction","extend","plugins","len","cls","parseExpressionAt","parser","parseExpression","tokenizer","defineProperties","pp","literal","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","eat","next","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","body","stmt","parseStatement","list","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","isAsyncFunction","charAt","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseImport","parseExport","maybeName","parseLabeledStatement","parseExpressionStatement","isBreak","parseIdent","lab","pop","parseParenExpression","awaitAt","parseFor","init$1","parseVar","declarations","init","parseForIn","toAssignable","checkLVal","isAsync","declarationPosition","parseFunction","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","exitScope","empty","handler","clause","param","parseBindingAtom","simple","finalizer","object","i$1","label$1","statementStart","indexOf","createNewLexicalScope","update","id","left","right","parseMaybeAssign","isFor","decl","parseVarId","statement","allowExpressionBody","initFunction","oldYieldPos","oldAwaitPos","oldAwaitIdentPos","parseFunctionParams","parseFunctionBody","params","parseBindingList","isStatement","oldStrict","parseClassId","parseClassSuper","classBody","hadConstructor","element","parseClassElement","superClass","constructorAllowsSuper","this$1","method","tryContextual","k","noLineBreak","computed","startNodeAt","isGenerator","parsePropertyName","allowsDirectSuper","parseClassMethod","parseMethod","parseExprSubscripts","parseExprAtom","checkExport","fNode","declaration","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkLocalExport","checkPatternExport","pat","properties","prop","list$1","elements","elt","decls","nodes","first","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","raw","pp$2","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","declareName","pp$3","checkPropClash","propHash","shorthand","proto","other","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","oldShorthandAssign","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","skipArrowSubscripts","parseSubscripts","base","noCalls","maybeAsyncArrow","parseSubscript","property","parseExprList","parseArrowExpression","callee","tag","quasi","parseTemplate","isTagged","readRegexp","canBeArrow","parseLiteral","regex","pattern","parseParenAndDistinguishExpression","parseNew","val","spreadStart","innerStartPos","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty$1","meta","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isMethod","isExpression","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","allowDuplicates","nameHash","liberal","delegate","pp$4","message","err","SyntaxError","raisedAt","pp$5","Scope","lexical","functions","redeclared","scope$2","scope$3","SCOPE_TOP","Node","pp$6","TokContext","isExpr","preserveSpace","override","types$1","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","parent","curContext","inGeneratorContext","out","statementParens","allowed","ecma9BinaryProperties","unicodeBinaryProperties","9","10","unicodeGeneralCategoryValues","ecma9ScriptValues","unicodeScriptValues","data","buildUnicodeData","d","binary","nonBinary","General_Category","Script","Script_Extensions","gc","sc","scx","pp$9","RegExpValidationState","validFlags","unicodeProperties","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","codePointToString$1","ch","isSyntaxCharacter","isControlLetter","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","reset","unicode","at","s","l","c","nextIndex","current","lookahead","advance","validateRegExpFlags","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","max","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","isRegExpIdentifierStart","isRegExpIdentifierPart","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","isCharacterClassEscape","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","Token","pp$8","codePointToString","getToken","Symbol","iterator","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","finishOp","readToken_mult_modulo_exp","size","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readRadixNumber","readString","str","escaped","inClass","flagsStart","readWord1","e","readInt","radix","total","Infinity","startsWithDot","octal","parseInt","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","substr","word","escStart","esc","acorn","freeze","version","tokTypes","keywordTypes","tokContexts","xhtml","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","hexNumber","decimalNumber","tt","TokContext$1","TokenType$1","isNewLine$1","isIdentifierStart$1","isIdentifierChar$1","tc_oTag","tc_cTag","tc_expr","tok","jsxName","jsxText","jsxTagStart","jsxTagEnd","getQualifiedJSXName","namespace","acornJsx","anonymous","apply","__proto__","create","constructor","jsx_readToken","jsx_readEntity","jsx_readNewLine","normalizeCRLF","jsx_readString","entity","count","jsx_readWord","jsx_parseIdentifier","jsx_parseNamespacedName","allowNamespaces","jsx_parseElementName","allowNamespacedObjects","newNode","jsx_parseAttributeValue","jsx_parseExpressionContainer","jsx_parseEmptyExpression","jsx_parseAttribute","jsx_parseOpeningElementAt","attributes","nodeName","selfClosing","jsx_parseClosingElementAt","jsx_parseElementAt","openingElement","closingElement","contents","fragmentOrElement","jsx_parseText","jsx_parseElement","refShortHandDefaultPos","plugin","commonjsGlobal","window","global","self","createCommonjsModule","fn","module","x","lib","defineProperty","DynamicImportKey","undefined","_createClass","descriptor","enumerable","writable","Constructor","protoProps","staticProps","_get","receiver","desc","getOwnPropertyDescriptor","getPrototypeOf","getter","_classCallCheck","instance","_possibleConstructorReturn","ReferenceError","_Parser","subClass","setPrototypeOf","_inherits","parenAfter","parseDynamicImport","acornDynamicImport","__esModule","encodeInteger","clamped","Chunk","content","original","intro","outro","storeName","edited","previous","appendLeft","appendRight","clone","chunk","contains","eachNext","eachPrevious","edit","contentOnly","prependLeft","prependRight","sliceIndex","originalBefore","originalAfter","newChunk","trimEnd","rx","trimmed","trimStart","btoa","Error","unescape","encodeURIComponent","Buffer","from","SourceMap","file","sources","sourcesContent","names","mappings","decoded","sourceFileIndex","sourceCodeLine","sourceCodeColumn","nameIndex","generatedCodeColumn","lineMappings","_i","line_1","segment","segmentMappings","join","encode","guessIndent","lines","tabbed","filter","spaced","reduce","numSpaces","Math","getRelativePath","fromParts","toParts","shift","concat","JSON","stringify","toUrl","toString$1","getLocator","originalLines","lineOffsets","j","m","Mappings","hires","generatedCodeLine","rawSegments","pending","addEdit","sourceIndex","addUneditedChunk","sourcemapLocations","originalCharIndex","warned","insertLeft","insertRight","MagicString","firstChunk","lastChunk","lastSearchedChunk","byStart","byEnd","filename","indentExclusionRanges","storedNames","indentStr","toJSON","forEach","addSourcemapLocation","_char2","append","_split","cloned","originalChunk","clonedChunk","nextOriginalChunk","nextClonedChunk","generateDecodedMap","locate","includeContent","generateMap","getIndentString","indent","thing","isExcluded","exclude","exclusion","shouldIndentNextCharacter","indentStart","replacer","charIndex","_char3","_splitChunk","insert","console","warn","move","oldLeft","oldRight","newRight","newLeft","overwrite","prepend","remove","lastChar","lastLine","lineIndex","lineStr","startChunk","containsEnd","sliceStart","sliceEnd","snip","searchForward","isEmpty","trimLines","charType","trimEndAborted","aborted","trimStartAborted","Node$1","extractNames","extractors","ancestor","level","findLexicalBoundary","findNearest","unparenthesizedParent","unparenthesize","findScope","functionScope","getIndentation","initialise","magicString","transpile","Identifier","ObjectPattern","Property","ArrayPattern","RestElement","AssignmentPattern","Scope$1","isBlockScope","createDeclarationCallback","declare","identifiers","references","blockScopedDeclarations","aliases","lineEnd","repeat","getSnippet","numDigits","snippet","addDeclaration","identifier","instances","addReference","consolidated","consolidateReference","consolidate","createIdentifier","counter","createDeclaration","findDeclaration","resolveName","CompileError","stack","missingTransform","feature","transformKey","dangerousKey","findIndex","handlers","destructureIdentifier","inline","statementGenerators","isIdentifier","suffix","destructure","handleProperty","destructureObjectPattern","nonRestKeys","helper","getObjectWithoutPropertiesHelper","destructureMemberExpression","Boolean","ref$1","BlockStatement","createScope","parentIsFunction","isFunctionBlock","createdDeclarations","thisAlias","argumentsAlias","defaultParameters","getArgumentsAlias","getArgumentsArrayAlias","argumentsArrayAlias","getThisAlias","indentation","useOuter","synthetic","_char4","indentString","introStatementGenerators","assignment","transpileParameters","letConst","transpileBlockScopedIdentifiers","defaultParameter","lhs","spreadRest","penultimateParam","start$1","parameterDestructuring","i$2","list$2","cont","forStatement","shouldRewriteAsFunction","outerAlias","innerAlias","reassigned","outer","inner","alias","alias$1","identifier$1","rewritten","isArguments","inlineSpreads","subelements","some","subelement","isLast","splice","needsParentheses","spread","isNew","firstSpreadIndex","element$1","element$2","previousElement","addClosingParen","ArrayExpression","lexicalBoundary","lastElement","removeTrailingComma","ArrowFunctionExpression","asyncAwait","openParensPos","naked","needsArguments","standalone","trailingFunctionCommas","checkConst","AssignmentExpression","exponentiation","transpileExponentiation","destructuring","transpileDestructuring","writeScope","lookupScope","needsObjectVar","needsPropertyVar","i0","AwaitExpression","BinaryExpression","loopStatement","BreakStatement","switchCase","depth","canBreak","CallExpression","arg","hasSpreadElements","firstArgument","callExpression","noCall","ClassBody","inFunctionExpression","superName","classes","i1","constructorIndex","introBlock","outroBlock","isConstructorBody","previousMethod","nextMethod","namedFunctions","namedFunctionExpressions","namedConstructor","inheritanceBlock","fn$1","staticAccessors","prototypeGettersAndSetters","staticGettersAndSetters","getterSetter","isAccessor","methodName","fake_computed","funcName","rhs","constructorName","ClassDeclaration","indentStrLen","indentExclusions","removeStart","deindent","isExportDefaultDeclaration","syntheticDefaultExport","ClassExpression","ContinueStatement","ExportDefaultDeclaration","moduleExport","ExportNamedDeclaration","LoopStatement","createdScope","thisRefs","nearestFunctionExpression","needsBlock","argString","args","paramString","before","after","canReturn","returned","ForStatement","LoopStatement$$1","declarator","updates","lastStatement","ForInStatement","hasDeclaration","maybePattern","destructurePattern","isDeclaration","bodyStart","ForOfStatement","forOf","maybeDestructuring","FunctionDeclaration","FunctionExpression","conciseMethodProperty","isReference","arrowFunction","IfStatement","Import","moduleImport","ImportDeclaration","ImportDefaultSpecifier","ImportSpecifier","JSXAttribute","JSXClosingElement","spaceBeforeParen","lastChild","JSXClosingFragment","normalise","removeTrailingWhitespace","JSXElement","child","openingFragment","JSXExpressionContainer","JSXFragment","JSXElement$$1","JSXOpeningElement","jsx","html","toLowerCase","hasSpread","attr","lastAttr","nextAttr","JSXOpeningFragment","jsxFragment","JSXSpreadAttribute","regjsgen","root","freeExports","nodeType","hasFreeModule","freeGlobal","fromCodePoint","codePoint","Number","isFinite","floor","RangeError","highSurrogate","lowSurrogate","assertTypeRegexMap","assertType","expected","generate","generators","generateClassAtom","generateIdentifier","generateTerm","terms","classRanges","negative","behavior","behaviour","quantifier","greedy","generateAtom","matchIndex","toUpperCase","stringFromCharCode","regjsparser","MAX_SIZE","codeUnits","features","addRaw","substring","updateRawStart","createAnchor","rawLength","createValue","createEscaped","fromOffset","createCharacter","matches","second","_char","hasUnicodeFlag","createQuantifier","createCharacterClass","createClassRange","bail","flattenBody","incr","amount","res","matchReg","regExp","parseDisjunction","parseAlternative","alternatives","createDisjunction","term","parseTerm","createAlternative","anchor","parseGroup","atom","parseAtomEscape","parseClassRanges","parseCharacterClass","namedGroups","parseIdentifier","group","finishGroup","parseAtom","parseQuantifier","matchA","typeA","matchB","typeB","disjunction","createGroup","firstIteration","closedCaptureCounter","parseUnicodeSurrogatePairEscape","firstEscape","prevPos","secondEscape","parseClassEscape","insideCharacterClass","refIdx","backrefDenied","parseDecimalEscape","createNamedReference","parseNamedReference","tmp","parseRegExpUnicodeEscapeSequence","unicodePropertyEscape","parseCharacterEscape","parseIdentifierAtom","check","isIdentifierPart","parseClassAtom","parseHelperClassRanges","parseNonemptyClassRangesNoDash","details","contextStart","contextEnd","pointer","regenerate","freeModule","ERRORS","regexNull","callback","isNumber","pad","number","totalCharacters","hex","dataRemove","dataRemoveRange","rangeStart","rangeEnd","dataAdd","dataAddData","dataA","dataB","dataAddRange","dataRemoveData","added","dataContains","dataIsEmpty","dataIsSingleton","dataToArray","codePointToStringUnicode","symbolToCodePoint","symbol","createBMPCharacterClasses","optimizeByLowSurrogates","surrogateMappings","innerIndex","mapping","lowSurrogates","lowSurrogateStart","lowSurrogateEnd","otherMapping","otherLowSurrogates","otherLowSurrogateStart","otherLowSurrogateEnd","surrogateSet","startHigh","startLow","endHigh","endLow","endsWithHighestLowSurrogate","complete","LOW_SURROGATE_MAX","nextMapping","highSurrogates","nextHighSurrogates","nextLowSurrogates","tmpLow","addLow","optimizeSurrogateMappings","createCharacterClassesFromData","bmpOnly","createUnicodeCharacterClasses","parts","loneHighSurrogates","loneLowSurrogates","bmp","HIGH_SURROGATE_MAX","splitAtBMP","hasLoneHighSurrogates","hasLoneLowSurrogates","surrogateMapping","createSurrogateCharacterClasses","add","destination","$this","startCodePoint","endCodePoint","codePoints","isStart","dataFromCodePoints","dataIntersection","toArray","valueOf","unicodeCanonicalPropertyNamesEcmascript","Set","unicodePropertyAliasesEcmascript","Map","unicodeMatchPropertyEcmascript","unicodeMatchPropertyValueEcmascript","aliasToValue","canonicalValue","iuMappings","characterClassEscapeSets","REGULAR","addRange","UNICODE","UNICODE_IGNORE_CASE","parse$1","UNICODE_SET","BMP_SET","DOT_SET_UNICODE","DOT_SET","intersection","getCharacterClassEscapeSet","character","ignoreCase","getUnicodePropertyValueSet","commonjsRequire","exception","getUnicodePropertyEscapeSet","isNegative","firstPart","category","handleLoneUnicodePropertyNameOrValue","value$1","iuAddRange","folded","caseFold","tree","config","useUnicodeFlag","wrap","updateNamedReference","processTerm","regenerateOptions","groups","dotAll","characterClassItem","processCharacterClass","onNamedGroup","unmatchedReferences","reference","name$1","index$1","rewritePattern_1","regjsparserFeatures","namedGroup","includes","supportDotAllFlag","dotAllFlag","unmatchedReferencesNames","assertNoUnmatchedReferences","nonAsciiLsOrPs","types$2","DoWhileStatement","Literal","indentExclusionElements","numericLiteral","stickyRegExp","unicodeRegExp","MemberExpression","reservedProperties","NewExpression","ObjectExpression","firstPropertyStart","spreadPropertyCount","computedPropertyCount","firstSpreadProperty","firstComputedProperty","computedProperty","objectRestSpread","prop$1","lastProp","nextProp","isSimpleAssignment","lastComputedProp","sawNonComputedProperty","isFirst","prop$2","moveStart","propId$1","propId","beginEnd","closing","c$1","ReturnStatement","nearestFunction","shouldWrap","Super","parentClass","superClassName","isCalled","isMember","TaggedTemplateExpression","templateString","ordered","sort","a","b","rootScope","templateStrings","templateObject","templateLiteralQuasis","prependAt","TemplateElement","TemplateLiteral","third","parenthesise","parenthesise$1","ThisExpression","UpdateExpression","VariableDeclaration","lastDeclaratorIsPattern","VariableDeclarator","inLoop","isLeftDeclaratorOfLoop","WhileStatement","Program","statementsWithBlocks","ast","wrap$1","__wrapped","bodyType","objectWithoutPropertiesHelper","matrix","chrome","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","firefox","43","44","45","46","47","safari","8","11","12","ie","edge","13","14","15","16","17","18","19","4","parser$1","dangerousTransforms","bitmask","environment","versions","targetVersion","support","transform","modules","VERSION","factory"],"mappings":"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,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,CAAC,IAAO,IAAO,MAAS,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAS,CAAC,KAAO,MAAS,CAAC,KAAO,MAAS,CAAC,KAAO,MAAS,CAAC,KAAO,MAAS,CAAC,KAAO,MAAS,CAAC,KAAO,MAAS,CAAC,KAAO,MAAS,CAAC,KAAO,MAAS,CAAC,KAAO,MAAS,CAAC,KAAO,CAAC,KAAQ,OAAU,CAAC,KAAO,MAAS,CAAC,KAAO,MAAS,CAAC,KAAO,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,CAAC,KAAO,OAAS,CAAC,KAAQ,CAAC,KAAO,OAAS,CAAC,KAAQ,CAAC,KAAO,OAAS,CAAC,KAAQ,CAAC,KAAO,OAAS,CAAC,KAAQ,CAAC,KAAQ,OAAS,CAAC,KAAQ,CAAC,KAAO,KAAQ,OAAS,CAAC,KAAQ,CAAC,KAAO,OAAS,CAAC,KAAQ,CAAC,KAAO,OAAS,CAAC,KAAQ,CAAC,MAAQ,QAAU,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,OAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,KAAO,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,CAAC,IAAO,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,CAAC,IAAO,MAAS,CAAC,KAAQ,IAAO,CAAC,KAAQ,CAAC,IAAM,MAAQ,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,KAAQ,CAAC,MAAQ,KAAQ,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,KAAQ,CAAC,MAAQ,MAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAQ,MAAS,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC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","file":"9-d33cb9052f768cc77e86.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport * as buble from 'buble/dist/buble-browser-deps.umd.js';\n\nconst opts = {\n  objectAssign: '_poly.assign',\n  transforms: {\n    dangerousForOf: true,\n    dangerousTaggedTemplateString: true,\n  },\n};\n\nconst poly = {\n  assign: function assign(target, _varArgs) {\n    'use strict';\n    if (target === null || target === undefined) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    var to = Object(target);\n\n    for (var index = 1; index < arguments.length; index++) {\n      var nextSource = arguments[index];\n\n      if (nextSource !== null && nextSource !== undefined) {\n        for (var nextKey in nextSource) {\n          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst evalCode = (code, scope) => {\n  const scopeKeys = Object.keys(scope);\n  const scopeValues = scopeKeys.map(key => scope[key]);\n  const res = new Function('_poly', 'React', ...scopeKeys, code);\n  return res(poly, React, ...scopeValues);\n};\n\nclass ErrorBoundary extends React.Component {\n  state = {hasError: false};\n\n  static getDerivedStateFromError() {\n    return {hasError: true};\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport const Eval = ({code = '', scope = {}}) => {\n  // NOTE: Remove trailing semicolon to get an actual expression.\n  const codeTrimmed = code.trim().replace(/;$/, '');\n  const transformed = buble.transform(`return (${codeTrimmed})`, opts).code.trim();\n  const result = evalCode(transformed, scope);\n  return typeof result === 'function' ? React.createElement(result, null) : result;\n};\n\nconst Container = styled.div`\n  border: 1px solid #ced4d9;\n  padding: 20px;\n\n  > * + * {\n    margin-top: 1em;\n    margin-bottom: 0;\n  }\n`;\n\nexport default ({code, scope}) => {\n  return (\n    <Container>\n      <ErrorBoundary>\n        <Eval code={code} scope={scope} />\n      </ErrorBoundary>\n\n      <pre>\n        <code>{code}</code>\n      </pre>\n    </Container>\n  );\n};\n","require(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.map\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.string.from-code-point\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.array.some\");\n\nrequire(\"core-js/modules/es6.date.to-json\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.reduce\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es7.string.trim-left\");\n\nrequire(\"core-js/modules/es7.string.trim-right\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es6.object.freeze\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.object.define-properties\");\n\nrequire(\"core-js/modules/es6.regexp.flags\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.last-index-of\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.buble = {});\n})(this, function (exports) {\n  'use strict'; // Reserved word lists for various dialects of the language\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  }; // And the keywords\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n  var keywords = {\n    5: ecma5AndLessKeywords,\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n  var keywordRelationalOperator = /^in(stanceof)?$/; // ## Character categories\n  // Big ugly regular expressions that match characters in the\n  // whitespace, identifier, and identifier-start categories. These\n  // are only applied when a character is found to actually have a\n  // code point above 128.\n  // Generated by `bin/generate-identifier-regex.js`.\n\n  var nonASCIIidentifierStartChars = \"\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7B9\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\";\n  var nonASCIIidentifierChars = \"\\u200C\\u200D\\xB7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C04\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA8FF-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F\";\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n  nonASCIIidentifierStartChars = nonASCIIidentifierChars = null; // These are a run-length and offset encoded representation of the\n  // >0xffff code points that are a valid part of identifiers. The\n  // offset starts at 0x10000, and each pair of numbers represents an\n  // offset to the next range, and then a size of the range. They were\n  // generated by bin/generate-identifier-regex.js\n  // eslint-disable-next-line comma-spacing\n\n  var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 477, 28, 11, 0, 9, 21, 190, 52, 76, 44, 33, 24, 27, 35, 30, 0, 12, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 54, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 86, 26, 230, 43, 117, 63, 32, 0, 257, 0, 11, 39, 8, 0, 22, 0, 12, 39, 3, 3, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 270, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 68, 12, 0, 67, 12, 65, 1, 31, 6129, 15, 754, 9486, 286, 82, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 4149, 196, 60, 67, 1213, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541]; // eslint-disable-next-line comma-spacing\n\n  var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 525, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 4, 9, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 280, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1016, 45, 17, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 2214, 6, 110, 6, 6, 9, 792487, 239]; // This has a complexity linear to the value of the code. The\n  // assumption is that looking up astral identifier characters is\n  // rare.\n\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n\n      if (pos > code) {\n        return false;\n      }\n\n      pos += set[i + 1];\n\n      if (pos >= code) {\n        return true;\n      }\n    }\n  } // Test whether a given character code starts an identifier.\n\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) {\n      return code === 36;\n    }\n\n    if (code < 91) {\n      return true;\n    }\n\n    if (code < 97) {\n      return code === 95;\n    }\n\n    if (code < 123) {\n      return true;\n    }\n\n    if (code <= 0xffff) {\n      return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n    }\n\n    if (astral === false) {\n      return false;\n    }\n\n    return isInAstralSet(code, astralIdentifierStartCodes);\n  } // Test whether a given character is part of an identifier.\n\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) {\n      return code === 36;\n    }\n\n    if (code < 58) {\n      return true;\n    }\n\n    if (code < 65) {\n      return false;\n    }\n\n    if (code < 91) {\n      return true;\n    }\n\n    if (code < 97) {\n      return code === 95;\n    }\n\n    if (code < 123) {\n      return true;\n    }\n\n    if (code <= 0xffff) {\n      return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n    }\n\n    if (astral === false) {\n      return false;\n    }\n\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n  } // ## Token types\n  // The assignment of fine-grained, information-carrying type objects\n  // allows the tokenizer to store the information it has about a\n  // token in a way that is very cheap for the parser to look up.\n  // All token type variables start with an underscore, to make them\n  // easy to recognize.\n  // The `beforeExpr` property is used to disambiguate between regular\n  // expressions and divisions. It is set on all token types that can\n  // be followed by an expression (thus, a slash after them would be a\n  // regular expression).\n  //\n  // The `startsExpr` property is used to check if the token ends a\n  // `yield` expression. It is set on all token types that either can\n  // directly start an expression (like a quotation mark) or can\n  // continue an expression (like the body of a string).\n  //\n  // `isLoop` marks a keyword as starting a loop, which is important\n  // to know when parsing a label, in order to allow or disallow\n  // continue jumps to that label.\n\n\n  var TokenType = function TokenType(label, conf) {\n    if (conf === void 0) conf = {};\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {\n      beforeExpr: true,\n      binop: prec\n    });\n  }\n\n  var beforeExpr = {\n    beforeExpr: true\n  };\n  var startsExpr = {\n    startsExpr: true\n  }; // Map keyword names to token types.\n\n  var keywords$1 = {}; // Succinct definitions of keyword token types\n\n  function kw(name, options) {\n    if (options === void 0) options = {};\n    options.keyword = name;\n    return keywords$1[name] = new TokenType(name, options);\n  }\n\n  var types = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    eof: new TokenType(\"eof\"),\n    // Punctuation token types.\n    bracketL: new TokenType(\"[\", {\n      beforeExpr: true,\n      startsExpr: true\n    }),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {\n      beforeExpr: true,\n      startsExpr: true\n    }),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {\n      beforeExpr: true,\n      startsExpr: true\n    }),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {\n      beforeExpr: true,\n      startsExpr: true\n    }),\n    // Operators. These carry several kinds of properties to help the\n    // parser use them properly (the presence of these properties is\n    // what categorizes them as operators).\n    //\n    // `binop`, when present, specifies that this operator is a binary\n    // operator, and will refer to its precedence.\n    //\n    // `prefix` and `postfix` mark the operator as a prefix or postfix\n    // unary operator.\n    //\n    // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n    // binary operators with a very low precedence, that should result\n    // in AssignmentExpression nodes.\n    eq: new TokenType(\"=\", {\n      beforeExpr: true,\n      isAssign: true\n    }),\n    assign: new TokenType(\"_=\", {\n      beforeExpr: true,\n      isAssign: true\n    }),\n    incDec: new TokenType(\"++/--\", {\n      prefix: true,\n      postfix: true,\n      startsExpr: true\n    }),\n    prefix: new TokenType(\"!/~\", {\n      beforeExpr: true,\n      prefix: true,\n      startsExpr: true\n    }),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {\n      beforeExpr: true,\n      binop: 9,\n      prefix: true,\n      startsExpr: true\n    }),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {\n      beforeExpr: true\n    }),\n    // Keyword token types.\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {\n      isLoop: true,\n      beforeExpr: true\n    }),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {\n      isLoop: true\n    }),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {\n      isLoop: true\n    }),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {\n      beforeExpr: true,\n      startsExpr: true\n    }),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\"),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {\n      beforeExpr: true,\n      binop: 7\n    }),\n    _instanceof: kw(\"instanceof\", {\n      beforeExpr: true,\n      binop: 7\n    }),\n    _typeof: kw(\"typeof\", {\n      beforeExpr: true,\n      prefix: true,\n      startsExpr: true\n    }),\n    _void: kw(\"void\", {\n      beforeExpr: true,\n      prefix: true,\n      startsExpr: true\n    }),\n    _delete: kw(\"delete\", {\n      beforeExpr: true,\n      prefix: true,\n      startsExpr: true\n    })\n  }; // Matches a whole line break (where CRLF is considered a single\n  // line break). Used to count lines.\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code, ecma2019String) {\n    return code === 10 || code === 13 || !ecma2019String && (code === 0x2028 || code === 0x2029);\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString; // Checks if an object has a property.\n\n  function has(obj, propName) {\n    return hasOwnProperty.call(obj, propName);\n  }\n\n  var isArray = Array.isArray || function (obj) {\n    return toString.call(obj) === \"[object Array]\";\n  };\n\n  function wordsRegexp(words) {\n    return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\");\n  } // These are used when `options.locations` is on, for the\n  // `startLoc` and `endLoc` properties.\n\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset(n) {\n    return new Position(this.line, this.column + n);\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n\n    if (p.sourceFile !== null) {\n      this.source = p.sourceFile;\n    }\n  }; // The `getLineInfo` function is mostly useful when the\n  // `locations` option is off (for performance reasons) and you\n  // want to find the line/column position for a given character\n  // offset. `input` should be the code string that the offset refers\n  // into.\n\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      lineBreakG.lastIndex = cur;\n      var match = lineBreakG.exec(input);\n\n      if (match && match.index < offset) {\n        ++line;\n        cur = match.index + match[0].length;\n      } else {\n        return new Position(line, offset - cur);\n      }\n    }\n  } // A second optional argument can be given to further configure\n  // the parser process. These options are recognized:\n\n\n  var defaultOptions = {\n    // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n    // either 3, 5, 6 (2015), 7 (2016), 8 (2017), 9 (2018), or 10\n    // (2019). This influences support for strict mode, the set of\n    // reserved words, and support for new syntax features. The default\n    // is 9.\n    ecmaVersion: 9,\n    // `sourceType` indicates the mode the code should be parsed in.\n    // Can be either `\"script\"` or `\"module\"`. This influences global\n    // strict mode and parsing of `import` and `export` declarations.\n    sourceType: \"script\",\n    // `onInsertedSemicolon` can be a callback that will be called\n    // when a semicolon is automatically inserted. It will be passed\n    // the position of the comma as an offset, and if `locations` is\n    // enabled, it is given the location as a `{line, column}` object\n    // as second argument.\n    onInsertedSemicolon: null,\n    // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n    // trailing commas.\n    onTrailingComma: null,\n    // By default, reserved words are only enforced if ecmaVersion >= 5.\n    // Set `allowReserved` to a boolean value to explicitly turn this on\n    // an off. When this option has the value \"never\", reserved words\n    // and keywords can also not be used as property names.\n    allowReserved: null,\n    // When enabled, a return at the top level is not considered an\n    // error.\n    allowReturnOutsideFunction: false,\n    // When enabled, import/export statements are not constrained to\n    // appearing at the top of the program.\n    allowImportExportEverywhere: false,\n    // When enabled, await identifiers are allowed to appear at the top-level scope,\n    // but they are still not allowed in non-async functions.\n    allowAwaitOutsideFunction: false,\n    // When enabled, hashbang directive in the beginning of file\n    // is allowed and treated as a line comment.\n    allowHashBang: false,\n    // When `locations` is on, `loc` properties holding objects with\n    // `start` and `end` properties in `{line, column}` form (with\n    // line being 1-based and column 0-based) will be attached to the\n    // nodes.\n    locations: false,\n    // A function can be passed as `onToken` option, which will\n    // cause Acorn to call that function with object in the same\n    // format as tokens returned from `tokenizer().getToken()`. Note\n    // that you are not allowed to call the parser from the\n    // callback—that will corrupt its internal state.\n    onToken: null,\n    // A function can be passed as `onComment` option, which will\n    // cause Acorn to call that function with `(block, text, start,\n    // end)` parameters whenever a comment is skipped. `block` is a\n    // boolean indicating whether this is a block (`/* */`) comment,\n    // `text` is the content of the comment, and `start` and `end` are\n    // character offsets that denote the start and end of the comment.\n    // When the `locations` option is on, two more parameters are\n    // passed, the full `{line, column}` locations of the start and\n    // end of the comments. Note that you are not allowed to call the\n    // parser from the callback—that will corrupt its internal state.\n    onComment: null,\n    // Nodes have their start and end characters offsets recorded in\n    // `start` and `end` properties (directly on the node, rather than\n    // the `loc` object, which holds line/column data. To also add a\n    // [semi-standardized][range] `range` property holding a `[start,\n    // end]` array with the same numbers, set the `ranges` option to\n    // `true`.\n    //\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n    ranges: false,\n    // It is possible to parse multiple files into a single AST by\n    // passing the tree produced by parsing the first file as\n    // `program` option in subsequent parses. This will add the\n    // toplevel forms of the parsed file to the `Program` (top) node\n    // of an existing parse tree.\n    program: null,\n    // When `locations` is on, you can pass this to record the source\n    // file in every node's `loc` object.\n    sourceFile: null,\n    // This value, if given, is stored in every node, whether\n    // `locations` is on or off.\n    directSourceFile: null,\n    // When enabled, parenthesized expressions are represented by\n    // (non-standard) ParenthesizedExpression nodes\n    preserveParens: false\n  }; // Interpret and default an options object\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions) {\n      options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt];\n    }\n\n    if (options.ecmaVersion >= 2015) {\n      options.ecmaVersion -= 2009;\n    }\n\n    if (options.allowReserved == null) {\n      options.allowReserved = options.ecmaVersion < 5;\n    }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n\n      options.onToken = function (token) {\n        return tokens.push(token);\n      };\n    }\n\n    if (isArray(options.onComment)) {\n      options.onComment = pushComment(options, options.onComment);\n    }\n\n    return options;\n  }\n\n  function pushComment(options, array) {\n    return function (block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n\n      if (options.locations) {\n        comment.loc = new SourceLocation(this, startLoc, endLoc);\n      }\n\n      if (options.ranges) {\n        comment.range = [start, end];\n      }\n\n      array.push(comment);\n    };\n  } // Each scope gets a bitset that may contain these flags\n\n\n  var SCOPE_TOP = 1;\n  var SCOPE_FUNCTION = 2;\n  var SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION;\n  var SCOPE_ASYNC = 4;\n  var SCOPE_GENERATOR = 8;\n  var SCOPE_ARROW = 16;\n  var SCOPE_SIMPLE_CATCH = 32;\n  var SCOPE_SUPER = 64;\n  var SCOPE_DIRECT_SUPER = 128;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0);\n  } // Used in checkLVal and declareName to determine the type of a binding\n\n\n  var BIND_NONE = 0;\n  var BIND_VAR = 1;\n  var BIND_LEXICAL = 2;\n  var BIND_FUNCTION = 3;\n  var BIND_SIMPLE_CATCH = 4;\n  var BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5]);\n    var reserved = \"\";\n\n    if (!options.allowReserved) {\n      for (var v = options.ecmaVersion;; v--) {\n        if (reserved = reservedWords[v]) {\n          break;\n        }\n      }\n\n      if (options.sourceType === \"module\") {\n        reserved += \" await\";\n      }\n    }\n\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input); // Used to signal to callers of `readWord1` whether the word\n    // contained any escape sequences. This is needed because words with\n    // escape sequences must not be interpreted as keywords.\n\n    this.containsEsc = false; // Set up token state\n    // The current position of the tokenizer in the input.\n\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    } // Properties of the current token:\n    // Its type\n\n\n    this.type = types.eof; // For tokens that include more information than their type, the value\n\n    this.value = null; // Its start and end offset\n\n    this.start = this.end = this.pos; // And, if locations are used, the {line, column} object\n    // corresponding to those offsets\n\n    this.startLoc = this.endLoc = this.curPosition(); // Position information for the previous token\n\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos; // The context stack is used to superficially track syntactic\n    // context to predict whether a regular expression is allowed in a\n    // given position.\n\n    this.context = this.initialContext();\n    this.exprAllowed = true; // Figure out if it's a module code.\n\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos); // Used to signify the start of a potential arrow function\n\n    this.potentialArrowAt = -1; // Positions to delayed-check that yield/await does not exist in default parameters.\n\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0; // Labels in scope.\n\n    this.labels = []; // Thus-far undefined exports.\n\n    this.undefinedExports = {}; // If enabled, skip leading hashbang line.\n\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\") {\n      this.skipLineComment(2);\n    } // Scope tracking for duplicate variable names (see scope.js)\n\n\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP); // For RegExp validation\n\n    this.regexpState = null;\n  };\n\n  var prototypeAccessors = {\n    inFunction: {\n      configurable: true\n    },\n    inGenerator: {\n      configurable: true\n    },\n    inAsync: {\n      configurable: true\n    },\n    allowSuper: {\n      configurable: true\n    },\n    allowDirectSuper: {\n      configurable: true\n    },\n    treatFunctionsAsVar: {\n      configurable: true\n    }\n  };\n\n  Parser.prototype.parse = function parse() {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node);\n  };\n\n  prototypeAccessors.inFunction.get = function () {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  };\n\n  prototypeAccessors.inGenerator.get = function () {\n    return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0;\n  };\n\n  prototypeAccessors.inAsync.get = function () {\n    return (this.currentVarScope().flags & SCOPE_ASYNC) > 0;\n  };\n\n  prototypeAccessors.allowSuper.get = function () {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  };\n\n  prototypeAccessors.allowDirectSuper.get = function () {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  };\n\n  prototypeAccessors.treatFunctionsAsVar.get = function () {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }; // Switch to a getter for 7.0.0.\n\n\n  Parser.prototype.inNonArrowFunction = function inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  };\n\n  Parser.extend = function extend() {\n    var plugins = [],\n        len = arguments.length;\n\n    while (len--) {\n      plugins[len] = arguments[len];\n    }\n\n    var cls = this;\n\n    for (var i = 0; i < plugins.length; i++) {\n      cls = plugins[i](cls);\n    }\n\n    return cls;\n  };\n\n  Parser.parse = function parse(input, options) {\n    return new this(options, input).parse();\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt(input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression();\n  };\n\n  Parser.tokenizer = function tokenizer(input, options) {\n    return new this(options, input);\n  };\n\n  Object.defineProperties(Parser.prototype, prototypeAccessors);\n  var pp = Parser.prototype; // ## Parser utilities\n\n  var literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\")/;\n\n  pp.strictDirective = function (start) {\n    var this$1 = this;\n\n    for (;;) {\n      // Try to find string literal.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this$1.input)[0].length;\n      var match = literal.exec(this$1.input.slice(start));\n\n      if (!match) {\n        return false;\n      }\n\n      if ((match[1] || match[2]) === \"use strict\") {\n        return true;\n      }\n\n      start += match[0].length; // Skip semicolon, if any.\n\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this$1.input)[0].length;\n\n      if (this$1.input[start] === \";\") {\n        start++;\n      }\n    }\n  }; // Predicate that tests whether the next token is of the given\n  // type, and if yes, consumes it as a side effect.\n\n\n  pp.eat = function (type) {\n    if (this.type === type) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }; // Tests whether parsed token is a contextual keyword.\n\n\n  pp.isContextual = function (name) {\n    return this.type === types.name && this.value === name && !this.containsEsc;\n  }; // Consumes contextual keyword if possible.\n\n\n  pp.eatContextual = function (name) {\n    if (!this.isContextual(name)) {\n      return false;\n    }\n\n    this.next();\n    return true;\n  }; // Asserts that following token is given contextual keyword.\n\n\n  pp.expectContextual = function (name) {\n    if (!this.eatContextual(name)) {\n      this.unexpected();\n    }\n  }; // Test whether a semicolon can be inserted at the current position.\n\n\n  pp.canInsertSemicolon = function () {\n    return this.type === types.eof || this.type === types.braceR || lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n  };\n\n  pp.insertSemicolon = function () {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon) {\n        this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc);\n      }\n\n      return true;\n    }\n  }; // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n\n  pp.semicolon = function () {\n    if (!this.eat(types.semi) && !this.insertSemicolon()) {\n      this.unexpected();\n    }\n  };\n\n  pp.afterTrailingComma = function (tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma) {\n        this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc);\n      }\n\n      if (!notNext) {\n        this.next();\n      }\n\n      return true;\n    }\n  }; // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error.\n\n\n  pp.expect = function (type) {\n    this.eat(type) || this.unexpected();\n  }; // Raise an unexpected token error.\n\n\n  pp.unexpected = function (pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  function DestructuringErrors() {\n    this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;\n  }\n\n  pp.checkPatternErrors = function (refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) {\n      return;\n    }\n\n    if (refDestructuringErrors.trailingComma > -1) {\n      this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\");\n    }\n\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n\n    if (parens > -1) {\n      this.raiseRecoverable(parens, \"Parenthesized pattern\");\n    }\n  };\n\n  pp.checkExpressionErrors = function (refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) {\n      return false;\n    }\n\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n\n    if (!andThrow) {\n      return shorthandAssign >= 0 || doubleProto >= 0;\n    }\n\n    if (shorthandAssign >= 0) {\n      this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\");\n    }\n\n    if (doubleProto >= 0) {\n      this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\");\n    }\n  };\n\n  pp.checkYieldAwaitInDefaultParams = function () {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos)) {\n      this.raise(this.yieldPos, \"Yield expression cannot be a default value\");\n    }\n\n    if (this.awaitPos) {\n      this.raise(this.awaitPos, \"Await expression cannot be a default value\");\n    }\n  };\n\n  pp.isSimpleAssignTarget = function (expr) {\n    if (expr.type === \"ParenthesizedExpression\") {\n      return this.isSimpleAssignTarget(expr.expression);\n    }\n\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\";\n  };\n\n  var pp$1 = Parser.prototype; // ### Statement parsing\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  pp$1.parseTopLevel = function (node) {\n    var this$1 = this;\n    var exports = {};\n\n    if (!node.body) {\n      node.body = [];\n    }\n\n    while (this.type !== types.eof) {\n      var stmt = this$1.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n\n    if (this.inModule) {\n      for (var i = 0, list = Object.keys(this$1.undefinedExports); i < list.length; i += 1) {\n        var name = list[i];\n        this$1.raiseRecoverable(this$1.undefinedExports[name].start, \"Export '\" + name + \"' is not defined\");\n      }\n    }\n\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n\n    if (this.options.ecmaVersion >= 6) {\n      node.sourceType = this.options.sourceType;\n    }\n\n    return this.finishNode(node, \"Program\");\n  };\n\n  var loopLabel = {\n    kind: \"loop\"\n  };\n  var switchLabel = {\n    kind: \"switch\"\n  };\n\n  pp$1.isLet = function (context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) {\n      return false;\n    }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length,\n        nextCh = this.input.charCodeAt(next); // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n\n    if (nextCh === 91) {\n      return true;\n    } // '['\n\n\n    if (context) {\n      return false;\n    }\n\n    if (nextCh === 123) {\n      return true;\n    } // '{'\n\n\n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos), true)) {\n        ++pos;\n      }\n\n      var ident = this.input.slice(next, pos);\n\n      if (!keywordRelationalOperator.test(ident)) {\n        return true;\n      }\n    }\n\n    return false;\n  }; // check 'async [no LineTerminator here] function'\n  // - 'async /*foo*/ function' is OK.\n  // - 'async /*\\n*/ function' is invalid.\n\n\n  pp$1.isAsyncFunction = function () {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\")) {\n      return false;\n    }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length;\n    return !lineBreak.test(this.input.slice(this.pos, next)) && this.input.slice(next, next + 8) === \"function\" && (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)));\n  }; // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n\n\n  pp$1.parseStatement = function (context, topLevel, exports) {\n    var starttype = this.type,\n        node = this.startNode(),\n        kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    } // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        // Function as sole body of either an if statement or a labeled statement\n        // works, but not when it is part of a labeled statement that is the sole\n        // body of an if statement.\n        if (context && (this.strict || context !== \"if\" && context !== \"label\") && this.options.ecmaVersion >= 6) {\n          this.unexpected();\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) {\n          this.unexpected();\n        }\n\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.value;\n\n        if (context && kind !== \"var\") {\n          this.unexpected();\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock(true, node);\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._export:\n      case types._import:\n        if (!this.options.allowImportExportEverywhere) {\n          if (!topLevel) {\n            this.raise(this.start, \"'import' and 'export' may only appear at the top level\");\n          }\n\n          if (!this.inModule) {\n            this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\");\n          }\n        }\n\n        return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports);\n      // If the statement does not start with a statement keyword or a\n      // brace, it's an ExpressionStatement or LabeledStatement. We\n      // simply start parsing an expression, and afterwards, if the\n      // next token is a colon and the expression was a simple\n      // Identifier node, we switch to interpreting it as a label.\n\n      default:\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.unexpected();\n          }\n\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n\n        var maybeName = this.value,\n            expr = this.parseExpression();\n\n        if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n          return this.parseLabeledStatement(node, maybeName, expr, context);\n        } else {\n          return this.parseExpressionStatement(node, expr);\n        }\n\n    }\n  };\n\n  pp$1.parseBreakContinueStatement = function (node, keyword) {\n    var this$1 = this;\n    var isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.eat(types.semi) || this.insertSemicolon()) {\n      node.label = null;\n    } else if (this.type !== types.name) {\n      this.unexpected();\n    } else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    } // Verify that there is an actual destination to break or\n    // continue to.\n\n\n    var i = 0;\n\n    for (; i < this.labels.length; ++i) {\n      var lab = this$1.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) {\n          break;\n        }\n\n        if (node.label && isBreak) {\n          break;\n        }\n      }\n    }\n\n    if (i === this.labels.length) {\n      this.raise(node.start, \"Unsyntactic \" + keyword);\n    }\n\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  };\n\n  pp$1.parseDebuggerStatement = function (node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  };\n\n  pp$1.parseDoStatement = function (node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseParenExpression();\n\n    if (this.options.ecmaVersion >= 6) {\n      this.eat(types.semi);\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"DoWhileStatement\");\n  }; // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n\n  pp$1.parseForStatement = function (node) {\n    this.next();\n    var awaitAt = this.options.ecmaVersion >= 9 && (this.inAsync || !this.inFunction && this.options.allowAwaitOutsideFunction) && this.eatContextual(\"await\") ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types.parenL);\n\n    if (this.type === types.semi) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    var isLet = this.isLet();\n\n    if (this.type === types._var || this.type === types._const || isLet) {\n      var init$1 = this.startNode(),\n          kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n\n      if ((this.type === types._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\")) && init$1.declarations.length === 1 && !(kind !== \"var\" && init$1.declarations[0].init)) {\n        if (this.options.ecmaVersion >= 9) {\n          if (this.type === types._in) {\n            if (awaitAt > -1) {\n              this.unexpected(awaitAt);\n            }\n          } else {\n            node[\"await\"] = awaitAt > -1;\n          }\n        }\n\n        return this.parseForIn(node, init$1);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init$1);\n    }\n\n    var refDestructuringErrors = new DestructuringErrors();\n    var init = this.parseExpression(true, refDestructuringErrors);\n\n    if (this.type === types._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\")) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) {\n            this.unexpected(awaitAt);\n          }\n        } else {\n          node[\"await\"] = awaitAt > -1;\n        }\n      }\n\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLVal(init);\n      return this.parseForIn(node, init);\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  };\n\n  pp$1.parseFunctionStatement = function (node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync);\n  };\n\n  pp$1.parseIfStatement = function (node) {\n    this.next();\n    node.test = this.parseParenExpression(); // allow function declarations in branches, but only in non-strict mode\n\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  };\n\n  pp$1.parseReturnStatement = function (node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.start, \"'return' outside of function\");\n    }\n\n    this.next(); // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.eat(types.semi) || this.insertSemicolon()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  };\n\n  pp$1.parseSwitchStatement = function (node) {\n    var this$1 = this;\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0); // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    var cur;\n\n    for (var sawDefault = false; this.type !== types.braceR;) {\n      if (this$1.type === types._case || this$1.type === types._default) {\n        var isCase = this$1.type === types._case;\n\n        if (cur) {\n          this$1.finishNode(cur, \"SwitchCase\");\n        }\n\n        node.cases.push(cur = this$1.startNode());\n        cur.consequent = [];\n        this$1.next();\n\n        if (isCase) {\n          cur.test = this$1.parseExpression();\n        } else {\n          if (sawDefault) {\n            this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\");\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this$1.expect(types.colon);\n      } else {\n        if (!cur) {\n          this$1.unexpected();\n        }\n\n        cur.consequent.push(this$1.parseStatement(null));\n      }\n    }\n\n    this.exitScope();\n\n    if (cur) {\n      this.finishNode(cur, \"SwitchCase\");\n    }\n\n    this.next(); // Closing brace\n\n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  };\n\n  pp$1.parseThrowStatement = function (node) {\n    this.next();\n\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) {\n      this.raise(this.lastTokEnd, \"Illegal newline after throw\");\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }; // Reused empty array added for node fields that are always empty.\n\n\n  var empty = [];\n\n  pp$1.parseTryStatement = function (node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.type === types._catch) {\n      var clause = this.startNode();\n      this.next();\n\n      if (this.eat(types.parenL)) {\n        clause.param = this.parseBindingAtom();\n        var simple = clause.param.type === \"Identifier\";\n        this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n        this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n        this.expect(types.parenR);\n      } else {\n        if (this.options.ecmaVersion < 10) {\n          this.unexpected();\n        }\n\n        clause.param = null;\n        this.enterScope(0);\n      }\n\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, \"Missing catch or finally clause\");\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  };\n\n  pp$1.parseVarStatement = function (node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  };\n\n  pp$1.parseWhileStatement = function (node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  };\n\n  pp$1.parseWithStatement = function (node) {\n    if (this.strict) {\n      this.raise(this.start, \"'with' in strict mode\");\n    }\n\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\");\n  };\n\n  pp$1.parseEmptyStatement = function (node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  };\n\n  pp$1.parseLabeledStatement = function (node, maybeName, expr, context) {\n    var this$1 = this;\n\n    for (var i$1 = 0, list = this$1.labels; i$1 < list.length; i$1 += 1) {\n      var label = list[i$1];\n\n      if (label.name === maybeName) {\n        this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n      }\n    }\n\n    var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this$1.labels[i];\n\n      if (label$1.statementStart === node.start) {\n        // Update information about previous labels on this node\n        label$1.statementStart = this$1.start;\n        label$1.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  };\n\n  pp$1.parseExpressionStatement = function (node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }; // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowStrict` is true (used for\n  // function bodies).\n\n\n  pp$1.parseBlock = function (createNewLexicalScope, node) {\n    var this$1 = this;\n    if (createNewLexicalScope === void 0) createNewLexicalScope = true;\n    if (node === void 0) node = this.startNode();\n    node.body = [];\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.enterScope(0);\n    }\n\n    while (!this.eat(types.braceR)) {\n      var stmt = this$1.parseStatement(null);\n      node.body.push(stmt);\n    }\n\n    if (createNewLexicalScope) {\n      this.exitScope();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }; // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n\n  pp$1.parseFor = function (node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.type === types.semi ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.type === types.parenR ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }; // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n\n  pp$1.parseForIn = function (node, init) {\n    var type = this.type === types._in ? \"ForInStatement\" : \"ForOfStatement\";\n    this.next();\n\n    if (type === \"ForInStatement\") {\n      if (init.type === \"AssignmentPattern\" || init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (this.strict || init.declarations[0].id.type !== \"Identifier\")) {\n        this.raise(init.start, \"Invalid assignment in for-in loop head\");\n      }\n    }\n\n    node.left = init;\n    node.right = type === \"ForInStatement\" ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, type);\n  }; // Parse a list of variable declarations.\n\n\n  pp$1.parseVar = function (node, isFor, kind) {\n    var this$1 = this;\n    node.declarations = [];\n    node.kind = kind;\n\n    for (;;) {\n      var decl = this$1.startNode();\n      this$1.parseVarId(decl, kind);\n\n      if (this$1.eat(types.eq)) {\n        decl.init = this$1.parseMaybeAssign(isFor);\n      } else if (kind === \"const\" && !(this$1.type === types._in || this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\"))) {\n        this$1.unexpected();\n      } else if (decl.id.type !== \"Identifier\" && !(isFor && (this$1.type === types._in || this$1.isContextual(\"of\")))) {\n        this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n\n      node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"));\n\n      if (!this$1.eat(types.comma)) {\n        break;\n      }\n    }\n\n    return node;\n  };\n\n  pp$1.parseVarId = function (decl, kind) {\n    if ((kind === \"const\" || kind === \"let\") && this.isContextual(\"let\")) {\n      this.raiseRecoverable(this.start, \"let is disallowed as a lexically bound name\");\n    }\n\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1;\n  var FUNC_HANGING_STATEMENT = 2;\n  var FUNC_NULLABLE_ID = 4; // Parse a function declaration or literal (depending on the\n  // `statement & FUNC_STATEMENT`).\n  // Remove `allowExpressionBody` for 7.0.0, as it is only called with false\n\n  pp$1.parseFunction = function (node, statement, allowExpressionBody, isAsync) {\n    this.initFunction(node);\n\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types.star && statement & FUNC_HANGING_STATEMENT) {\n        this.unexpected();\n      }\n\n      node.generator = this.eat(types.star);\n    }\n\n    if (this.options.ecmaVersion >= 8) {\n      node.async = !!isAsync;\n    }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = statement & FUNC_NULLABLE_ID && this.type !== types.name ? null : this.parseIdent();\n\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT)) // If it is a regular function declaration in sloppy mode, then it is\n        // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n        // mode depends on properties of the current scope (see\n        // treatFunctionsAsVar).\n        {\n          this.checkLVal(node.id, this.strict || node.generator || node.async ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION);\n        }\n    }\n\n    var oldYieldPos = this.yieldPos,\n        oldAwaitPos = this.awaitPos,\n        oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT)) {\n      node.id = this.type === types.name ? this.parseIdent() : null;\n    }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false);\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, statement & FUNC_STATEMENT ? \"FunctionDeclaration\" : \"FunctionExpression\");\n  };\n\n  pp$1.parseFunctionParams = function (node) {\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  }; // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n\n  pp$1.parseClass = function (node, isStatement) {\n    var this$1 = this;\n    this.next(); // ecma-262 14.6 Class Definitions\n    // A class definition is always strict mode code.\n\n    var oldStrict = this.strict;\n    this.strict = true;\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      var element = this$1.parseClassElement(node.superClass !== null);\n\n      if (element) {\n        classBody.body.push(element);\n\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) {\n            this$1.raise(element.start, \"Duplicate constructor in the same class\");\n          }\n\n          hadConstructor = true;\n        }\n      }\n    }\n\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    this.strict = oldStrict;\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  };\n\n  pp$1.parseClassElement = function (constructorAllowsSuper) {\n    var this$1 = this;\n\n    if (this.eat(types.semi)) {\n      return null;\n    }\n\n    var method = this.startNode();\n\n    var tryContextual = function tryContextual(k, noLineBreak) {\n      if (noLineBreak === void 0) noLineBreak = false;\n      var start = this$1.start,\n          startLoc = this$1.startLoc;\n\n      if (!this$1.eatContextual(k)) {\n        return false;\n      }\n\n      if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) {\n        return true;\n      }\n\n      if (method.key) {\n        this$1.unexpected();\n      }\n\n      method.computed = false;\n      method.key = this$1.startNodeAt(start, startLoc);\n      method.key.name = k;\n      this$1.finishNode(method.key, \"Identifier\");\n      return false;\n    };\n\n    method.kind = \"method\";\n    method[\"static\"] = tryContextual(\"static\");\n    var isGenerator = this.eat(types.star);\n    var isAsync = false;\n\n    if (!isGenerator) {\n      if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n        isAsync = true;\n        isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      } else if (tryContextual(\"get\")) {\n        method.kind = \"get\";\n      } else if (tryContextual(\"set\")) {\n        method.kind = \"set\";\n      }\n    }\n\n    if (!method.key) {\n      this.parsePropertyName(method);\n    }\n\n    var key = method.key;\n    var allowsDirectSuper = false;\n\n    if (!method.computed && !method[\"static\"] && (key.type === \"Identifier\" && key.name === \"constructor\" || key.type === \"Literal\" && key.value === \"constructor\")) {\n      if (method.kind !== \"method\") {\n        this.raise(key.start, \"Constructor can't have get/set modifier\");\n      }\n\n      if (isGenerator) {\n        this.raise(key.start, \"Constructor can't be a generator\");\n      }\n\n      if (isAsync) {\n        this.raise(key.start, \"Constructor can't be an async method\");\n      }\n\n      method.kind = \"constructor\";\n      allowsDirectSuper = constructorAllowsSuper;\n    } else if (method[\"static\"] && key.type === \"Identifier\" && key.name === \"prototype\") {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n\n    this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n\n    if (method.kind === \"get\" && method.value.params.length !== 0) {\n      this.raiseRecoverable(method.value.start, \"getter should have no params\");\n    }\n\n    if (method.kind === \"set\" && method.value.params.length !== 1) {\n      this.raiseRecoverable(method.value.start, \"setter should have exactly one param\");\n    }\n\n    if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\") {\n      this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\");\n    }\n\n    return method;\n  };\n\n  pp$1.parseClassMethod = function (method, isGenerator, isAsync, allowsDirectSuper) {\n    method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n    return this.finishNode(method, \"MethodDefinition\");\n  };\n\n  pp$1.parseClassId = function (node, isStatement) {\n    if (this.type === types.name) {\n      node.id = this.parseIdent();\n\n      if (isStatement) {\n        this.checkLVal(node.id, BIND_LEXICAL, false);\n      }\n    } else {\n      if (isStatement === true) {\n        this.unexpected();\n      }\n\n      node.id = null;\n    }\n  };\n\n  pp$1.parseClassSuper = function (node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }; // Parses module export declaration.\n\n\n  pp$1.parseExport = function (node, exports) {\n    var this$1 = this;\n    this.next(); // export * from '...'\n\n    if (this.eat(types.star)) {\n      this.expectContextual(\"from\");\n\n      if (this.type !== types.string) {\n        this.unexpected();\n      }\n\n      node.source = this.parseExprAtom();\n      this.semicolon();\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      // export default ...\n      this.checkExport(exports, \"default\", this.lastTokStart);\n      var isAsync;\n\n      if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n        var fNode = this.startNode();\n        this.next();\n\n        if (isAsync) {\n          this.next();\n        }\n\n        node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n      } else if (this.type === types._class) {\n        var cNode = this.startNode();\n        node.declaration = this.parseClass(cNode, \"nullableID\");\n      } else {\n        node.declaration = this.parseMaybeAssign();\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    } // export var|const|let|function|class ...\n\n\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseStatement(null);\n\n      if (node.declaration.type === \"VariableDeclaration\") {\n        this.checkVariableExport(exports, node.declaration.declarations);\n      } else {\n        this.checkExport(exports, node.declaration.id.name, node.declaration.id.start);\n      }\n\n      node.specifiers = [];\n      node.source = null;\n    } else {\n      // export { x, y as z } [from '...']\n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types.string) {\n          this.unexpected();\n        }\n\n        node.source = this.parseExprAtom();\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          // check for keywords used as local names\n          var spec = list[i];\n          this$1.checkUnreserved(spec.local); // check if export is defined\n\n          this$1.checkLocalExport(spec.local);\n        }\n\n        node.source = null;\n      }\n\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ExportNamedDeclaration\");\n  };\n\n  pp$1.checkExport = function (exports, name, pos) {\n    if (!exports) {\n      return;\n    }\n\n    if (has(exports, name)) {\n      this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\");\n    }\n\n    exports[name] = true;\n  };\n\n  pp$1.checkPatternExport = function (exports, pat) {\n    var this$1 = this;\n    var type = pat.type;\n\n    if (type === \"Identifier\") {\n      this.checkExport(exports, pat.name, pat.start);\n    } else if (type === \"ObjectPattern\") {\n      for (var i = 0, list = pat.properties; i < list.length; i += 1) {\n        var prop = list[i];\n        this$1.checkPatternExport(exports, prop);\n      }\n    } else if (type === \"ArrayPattern\") {\n      for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n        if (elt) {\n          this$1.checkPatternExport(exports, elt);\n        }\n      }\n    } else if (type === \"Property\") {\n      this.checkPatternExport(exports, pat.value);\n    } else if (type === \"AssignmentPattern\") {\n      this.checkPatternExport(exports, pat.left);\n    } else if (type === \"RestElement\") {\n      this.checkPatternExport(exports, pat.argument);\n    } else if (type === \"ParenthesizedExpression\") {\n      this.checkPatternExport(exports, pat.expression);\n    }\n  };\n\n  pp$1.checkVariableExport = function (exports, decls) {\n    var this$1 = this;\n\n    if (!exports) {\n      return;\n    }\n\n    for (var i = 0, list = decls; i < list.length; i += 1) {\n      var decl = list[i];\n      this$1.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$1.shouldParseExportStatement = function () {\n    return this.type.keyword === \"var\" || this.type.keyword === \"const\" || this.type.keyword === \"class\" || this.type.keyword === \"function\" || this.isLet() || this.isAsyncFunction();\n  }; // Parses a comma-separated list of module exports.\n\n\n  pp$1.parseExportSpecifiers = function (exports) {\n    var this$1 = this;\n    var nodes = [],\n        first = true; // export { x, y as z } [from '...']\n\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this$1.expect(types.comma);\n\n        if (this$1.afterTrailingComma(types.braceR)) {\n          break;\n        }\n      } else {\n        first = false;\n      }\n\n      var node = this$1.startNode();\n      node.local = this$1.parseIdent(true);\n      node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local;\n      this$1.checkExport(exports, node.exported.name, node.exported.start);\n      nodes.push(this$1.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }; // Parses import declaration.\n\n\n  pp$1.parseImport = function (node) {\n    this.next(); // import '...'\n\n    if (this.type === types.string) {\n      node.specifiers = empty;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }; // Parses a comma-separated list of module imports.\n\n\n  pp$1.parseImportSpecifiers = function () {\n    var this$1 = this;\n    var nodes = [],\n        first = true;\n\n    if (this.type === types.name) {\n      // import defaultObj, { x, y as z } from '...'\n      var node = this.startNode();\n      node.local = this.parseIdent();\n      this.checkLVal(node.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n\n      if (!this.eat(types.comma)) {\n        return nodes;\n      }\n    }\n\n    if (this.type === types.star) {\n      var node$1 = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      node$1.local = this.parseIdent();\n      this.checkLVal(node$1.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n      return nodes;\n    }\n\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this$1.expect(types.comma);\n\n        if (this$1.afterTrailingComma(types.braceR)) {\n          break;\n        }\n      } else {\n        first = false;\n      }\n\n      var node$2 = this$1.startNode();\n      node$2.imported = this$1.parseIdent(true);\n\n      if (this$1.eatContextual(\"as\")) {\n        node$2.local = this$1.parseIdent();\n      } else {\n        this$1.checkUnreserved(node$2.imported);\n        node$2.local = node$2.imported;\n      }\n\n      this$1.checkLVal(node$2.local, BIND_LEXICAL);\n      nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"));\n    }\n\n    return nodes;\n  }; // Set `ExpressionStatement#directive` property for directive prologues.\n\n\n  pp$1.adaptDirectivePrologue = function (statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n\n  pp$1.isDirectiveCandidate = function (statement) {\n    return statement.type === \"ExpressionStatement\" && statement.expression.type === \"Literal\" && typeof statement.expression.value === \"string\" && ( // Reject parenthesized strings.\n    this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\");\n  };\n\n  var pp$2 = Parser.prototype; // Convert existing expression atom to assignable pattern\n  // if possible.\n\n  pp$2.toAssignable = function (node, isBinding, refDestructuringErrors) {\n    var this$1 = this;\n\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n        case \"Identifier\":\n          if (this.inAsync && node.name === \"await\") {\n            this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\");\n          }\n\n          break;\n\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"RestElement\":\n          break;\n\n        case \"ObjectExpression\":\n          node.type = \"ObjectPattern\";\n\n          if (refDestructuringErrors) {\n            this.checkPatternErrors(refDestructuringErrors, true);\n          }\n\n          for (var i = 0, list = node.properties; i < list.length; i += 1) {\n            var prop = list[i];\n            this$1.toAssignable(prop, isBinding); // Early error:\n            //   AssignmentRestProperty[Yield, Await] :\n            //     `...` DestructuringAssignmentTarget[Yield, Await]\n            //\n            //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n\n            if (prop.type === \"RestElement\" && (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")) {\n              this$1.raise(prop.argument.start, \"Unexpected token\");\n            }\n          }\n\n          break;\n\n        case \"Property\":\n          // AssignmentProperty has type === \"Property\"\n          if (node.kind !== \"init\") {\n            this.raise(node.key.start, \"Object pattern can't contain getter or setter\");\n          }\n\n          this.toAssignable(node.value, isBinding);\n          break;\n\n        case \"ArrayExpression\":\n          node.type = \"ArrayPattern\";\n\n          if (refDestructuringErrors) {\n            this.checkPatternErrors(refDestructuringErrors, true);\n          }\n\n          this.toAssignableList(node.elements, isBinding);\n          break;\n\n        case \"SpreadElement\":\n          node.type = \"RestElement\";\n          this.toAssignable(node.argument, isBinding);\n\n          if (node.argument.type === \"AssignmentPattern\") {\n            this.raise(node.argument.start, \"Rest elements cannot have a default value\");\n          }\n\n          break;\n\n        case \"AssignmentExpression\":\n          if (node.operator !== \"=\") {\n            this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\");\n          }\n\n          node.type = \"AssignmentPattern\";\n          delete node.operator;\n          this.toAssignable(node.left, isBinding);\n        // falls through to AssignmentPattern\n\n        case \"AssignmentPattern\":\n          break;\n\n        case \"ParenthesizedExpression\":\n          this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n          break;\n\n        case \"MemberExpression\":\n          if (!isBinding) {\n            break;\n          }\n\n        default:\n          this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) {\n      this.checkPatternErrors(refDestructuringErrors, true);\n    }\n\n    return node;\n  }; // Convert list of expression atoms to binding list.\n\n\n  pp$2.toAssignableList = function (exprList, isBinding) {\n    var this$1 = this;\n    var end = exprList.length;\n\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n\n      if (elt) {\n        this$1.toAssignable(elt, isBinding);\n      }\n    }\n\n    if (end) {\n      var last = exprList[end - 1];\n\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\") {\n        this.unexpected(last.argument.start);\n      }\n    }\n\n    return exprList;\n  }; // Parses spread element.\n\n\n  pp$2.parseSpread = function (refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\");\n  };\n\n  pp$2.parseRestBinding = function () {\n    var node = this.startNode();\n    this.next(); // RestElement inside of a function parameter must be an identifier\n\n    if (this.options.ecmaVersion === 6 && this.type !== types.name) {\n      this.unexpected();\n    }\n\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }; // Parses lvalue (assignable) atom.\n\n\n  pp$2.parseBindingAtom = function () {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n        case types.bracketL:\n          var node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, true, true);\n          return this.finishNode(node, \"ArrayPattern\");\n\n        case types.braceL:\n          return this.parseObj(true);\n      }\n    }\n\n    return this.parseIdent();\n  };\n\n  pp$2.parseBindingList = function (close, allowEmpty, allowTrailingComma) {\n    var this$1 = this;\n    var elts = [],\n        first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this$1.expect(types.comma);\n      }\n\n      if (allowEmpty && this$1.type === types.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n        break;\n      } else if (this$1.type === types.ellipsis) {\n        var rest = this$1.parseRestBinding();\n        this$1.parseBindingListItem(rest);\n        elts.push(rest);\n\n        if (this$1.type === types.comma) {\n          this$1.raise(this$1.start, \"Comma is not permitted after the rest element\");\n        }\n\n        this$1.expect(close);\n        break;\n      } else {\n        var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc);\n        this$1.parseBindingListItem(elem);\n        elts.push(elem);\n      }\n    }\n\n    return elts;\n  };\n\n  pp$2.parseBindingListItem = function (param) {\n    return param;\n  }; // Parses assignment pattern around given atom if possible.\n\n\n  pp$2.parseMaybeDefault = function (startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n\n    if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) {\n      return left;\n    }\n\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }; // Verify that a node is an lval — something that can be assigned\n  // to.\n  // bindingType can be either:\n  // 'var' indicating that the lval creates a 'var' binding\n  // 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n  // 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\n\n  pp$2.checkLVal = function (expr, bindingType, checkClashes) {\n    var this$1 = this;\n    if (bindingType === void 0) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n      case \"Identifier\":\n        if (this.strict && this.reservedWordsStrictBind.test(expr.name)) {\n          this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\");\n        }\n\n        if (checkClashes) {\n          if (has(checkClashes, expr.name)) {\n            this.raiseRecoverable(expr.start, \"Argument name clash\");\n          }\n\n          checkClashes[expr.name] = true;\n        }\n\n        if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) {\n          this.declareName(expr.name, bindingType, expr.start);\n        }\n\n        break;\n\n      case \"MemberExpression\":\n        if (bindingType) {\n          this.raiseRecoverable(expr.start, \"Binding member expression\");\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n          var prop = list[i];\n          this$1.checkLVal(prop, bindingType, checkClashes);\n        }\n\n        break;\n\n      case \"Property\":\n        // AssignmentProperty has type === \"Property\"\n        this.checkLVal(expr.value, bindingType, checkClashes);\n        break;\n\n      case \"ArrayPattern\":\n        for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n          var elem = list$1[i$1];\n\n          if (elem) {\n            this$1.checkLVal(elem, bindingType, checkClashes);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, bindingType, checkClashes);\n        break;\n\n      default:\n        this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  }; // A recursive descent parser operates by defining functions for all\n  // syntactic elements, and recursively calling those, each function\n  // advancing the input stream and returning an AST node. Precedence\n  // of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n  // instead of `(!x)[1]` is handled by the fact that the parser\n  // function that parses unary prefix operators is called first, and\n  // in turn calls the function that parses `[]` subscripts — that\n  // way, it'll receive the node for `x[1]` already parsed, and wraps\n  // *that* in the unary operator node.\n  //\n  // Acorn uses an [operator precedence parser][opp] to handle binary\n  // operator precedence, because it is much more compact than using\n  // the technique outlined above, which uses different, nesting\n  // functions to specify precedence, for all of the ten binary\n  // precedence levels that JavaScript defines.\n  //\n  // [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\n\n  var pp$3 = Parser.prototype; // Check if property name clashes with already added.\n  // Object/class getters and setters are not allowed to clash —\n  // either with each other or with an init property — and in\n  // strict mode, init properties are also not allowed to be repeated.\n\n  pp$3.checkPropClash = function (prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\") {\n      return;\n    }\n\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand)) {\n      return;\n    }\n\n    var key = prop.key;\n    var name;\n\n    switch (key.type) {\n      case \"Identifier\":\n        name = key.name;\n        break;\n\n      case \"Literal\":\n        name = String(key.value);\n        break;\n\n      default:\n        return;\n    }\n\n    var kind = prop.kind;\n\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors && refDestructuringErrors.doubleProto < 0) {\n            refDestructuringErrors.doubleProto = key.start;\n          } // Backwards-compat kludge. Can be removed in version 6.0\n          else {\n              this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n            }\n        }\n\n        propHash.proto = true;\n      }\n\n      return;\n    }\n\n    name = \"$\" + name;\n    var other = propHash[name];\n\n    if (other) {\n      var redefinition;\n\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n\n      if (redefinition) {\n        this.raiseRecoverable(key.start, \"Redefinition of property\");\n      }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n\n    other[kind] = true;\n  }; // ### Expression parsing\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function(s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n  // Parse a full expression. The optional arguments are used to\n  // forbid the `in` operator (in for loops initalization expressions)\n  // and provide reference for storing '=' operator inside shorthand\n  // property assignment in contexts where both object expression\n  // and object pattern might appear (so it's possible to raise\n  // delayed syntax error at correct position).\n\n\n  pp$3.parseExpression = function (noIn, refDestructuringErrors) {\n    var this$1 = this;\n    var startPos = this.start,\n        startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n\n    if (this.type === types.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors));\n      }\n\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }; // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n\n  pp$3.parseMaybeAssign = function (noIn, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) {\n        return this.parseYield(noIn);\n      } // The tokenizer will assume an expression is allowed after\n      // `yield`, but this isn't that kind of yield\n      else {\n          this.exprAllowed = false;\n        }\n    }\n\n    var ownDestructuringErrors = false,\n        oldParenAssign = -1,\n        oldTrailingComma = -1,\n        oldShorthandAssign = -1;\n\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      oldShorthandAssign = refDestructuringErrors.shorthandAssign;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.shorthandAssign = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors();\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start,\n        startLoc = this.startLoc;\n\n    if (this.type === types.parenL || this.type === types.name) {\n      this.potentialArrowAt = this.start;\n    }\n\n    var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n\n      if (!ownDestructuringErrors) {\n        DestructuringErrors.call(refDestructuringErrors);\n      }\n\n      refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n\n      this.checkLVal(left);\n      this.next();\n      node.right = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else {\n      if (ownDestructuringErrors) {\n        this.checkExpressionErrors(refDestructuringErrors, true);\n      }\n    }\n\n    if (oldParenAssign > -1) {\n      refDestructuringErrors.parenthesizedAssign = oldParenAssign;\n    }\n\n    if (oldTrailingComma > -1) {\n      refDestructuringErrors.trailingComma = oldTrailingComma;\n    }\n\n    if (oldShorthandAssign > -1) {\n      refDestructuringErrors.shorthandAssign = oldShorthandAssign;\n    }\n\n    return left;\n  }; // Parse a ternary conditional (`?:`) operator.\n\n\n  pp$3.parseMaybeConditional = function (noIn, refDestructuringErrors) {\n    var startPos = this.start,\n        startLoc = this.startLoc;\n    var expr = this.parseExprOps(noIn, refDestructuringErrors);\n\n    if (this.checkExpressionErrors(refDestructuringErrors)) {\n      return expr;\n    }\n\n    if (this.eat(types.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }; // Start the precedence parser.\n\n\n  pp$3.parseExprOps = function (noIn, refDestructuringErrors) {\n    var startPos = this.start,\n        startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n\n    if (this.checkExpressionErrors(refDestructuringErrors)) {\n      return expr;\n    }\n\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn);\n  }; // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n\n  pp$3.parseExprOp = function (left, leftStartPos, leftStartLoc, minPrec, noIn) {\n    var prec = this.type.binop;\n\n    if (prec != null && (!noIn || this.type !== types._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n        var op = this.value;\n        this.next();\n        var startPos = this.start,\n            startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn);\n      }\n    }\n\n    return left;\n  };\n\n  pp$3.buildBinary = function (startPos, startLoc, left, right, op, logical) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\");\n  }; // Parse unary operators, both prefix and postfix.\n\n\n  pp$3.parseMaybeUnary = function (refDestructuringErrors, sawUnary) {\n    var this$1 = this;\n    var startPos = this.start,\n        startLoc = this.startLoc,\n        expr;\n\n    if (this.isContextual(\"await\") && (this.inAsync || !this.inFunction && this.options.allowAwaitOutsideFunction)) {\n      expr = this.parseAwait();\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(),\n          update = this.type === types.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n\n      if (update) {\n        this.checkLVal(node.argument);\n      } else if (this.strict && node.operator === \"delete\" && node.argument.type === \"Identifier\") {\n        this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\");\n      } else {\n        sawUnary = true;\n      }\n\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors);\n\n      if (this.checkExpressionErrors(refDestructuringErrors)) {\n        return expr;\n      }\n\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this$1.startNodeAt(startPos, startLoc);\n        node$1.operator = this$1.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this$1.checkLVal(expr);\n        this$1.next();\n        expr = this$1.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!sawUnary && this.eat(types.starstar)) {\n      return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false);\n    } else {\n      return expr;\n    }\n  }; // Parse call, dot, and `[]`-subscript expressions.\n\n\n  pp$3.parseExprSubscripts = function (refDestructuringErrors) {\n    var startPos = this.start,\n        startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors);\n    var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n\n    if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) {\n      return expr;\n    }\n\n    var result = this.parseSubscripts(expr, startPos, startLoc);\n\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) {\n        refDestructuringErrors.parenthesizedAssign = -1;\n      }\n\n      if (refDestructuringErrors.parenthesizedBind >= result.start) {\n        refDestructuringErrors.parenthesizedBind = -1;\n      }\n    }\n\n    return result;\n  };\n\n  pp$3.parseSubscripts = function (base, startPos, startLoc, noCalls) {\n    var this$1 = this;\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" && this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n\n    while (true) {\n      var element = this$1.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow);\n\n      if (element === base || element.type === \"ArrowFunctionExpression\") {\n        return element;\n      }\n\n      base = element;\n    }\n  };\n\n  pp$3.parseSubscript = function (base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n    var computed = this.eat(types.bracketL);\n\n    if (computed || this.eat(types.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this.parseExpression() : this.parseIdent(true);\n      node.computed = !!computed;\n\n      if (computed) {\n        this.expect(types.bracketR);\n      }\n\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors(),\n          oldYieldPos = this.yieldPos,\n          oldAwaitPos = this.awaitPos,\n          oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n\n      if (maybeAsyncArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n\n        if (this.awaitIdentPos > 0) {\n          this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\");\n        }\n\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true);\n      }\n\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types.backQuote) {\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({\n        isTagged: true\n      });\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n\n    return base;\n  }; // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n\n  pp$3.parseExprAtom = function (refDestructuringErrors) {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.type === types.slash) {\n      this.readRegexp();\n    }\n\n    var node,\n        canBeArrow = this.potentialArrowAt === this.start;\n\n    switch (this.type) {\n      case types._super:\n        if (!this.allowSuper) {\n          this.raise(this.start, \"'super' keyword outside a method\");\n        }\n\n        node = this.startNode();\n        this.next();\n\n        if (this.type === types.parenL && !this.allowDirectSuper) {\n          this.raise(node.start, \"super() call outside constructor of a subclass\");\n        } // The `super` keyword can appear at below:\n        // SuperProperty:\n        //     super [ Expression ]\n        //     super . IdentifierName\n        // SuperCall:\n        //     super Arguments\n\n\n        if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL) {\n          this.unexpected();\n        }\n\n        return this.finishNode(node, \"Super\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        var startPos = this.start,\n            startLoc = this.startLoc,\n            containsEsc = this.containsEsc;\n        var id = this.parseIdent(false);\n\n        if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function)) {\n          return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true);\n        }\n\n        if (canBeArrow && !this.canInsertSemicolon()) {\n          if (this.eat(types.arrow)) {\n            return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false);\n          }\n\n          if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n            id = this.parseIdent(false);\n\n            if (this.canInsertSemicolon() || !this.eat(types.arrow)) {\n              this.unexpected();\n            }\n\n            return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true);\n          }\n        }\n\n        return id;\n\n      case types.regexp:\n        var value = this.value;\n        node = this.parseLiteral(value.value);\n        node.regex = {\n          pattern: value.pattern,\n          flags: value.flags\n        };\n        return node;\n\n      case types.num:\n      case types.string:\n        return this.parseLiteral(this.value);\n\n      case types._null:\n      case types._true:\n      case types._false:\n        node = this.startNode();\n        node.value = this.type === types._null ? null : this.type === types._true;\n        node.raw = this.type.keyword;\n        this.next();\n        return this.finishNode(node, \"Literal\");\n\n      case types.parenL:\n        var start = this.start,\n            expr = this.parseParenAndDistinguishExpression(canBeArrow);\n\n        if (refDestructuringErrors) {\n          if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr)) {\n            refDestructuringErrors.parenthesizedAssign = start;\n          }\n\n          if (refDestructuringErrors.parenthesizedBind < 0) {\n            refDestructuringErrors.parenthesizedBind = start;\n          }\n        }\n\n        return expr;\n\n      case types.bracketL:\n        node = this.startNode();\n        this.next();\n        node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n        return this.finishNode(node, \"ArrayExpression\");\n\n      case types.braceL:\n        return this.parseObj(false, refDestructuringErrors);\n\n      case types._function:\n        node = this.startNode();\n        this.next();\n        return this.parseFunction(node, 0);\n\n      case types._class:\n        return this.parseClass(this.startNode(), false);\n\n      case types._new:\n        return this.parseNew();\n\n      case types.backQuote:\n        return this.parseTemplate();\n\n      default:\n        this.unexpected();\n    }\n  };\n\n  pp$3.parseLiteral = function (value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    this.next();\n    return this.finishNode(node, \"Literal\");\n  };\n\n  pp$3.parseParenExpression = function () {\n    this.expect(types.parenL);\n    var val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  };\n\n  pp$3.parseParenAndDistinguishExpression = function (canBeArrow) {\n    var this$1 = this;\n    var startPos = this.start,\n        startLoc = this.startLoc,\n        val,\n        allowTrailingComma = this.options.ecmaVersion >= 8;\n\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n      var innerStartPos = this.start,\n          innerStartLoc = this.startLoc;\n      var exprList = [],\n          first = true,\n          lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors(),\n          oldYieldPos = this.yieldPos,\n          oldAwaitPos = this.awaitPos,\n          spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0; // Do not save awaitIdentPos to allow checking awaits nested in parameters\n\n      while (this.type !== types.parenR) {\n        first ? first = false : this$1.expect(types.comma);\n\n        if (allowTrailingComma && this$1.afterTrailingComma(types.parenR, true)) {\n          lastIsComma = true;\n          break;\n        } else if (this$1.type === types.ellipsis) {\n          spreadStart = this$1.start;\n          exprList.push(this$1.parseParenItem(this$1.parseRestBinding()));\n\n          if (this$1.type === types.comma) {\n            this$1.raise(this$1.start, \"Comma is not permitted after the rest element\");\n          }\n\n          break;\n        } else {\n          exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem));\n        }\n      }\n\n      var innerEndPos = this.start,\n          innerEndLoc = this.startLoc;\n      this.expect(types.parenR);\n\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList);\n      }\n\n      if (!exprList.length || lastIsComma) {\n        this.unexpected(this.lastTokStart);\n      }\n\n      if (spreadStart) {\n        this.unexpected(spreadStart);\n      }\n\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\");\n    } else {\n      return val;\n    }\n  };\n\n  pp$3.parseParenItem = function (item) {\n    return item;\n  };\n\n  pp$3.parseParenArrowList = function (startPos, startLoc, exprList) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList);\n  }; // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n\n\n  var empty$1 = [];\n\n  pp$3.parseNew = function () {\n    var node = this.startNode();\n    var meta = this.parseIdent(true);\n\n    if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n      node.meta = meta;\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n\n      if (node.property.name !== \"target\" || containsEsc) {\n        this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\");\n      }\n\n      if (!this.inNonArrowFunction()) {\n        this.raiseRecoverable(node.start, \"new.target can only be used in functions\");\n      }\n\n      return this.finishNode(node, \"MetaProperty\");\n    }\n\n    var startPos = this.start,\n        startLoc = this.startLoc;\n    node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n\n    if (this.eat(types.parenL)) {\n      node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false);\n    } else {\n      node.arguments = empty$1;\n    }\n\n    return this.finishNode(node, \"NewExpression\");\n  }; // Parse template expression.\n\n\n  pp$3.parseTemplateElement = function (ref) {\n    var isTagged = ref.isTagged;\n    var elem = this.startNode();\n\n    if (this.type === types.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n\n      elem.value = {\n        raw: this.value,\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n\n    this.next();\n    elem.tail = this.type === types.backQuote;\n    return this.finishNode(elem, \"TemplateElement\");\n  };\n\n  pp$3.parseTemplate = function (ref) {\n    var this$1 = this;\n    if (ref === void 0) ref = {};\n    var isTagged = ref.isTagged;\n    if (isTagged === void 0) isTagged = false;\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({\n      isTagged: isTagged\n    });\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      if (this$1.type === types.eof) {\n        this$1.raise(this$1.pos, \"Unterminated template literal\");\n      }\n\n      this$1.expect(types.dollarBraceL);\n      node.expressions.push(this$1.parseExpression());\n      this$1.expect(types.braceR);\n      node.quasis.push(curElt = this$1.parseTemplateElement({\n        isTagged: isTagged\n      }));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  };\n\n  pp$3.isAsyncProp = function (prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" && (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === types.star) && !lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n  }; // Parse an object literal or binding pattern.\n\n\n  pp$3.parseObj = function (isPattern, refDestructuringErrors) {\n    var this$1 = this;\n    var node = this.startNode(),\n        first = true,\n        propHash = {};\n    node.properties = [];\n    this.next();\n\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this$1.expect(types.comma);\n\n        if (this$1.afterTrailingComma(types.braceR)) {\n          break;\n        }\n      } else {\n        first = false;\n      }\n\n      var prop = this$1.parseProperty(isPattern, refDestructuringErrors);\n\n      if (!isPattern) {\n        this$1.checkPropClash(prop, propHash, refDestructuringErrors);\n      }\n\n      node.properties.push(prop);\n    }\n\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\");\n  };\n\n  pp$3.parseProperty = function (isPattern, refDestructuringErrors) {\n    var prop = this.startNode(),\n        isGenerator,\n        isAsync,\n        startPos,\n        startLoc;\n\n    if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n\n        if (this.type === types.comma) {\n          this.raise(this.start, \"Comma is not permitted after the rest element\");\n        }\n\n        return this.finishNode(prop, \"RestElement\");\n      } // To disallow parenthesized identifier via `this.toAssignable()`.\n\n\n      if (this.type === types.parenL && refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0) {\n          refDestructuringErrors.parenthesizedAssign = this.start;\n        }\n\n        if (refDestructuringErrors.parenthesizedBind < 0) {\n          refDestructuringErrors.parenthesizedBind = this.start;\n        }\n      } // Parse argument.\n\n\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors); // To disallow trailing comma via `this.toAssignable()`.\n\n      if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      } // Finish\n\n\n      return this.finishNode(prop, \"SpreadElement\");\n    }\n\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n\n      if (!isPattern) {\n        isGenerator = this.eat(types.star);\n      }\n    }\n\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      this.parsePropertyName(prop, refDestructuringErrors);\n    } else {\n      isAsync = false;\n    }\n\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\");\n  };\n\n  pp$3.parsePropertyValue = function (prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types.colon) {\n      this.unexpected();\n    }\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n      if (isPattern) {\n        this.unexpected();\n      }\n\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc && this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" && (prop.key.name === \"get\" || prop.key.name === \"set\") && this.type !== types.comma && this.type !== types.braceR) {\n      if (isGenerator || isAsync) {\n        this.unexpected();\n      }\n\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop);\n      prop.value = this.parseMethod(false);\n      var paramCount = prop.kind === \"get\" ? 0 : 1;\n\n      if (prop.value.params.length !== paramCount) {\n        var start = prop.value.start;\n\n        if (prop.kind === \"get\") {\n          this.raiseRecoverable(start, \"getter should have no params\");\n        } else {\n          this.raiseRecoverable(start, \"setter should have exactly one param\");\n        }\n      } else {\n        if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\") {\n          this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\");\n        }\n      }\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) {\n        this.unexpected();\n      }\n\n      this.checkUnreserved(prop.key);\n\n      if (prop.key.name === \"await\" && !this.awaitIdentPos) {\n        this.awaitIdentPos = startPos;\n      }\n\n      prop.kind = \"init\";\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else if (this.type === types.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0) {\n          refDestructuringErrors.shorthandAssign = this.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else {\n        prop.value = prop.key;\n      }\n\n      prop.shorthand = true;\n    } else {\n      this.unexpected();\n    }\n  };\n\n  pp$3.parsePropertyName = function (prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types.bracketR);\n        return prop.key;\n      } else {\n        prop.computed = false;\n      }\n    }\n\n    return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(true);\n  }; // Initialize empty function node.\n\n\n  pp$3.initFunction = function (node) {\n    node.id = null;\n\n    if (this.options.ecmaVersion >= 6) {\n      node.generator = node.expression = false;\n    }\n\n    if (this.options.ecmaVersion >= 8) {\n      node.async = false;\n    }\n  }; // Parse object or class method.\n\n\n  pp$3.parseMethod = function (isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(),\n        oldYieldPos = this.yieldPos,\n        oldAwaitPos = this.awaitPos,\n        oldAwaitIdentPos = this.awaitIdentPos;\n    this.initFunction(node);\n\n    if (this.options.ecmaVersion >= 6) {\n      node.generator = isGenerator;\n    }\n\n    if (this.options.ecmaVersion >= 8) {\n      node.async = !!isAsync;\n    }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true);\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\");\n  }; // Parse arrow function expression with given parameters.\n\n\n  pp$3.parseArrowExpression = function (node, params, isAsync) {\n    var oldYieldPos = this.yieldPos,\n        oldAwaitPos = this.awaitPos,\n        oldAwaitIdentPos = this.awaitIdentPos;\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n\n    if (this.options.ecmaVersion >= 8) {\n      node.async = !!isAsync;\n    }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false);\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }; // Parse function body and check parameters.\n\n\n  pp$3.parseFunctionBody = function (node, isArrowFunction, isMethod) {\n    var isExpression = isArrowFunction && this.type !== types.braceL;\n    var oldStrict = this.strict,\n        useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end); // If this is a strict mode function, verify that argument names\n        // are not repeated, and it does not try to bind the words `eval`\n        // or `arguments`.\n\n        if (useStrict && nonSimple) {\n          this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\");\n        }\n      } // Start a new scope with regard to labels and the `inFunction`\n      // flag (restore them to their old value afterwards).\n\n\n      var oldLabels = this.labels;\n      this.labels = [];\n\n      if (useStrict) {\n        this.strict = true;\n      } // Add the params to varDeclaredNames to ensure that an error is thrown\n      // if a let/const declaration in the function clashes with one of the params.\n\n\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      node.body = this.parseBlock(false);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n\n    this.exitScope(); // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n\n    if (this.strict && node.id) {\n      this.checkLVal(node.id, BIND_OUTSIDE);\n    }\n\n    this.strict = oldStrict;\n  };\n\n  pp$3.isSimpleParamList = function (params) {\n    for (var i = 0, list = params; i < list.length; i += 1) {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") {\n        return false;\n      }\n    }\n\n    return true;\n  }; // Checks function params for various disallowed patterns such as using \"eval\"\n  // or \"arguments\" and duplicate parameters.\n\n\n  pp$3.checkParams = function (node, allowDuplicates) {\n    var this$1 = this;\n    var nameHash = {};\n\n    for (var i = 0, list = node.params; i < list.length; i += 1) {\n      var param = list[i];\n      this$1.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  }; // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n\n  pp$3.parseExprList = function (close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var this$1 = this;\n    var elts = [],\n        first = true;\n\n    while (!this.eat(close)) {\n      if (!first) {\n        this$1.expect(types.comma);\n\n        if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n          break;\n        }\n      } else {\n        first = false;\n      }\n\n      var elt = void 0;\n\n      if (allowEmpty && this$1.type === types.comma) {\n        elt = null;\n      } else if (this$1.type === types.ellipsis) {\n        elt = this$1.parseSpread(refDestructuringErrors);\n\n        if (refDestructuringErrors && this$1.type === types.comma && refDestructuringErrors.trailingComma < 0) {\n          refDestructuringErrors.trailingComma = this$1.start;\n        }\n      } else {\n        elt = this$1.parseMaybeAssign(false, refDestructuringErrors);\n      }\n\n      elts.push(elt);\n    }\n\n    return elts;\n  };\n\n  pp$3.checkUnreserved = function (ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\") {\n      this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\");\n    }\n\n    if (this.inAsync && name === \"await\") {\n      this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\");\n    }\n\n    if (this.keywords.test(name)) {\n      this.raise(start, \"Unexpected keyword '\" + name + \"'\");\n    }\n\n    if (this.options.ecmaVersion < 6 && this.input.slice(start, end).indexOf(\"\\\\\") !== -1) {\n      return;\n    }\n\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\") {\n        this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\");\n      }\n\n      this.raiseRecoverable(start, \"The keyword '\" + name + \"' is reserved\");\n    }\n  }; // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n\n\n  pp$3.parseIdent = function (liberal, isBinding) {\n    var node = this.startNode();\n\n    if (liberal && this.options.allowReserved === \"never\") {\n      liberal = false;\n    }\n\n    if (this.type === types.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword; // To fix https://github.com/acornjs/acorn/issues/575\n      // `class` and `function` keywords push new context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n      // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n\n      if ((node.name === \"class\" || node.name === \"function\") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    this.finishNode(node, \"Identifier\");\n\n    if (!liberal) {\n      this.checkUnreserved(node);\n\n      if (node.name === \"await\" && !this.awaitIdentPos) {\n        this.awaitIdentPos = node.start;\n      }\n    }\n\n    return node;\n  }; // Parses yield expression inside generator.\n\n\n  pp$3.parseYield = function (noIn) {\n    if (!this.yieldPos) {\n      this.yieldPos = this.start;\n    }\n\n    var node = this.startNode();\n    this.next();\n\n    if (this.type === types.semi || this.canInsertSemicolon() || this.type !== types.star && !this.type.startsExpr) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign(noIn);\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  };\n\n  pp$3.parseAwait = function () {\n    if (!this.awaitPos) {\n      this.awaitPos = this.start;\n    }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    return this.finishNode(node, \"AwaitExpression\");\n  };\n\n  var pp$4 = Parser.prototype; // This function is used to raise exceptions on parse errors. It\n  // takes an offset integer (into the current `input`) to indicate\n  // the location of the error, attaches the position to the end\n  // of the error message, and then raises a `SyntaxError` with that\n  // message.\n\n  pp$4.raise = function (pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos;\n    err.loc = loc;\n    err.raisedAt = this.pos;\n    throw err;\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function () {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart);\n    }\n  };\n\n  var pp$5 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags; // A list of var-declared names in the current lexical scope\n\n    this[\"var\"] = []; // A list of lexically-declared names in the current lexical scope\n\n    this.lexical = []; // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n\n    this.functions = [];\n  }; // The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\n\n  pp$5.enterScope = function (flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$5.exitScope = function () {\n    this.scopeStack.pop();\n  }; // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n\n\n  pp$5.treatFunctionsAsVarInScope = function (scope) {\n    return scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_TOP;\n  };\n\n  pp$5.declareName = function (name, bindingType, pos) {\n    var this$1 = this;\n    var redeclared = false;\n\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope[\"var\"].indexOf(name) > -1;\n      scope.lexical.push(name);\n\n      if (this.inModule && scope.flags & SCOPE_TOP) {\n        delete this.undefinedExports[name];\n      }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n\n      if (this.treatFunctionsAsVar) {\n        redeclared = scope$2.lexical.indexOf(name) > -1;\n      } else {\n        redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2[\"var\"].indexOf(name) > -1;\n      }\n\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this$1.scopeStack[i];\n\n        if (scope$3.lexical.indexOf(name) > -1 && !(scope$3.flags & SCOPE_SIMPLE_CATCH && scope$3.lexical[0] === name) || !this$1.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break;\n        }\n\n        scope$3[\"var\"].push(name);\n\n        if (this$1.inModule && scope$3.flags & SCOPE_TOP) {\n          delete this$1.undefinedExports[name];\n        }\n\n        if (scope$3.flags & SCOPE_VAR) {\n          break;\n        }\n      }\n    }\n\n    if (redeclared) {\n      this.raiseRecoverable(pos, \"Identifier '\" + name + \"' has already been declared\");\n    }\n  };\n\n  pp$5.checkLocalExport = function (id) {\n    // scope.functions must be empty as Module code is always strict.\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0][\"var\"].indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$5.currentScope = function () {\n    return this.scopeStack[this.scopeStack.length - 1];\n  };\n\n  pp$5.currentVarScope = function () {\n    var this$1 = this;\n\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this$1.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }; // Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n\n\n  pp$5.currentThisScope = function () {\n    var this$1 = this;\n\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this$1.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n\n    if (parser.options.locations) {\n      this.loc = new SourceLocation(parser, loc);\n    }\n\n    if (parser.options.directSourceFile) {\n      this.sourceFile = parser.options.directSourceFile;\n    }\n\n    if (parser.options.ranges) {\n      this.range = [pos, 0];\n    }\n  }; // Start an AST node, attaching a start offset.\n\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.startNode = function () {\n    return new Node(this, this.start, this.startLoc);\n  };\n\n  pp$6.startNodeAt = function (pos, loc) {\n    return new Node(this, pos, loc);\n  }; // Finish an AST node, adding `type` and `end` properties.\n\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n\n    if (this.options.locations) {\n      node.loc.end = loc;\n    }\n\n    if (this.options.ranges) {\n      node.range[1] = pos;\n    }\n\n    return node;\n  }\n\n  pp$6.finishNode = function (node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc);\n  }; // Finish node at given position\n\n\n  pp$6.finishNodeAt = function (node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc);\n  }; // The algorithm used to determine whether a regexp can appear at a\n  // given point in the program is loosely based on sweet.js' approach.\n  // See https://github.com/mozilla/sweet.js/wiki/design\n\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types$1 = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) {\n      return p.tryReadTemplateToken();\n    }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n  var pp$7 = Parser.prototype;\n\n  pp$7.initialContext = function () {\n    return [types$1.b_stat];\n  };\n\n  pp$7.braceIsBlock = function (prevType) {\n    var parent = this.curContext();\n\n    if (parent === types$1.f_expr || parent === types$1.f_stat) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr)) {\n      return !parent.isExpr;\n    } // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n\n\n    if (prevType === types._return || prevType === types.name && this.exprAllowed) {\n      return lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.b_stat;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    return !this.exprAllowed;\n  };\n\n  pp$7.inGeneratorContext = function () {\n    var this$1 = this;\n\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this$1.context[i];\n\n      if (context.token === \"function\") {\n        return context.generator;\n      }\n    }\n\n    return false;\n  };\n\n  pp$7.updateContext = function (prevType) {\n    var update,\n        type = this.type;\n\n    if (type.keyword && prevType === types.dot) {\n      this.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.exprAllowed = type.beforeExpr;\n    }\n  }; // Token-specific context update code\n\n\n  types.parenR.updateContext = types.braceR.updateContext = function () {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return;\n    }\n\n    var out = this.context.pop();\n\n    if (out === types$1.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types.braceL.updateContext = function (prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types.dollarBraceL.updateContext = function () {\n    this.context.push(types$1.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types.parenL.updateContext = function (prevType) {\n    var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n    this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types.incDec.updateContext = function () {// tokExprAllowed stays unchanged\n  };\n\n  types._function.updateContext = types._class.updateContext = function (prevType) {\n    if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n      this.context.push(types$1.f_expr);\n    } else {\n      this.context.push(types$1.f_stat);\n    }\n\n    this.exprAllowed = false;\n  };\n\n  types.backQuote.updateContext = function () {\n    if (this.curContext() === types$1.q_tmpl) {\n      this.context.pop();\n    } else {\n      this.context.push(types$1.q_tmpl);\n    }\n\n    this.exprAllowed = false;\n  };\n\n  types.star.updateContext = function (prevType) {\n    if (prevType === types._function) {\n      var index = this.context.length - 1;\n\n      if (this.context[index] === types$1.f_expr) {\n        this.context[index] = types$1.f_expr_gen;\n      } else {\n        this.context[index] = types$1.f_gen;\n      }\n    }\n\n    this.exprAllowed = true;\n  };\n\n  types.name.updateContext = function (prevType) {\n    var allowed = false;\n\n    if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n      if (this.value === \"of\" && !this.exprAllowed || this.value === \"yield\" && this.inGeneratorContext()) {\n        allowed = true;\n      }\n    }\n\n    this.exprAllowed = allowed;\n  }; // This file contains Unicode properties extracted from the ECMAScript\n  // specification. The lists are extracted like so:\n  // $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n  // #table-binary-unicode-properties\n\n\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma9BinaryProperties + \" Extended_Pictographic\"\n  }; // #table-unicode-general-category-values\n\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\"; // #table-unicode-script-values\n\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\"\n  };\n  var data = {};\n\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n\n  buildUnicodeData(9);\n  buildUnicodeData(10);\n  var pp$9 = Parser.prototype;\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 10 ? 10 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = [];\n    this.backReferenceNames = [];\n  };\n\n  RegExpValidationState.prototype.reset = function reset(start, pattern, flags) {\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  };\n\n  RegExpValidationState.prototype.raise = function raise(message) {\n    this.parser.raiseRecoverable(this.start, \"Invalid regular expression: /\" + this.source + \"/: \" + message);\n  }; // If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n  // Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\n\n\n  RegExpValidationState.prototype.at = function at(i) {\n    var s = this.source;\n    var l = s.length;\n\n    if (i >= l) {\n      return -1;\n    }\n\n    var c = s.charCodeAt(i);\n\n    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c;\n    }\n\n    return (c << 10) + s.charCodeAt(i + 1) - 0x35FDC00;\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex(i) {\n    var s = this.source;\n    var l = s.length;\n\n    if (i >= l) {\n      return l;\n    }\n\n    var c = s.charCodeAt(i);\n\n    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return i + 1;\n    }\n\n    return i + 2;\n  };\n\n  RegExpValidationState.prototype.current = function current() {\n    return this.at(this.pos);\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead() {\n    return this.at(this.nextIndex(this.pos));\n  };\n\n  RegExpValidationState.prototype.advance = function advance() {\n    this.pos = this.nextIndex(this.pos);\n  };\n\n  RegExpValidationState.prototype.eat = function eat(ch) {\n    if (this.current() === ch) {\n      this.advance();\n      return true;\n    }\n\n    return false;\n  };\n\n  function codePointToString$1(ch) {\n    if (ch <= 0xFFFF) {\n      return String.fromCharCode(ch);\n    }\n\n    ch -= 0x10000;\n    return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00);\n  }\n  /**\n   * Validate the flags part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n\n\n  pp$9.validateRegExpFlags = function (state) {\n    var this$1 = this;\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n\n      if (validFlags.indexOf(flag) === -1) {\n        this$1.raise(state.start, \"Invalid regular expression flag\");\n      }\n\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this$1.raise(state.start, \"Duplicate regular expression flag\");\n      }\n    }\n  };\n  /**\n   * Validate the pattern part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n\n\n  pp$9.validateRegExpPattern = function (state) {\n    this.regexp_pattern(state); // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n    // parsing contains a |GroupName|, reparse with the goal symbol\n    // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n    // exception if _P_ did not conform to the grammar, if any elements of _P_\n    // were not matched by the parse, or if any Early Error conditions exist.\n\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\n\n\n  pp$9.regexp_pattern = function (state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames.length = 0;\n    state.backReferenceNames.length = 0;\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      // Make the same messages as V8.\n      if (state.eat(0x29\n      /* ) */\n      )) {\n        state.raise(\"Unmatched ')'\");\n      }\n\n      if (state.eat(0x5D\n      /* [ */\n      ) || state.eat(0x7D\n      /* } */\n      )) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (state.groupNames.indexOf(name) === -1) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\n\n\n  pp$9.regexp_disjunction = function (state) {\n    var this$1 = this;\n    this.regexp_alternative(state);\n\n    while (state.eat(0x7C\n    /* | */\n    )) {\n      this$1.regexp_alternative(state);\n    } // Make the same message as V8.\n\n\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n\n    if (state.eat(0x7B\n    /* { */\n    )) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\n\n\n  pp$9.regexp_alternative = function (state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state)) {}\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\n\n\n  pp$9.regexp_eatTerm = function (state) {\n    if (this.regexp_eatAssertion(state)) {\n      // Handle `QuantifiableAssertion Quantifier` alternative.\n      // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n      // is a QuantifiableAssertion.\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        // Make the same message as V8.\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n\n      return true;\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true;\n    }\n\n    return false;\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\n\n\n  pp$9.regexp_eatAssertion = function (state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false; // ^, $\n\n    if (state.eat(0x5E\n    /* ^ */\n    ) || state.eat(0x24\n    /* $ */\n    )) {\n      return true;\n    } // \\b \\B\n\n\n    if (state.eat(0x5C\n    /* \\ */\n    )) {\n      if (state.eat(0x42\n      /* B */\n      ) || state.eat(0x62\n      /* b */\n      )) {\n        return true;\n      }\n\n      state.pos = start;\n    } // Lookahead / Lookbehind\n\n\n    if (state.eat(0x28\n    /* ( */\n    ) && state.eat(0x3F\n    /* ? */\n    )) {\n      var lookbehind = false;\n\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C\n        /* < */\n        );\n      }\n\n      if (state.eat(0x3D\n      /* = */\n      ) || state.eat(0x21\n      /* ! */\n      )) {\n        this.regexp_disjunction(state);\n\n        if (!state.eat(0x29\n        /* ) */\n        )) {\n          state.raise(\"Unterminated group\");\n        }\n\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true;\n      }\n    }\n\n    state.pos = start;\n    return false;\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\n\n\n  pp$9.regexp_eatQuantifier = function (state, noError) {\n    if (noError === void 0) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F\n      /* ? */\n      );\n      return true;\n    }\n\n    return false;\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\n\n\n  pp$9.regexp_eatQuantifierPrefix = function (state, noError) {\n    return state.eat(0x2A\n    /* * */\n    ) || state.eat(0x2B\n    /* + */\n    ) || state.eat(0x3F\n    /* ? */\n    ) || this.regexp_eatBracedQuantifier(state, noError);\n  };\n\n  pp$9.regexp_eatBracedQuantifier = function (state, noError) {\n    var start = state.pos;\n\n    if (state.eat(0x7B\n    /* { */\n    )) {\n      var min = 0,\n          max = -1;\n\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n\n        if (state.eat(0x2C\n        /* , */\n        ) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n\n        if (state.eat(0x7D\n        /* } */\n        )) {\n          // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n\n          return true;\n        }\n      }\n\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n\n      state.pos = start;\n    }\n\n    return false;\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\n\n\n  pp$9.regexp_eatAtom = function (state) {\n    return this.regexp_eatPatternCharacters(state) || state.eat(0x2E\n    /* . */\n    ) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state);\n  };\n\n  pp$9.regexp_eatReverseSolidusAtomEscape = function (state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C\n    /* \\ */\n    )) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true;\n      }\n\n      state.pos = start;\n    }\n\n    return false;\n  };\n\n  pp$9.regexp_eatUncapturingGroup = function (state) {\n    var start = state.pos;\n\n    if (state.eat(0x28\n    /* ( */\n    )) {\n      if (state.eat(0x3F\n      /* ? */\n      ) && state.eat(0x3A\n      /* : */\n      )) {\n        this.regexp_disjunction(state);\n\n        if (state.eat(0x29\n        /* ) */\n        )) {\n          return true;\n        }\n\n        state.raise(\"Unterminated group\");\n      }\n\n      state.pos = start;\n    }\n\n    return false;\n  };\n\n  pp$9.regexp_eatCapturingGroup = function (state) {\n    if (state.eat(0x28\n    /* ( */\n    )) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F\n      /* ? */\n      ) {\n          state.raise(\"Invalid group\");\n        }\n\n      this.regexp_disjunction(state);\n\n      if (state.eat(0x29\n      /* ) */\n      )) {\n        state.numCapturingParens += 1;\n        return true;\n      }\n\n      state.raise(\"Unterminated group\");\n    }\n\n    return false;\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\n\n\n  pp$9.regexp_eatExtendedAtom = function (state) {\n    return state.eat(0x2E\n    /* . */\n    ) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state) || this.regexp_eatInvalidBracedQuantifier(state) || this.regexp_eatExtendedPatternCharacter(state);\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\n\n\n  pp$9.regexp_eatInvalidBracedQuantifier = function (state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n\n    return false;\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\n\n\n  pp$9.regexp_eatSyntaxCharacter = function (state) {\n    var ch = state.current();\n\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true;\n    }\n\n    return false;\n  };\n\n  function isSyntaxCharacter(ch) {\n    return ch === 0x24\n    /* $ */\n    || ch >= 0x28\n    /* ( */\n    && ch <= 0x2B\n    /* + */\n    || ch === 0x2E\n    /* . */\n    || ch === 0x3F\n    /* ? */\n    || ch >= 0x5B\n    /* [ */\n    && ch <= 0x5E\n    /* ^ */\n    || ch >= 0x7B\n    /* { */\n    && ch <= 0x7D\n    /* } */\n    ;\n  } // https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n  // But eat eager.\n\n\n  pp$9.regexp_eatPatternCharacters = function (state) {\n    var start = state.pos;\n    var ch = 0;\n\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n\n    return state.pos !== start;\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\n\n\n  pp$9.regexp_eatExtendedPatternCharacter = function (state) {\n    var ch = state.current();\n\n    if (ch !== -1 && ch !== 0x24\n    /* $ */\n    && !(ch >= 0x28\n    /* ( */\n    && ch <= 0x2B\n    /* + */\n    ) && ch !== 0x2E\n    /* . */\n    && ch !== 0x3F\n    /* ? */\n    && ch !== 0x5B\n    /* [ */\n    && ch !== 0x5E\n    /* ^ */\n    && ch !== 0x7C\n    /* | */\n    ) {\n        state.advance();\n        return true;\n      }\n\n    return false;\n  }; // GroupSpecifier[U] ::\n  //   [empty]\n  //   `?` GroupName[?U]\n\n\n  pp$9.regexp_groupSpecifier = function (state) {\n    if (state.eat(0x3F\n    /* ? */\n    )) {\n      if (this.regexp_eatGroupName(state)) {\n        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n          state.raise(\"Duplicate capture group name\");\n        }\n\n        state.groupNames.push(state.lastStringValue);\n        return;\n      }\n\n      state.raise(\"Invalid group\");\n    }\n  }; // GroupName[U] ::\n  //   `<` RegExpIdentifierName[?U] `>`\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n\n\n  pp$9.regexp_eatGroupName = function (state) {\n    state.lastStringValue = \"\";\n\n    if (state.eat(0x3C\n    /* < */\n    )) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E\n      /* > */\n      )) {\n        return true;\n      }\n\n      state.raise(\"Invalid capture group name\");\n    }\n\n    return false;\n  }; // RegExpIdentifierName[U] ::\n  //   RegExpIdentifierStart[?U]\n  //   RegExpIdentifierName[?U] RegExpIdentifierPart[?U]\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n\n\n  pp$9.regexp_eatRegExpIdentifierName = function (state) {\n    state.lastStringValue = \"\";\n\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString$1(state.lastIntValue);\n\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString$1(state.lastIntValue);\n      }\n\n      return true;\n    }\n\n    return false;\n  }; // RegExpIdentifierStart[U] ::\n  //   UnicodeIDStart\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[?U]\n\n\n  pp$9.regexp_eatRegExpIdentifierStart = function (state) {\n    var start = state.pos;\n    var ch = state.current();\n    state.advance();\n\n    if (ch === 0x5C\n    /* \\ */\n    && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n      ch = state.lastIntValue;\n    }\n\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true;\n    }\n\n    state.pos = start;\n    return false;\n  };\n\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24\n    /* $ */\n    || ch === 0x5F;\n    /* _ */\n  } // RegExpIdentifierPart[U] ::\n  //   UnicodeIDContinue\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[?U]\n  //   <ZWNJ>\n  //   <ZWJ>\n\n\n  pp$9.regexp_eatRegExpIdentifierPart = function (state) {\n    var start = state.pos;\n    var ch = state.current();\n    state.advance();\n\n    if (ch === 0x5C\n    /* \\ */\n    && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n      ch = state.lastIntValue;\n    }\n\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true;\n    }\n\n    state.pos = start;\n    return false;\n  };\n\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24\n    /* $ */\n    || ch === 0x5F\n    /* _ */\n    || ch === 0x200C\n    /* <ZWNJ> */\n    || ch === 0x200D;\n    /* <ZWJ> */\n  } // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\n\n\n  pp$9.regexp_eatAtomEscape = function (state) {\n    if (this.regexp_eatBackReference(state) || this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state) || state.switchN && this.regexp_eatKGroupName(state)) {\n      return true;\n    }\n\n    if (state.switchU) {\n      // Make the same message as V8.\n      if (state.current() === 0x63\n      /* c */\n      ) {\n          state.raise(\"Invalid unicode escape\");\n        }\n\n      state.raise(\"Invalid escape\");\n    }\n\n    return false;\n  };\n\n  pp$9.regexp_eatBackReference = function (state) {\n    var start = state.pos;\n\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n\n      if (state.switchU) {\n        // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n\n        return true;\n      }\n\n      if (n <= state.numCapturingParens) {\n        return true;\n      }\n\n      state.pos = start;\n    }\n\n    return false;\n  };\n\n  pp$9.regexp_eatKGroupName = function (state) {\n    if (state.eat(0x6B\n    /* k */\n    )) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true;\n      }\n\n      state.raise(\"Invalid named reference\");\n    }\n\n    return false;\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\n\n\n  pp$9.regexp_eatCharacterEscape = function (state) {\n    return this.regexp_eatControlEscape(state) || this.regexp_eatCControlLetter(state) || this.regexp_eatZero(state) || this.regexp_eatHexEscapeSequence(state) || this.regexp_eatRegExpUnicodeEscapeSequence(state) || !state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state) || this.regexp_eatIdentityEscape(state);\n  };\n\n  pp$9.regexp_eatCControlLetter = function (state) {\n    var start = state.pos;\n\n    if (state.eat(0x63\n    /* c */\n    )) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true;\n      }\n\n      state.pos = start;\n    }\n\n    return false;\n  };\n\n  pp$9.regexp_eatZero = function (state) {\n    if (state.current() === 0x30\n    /* 0 */\n    && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true;\n    }\n\n    return false;\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\n\n\n  pp$9.regexp_eatControlEscape = function (state) {\n    var ch = state.current();\n\n    if (ch === 0x74\n    /* t */\n    ) {\n        state.lastIntValue = 0x09;\n        /* \\t */\n\n        state.advance();\n        return true;\n      }\n\n    if (ch === 0x6E\n    /* n */\n    ) {\n        state.lastIntValue = 0x0A;\n        /* \\n */\n\n        state.advance();\n        return true;\n      }\n\n    if (ch === 0x76\n    /* v */\n    ) {\n        state.lastIntValue = 0x0B;\n        /* \\v */\n\n        state.advance();\n        return true;\n      }\n\n    if (ch === 0x66\n    /* f */\n    ) {\n        state.lastIntValue = 0x0C;\n        /* \\f */\n\n        state.advance();\n        return true;\n      }\n\n    if (ch === 0x72\n    /* r */\n    ) {\n        state.lastIntValue = 0x0D;\n        /* \\r */\n\n        state.advance();\n        return true;\n      }\n\n    return false;\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\n\n\n  pp$9.regexp_eatControlLetter = function (state) {\n    var ch = state.current();\n\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true;\n    }\n\n    return false;\n  };\n\n  function isControlLetter(ch) {\n    return ch >= 0x41\n    /* A */\n    && ch <= 0x5A\n    /* Z */\n    || ch >= 0x61\n    /* a */\n    && ch <= 0x7A\n    /* z */\n    ;\n  } // https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\n\n\n  pp$9.regexp_eatRegExpUnicodeEscapeSequence = function (state) {\n    var start = state.pos;\n\n    if (state.eat(0x75\n    /* u */\n    )) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n\n        if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n\n          if (state.eat(0x5C\n          /* \\ */\n          ) && state.eat(0x75\n          /* u */\n          ) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true;\n            }\n          }\n\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n\n        return true;\n      }\n\n      if (state.switchU && state.eat(0x7B\n      /* { */\n      ) && this.regexp_eatHexDigits(state) && state.eat(0x7D\n      /* } */\n      ) && isValidUnicode(state.lastIntValue)) {\n        return true;\n      }\n\n      if (state.switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n\n      state.pos = start;\n    }\n\n    return false;\n  };\n\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF;\n  } // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\n\n\n  pp$9.regexp_eatIdentityEscape = function (state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true;\n      }\n\n      if (state.eat(0x2F\n      /* / */\n      )) {\n        state.lastIntValue = 0x2F;\n        /* / */\n\n        return true;\n      }\n\n      return false;\n    }\n\n    var ch = state.current();\n\n    if (ch !== 0x63\n    /* c */\n    && (!state.switchN || ch !== 0x6B\n    /* k */\n    )) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true;\n    }\n\n    return false;\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\n\n\n  pp$9.regexp_eatDecimalEscape = function (state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n\n    if (ch >= 0x31\n    /* 1 */\n    && ch <= 0x39\n    /* 9 */\n    ) {\n        do {\n          state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30\n          /* 0 */\n          );\n          state.advance();\n        } while ((ch = state.current()) >= 0x30\n        /* 0 */\n        && ch <= 0x39\n        /* 9 */\n        );\n\n        return true;\n      }\n\n    return false;\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\n\n\n  pp$9.regexp_eatCharacterClassEscape = function (state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return true;\n    }\n\n    if (state.switchU && this.options.ecmaVersion >= 9 && (ch === 0x50\n    /* P */\n    || ch === 0x70\n    /* p */\n    )) {\n      state.lastIntValue = -1;\n      state.advance();\n\n      if (state.eat(0x7B\n      /* { */\n      ) && this.regexp_eatUnicodePropertyValueExpression(state) && state.eat(0x7D\n      /* } */\n      )) {\n        return true;\n      }\n\n      state.raise(\"Invalid property name\");\n    }\n\n    return false;\n  };\n\n  function isCharacterClassEscape(ch) {\n    return ch === 0x64\n    /* d */\n    || ch === 0x44\n    /* D */\n    || ch === 0x73\n    /* s */\n    || ch === 0x53\n    /* S */\n    || ch === 0x77\n    /* w */\n    || ch === 0x57\n    /* W */\n    ;\n  } // UnicodePropertyValueExpression ::\n  //   UnicodePropertyName `=` UnicodePropertyValue\n  //   LoneUnicodePropertyNameOrValue\n\n\n  pp$9.regexp_eatUnicodePropertyValueExpression = function (state) {\n    var start = state.pos; // UnicodePropertyName `=` UnicodePropertyValue\n\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D\n    /* = */\n    )) {\n      var name = state.lastStringValue;\n\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return true;\n      }\n    }\n\n    state.pos = start; // LoneUnicodePropertyNameOrValue\n\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n      return true;\n    }\n\n    return false;\n  };\n\n  pp$9.regexp_validateUnicodePropertyNameAndValue = function (state, name, value) {\n    if (!has(state.unicodeProperties.nonBinary, name)) {\n      state.raise(\"Invalid property name\");\n    }\n\n    if (!state.unicodeProperties.nonBinary[name].test(value)) {\n      state.raise(\"Invalid property value\");\n    }\n  };\n\n  pp$9.regexp_validateUnicodePropertyNameOrValue = function (state, nameOrValue) {\n    if (!state.unicodeProperties.binary.test(nameOrValue)) {\n      state.raise(\"Invalid property name\");\n    }\n  }; // UnicodePropertyName ::\n  //   UnicodePropertyNameCharacters\n\n\n  pp$9.regexp_eatUnicodePropertyName = function (state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString$1(ch);\n      state.advance();\n    }\n\n    return state.lastStringValue !== \"\";\n  };\n\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F;\n    /* _ */\n  } // UnicodePropertyValue ::\n  //   UnicodePropertyValueCharacters\n\n\n  pp$9.regexp_eatUnicodePropertyValue = function (state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString$1(ch);\n      state.advance();\n    }\n\n    return state.lastStringValue !== \"\";\n  };\n\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch);\n  } // LoneUnicodePropertyNameOrValue ::\n  //   UnicodePropertyValueCharacters\n\n\n  pp$9.regexp_eatLoneUnicodePropertyNameOrValue = function (state) {\n    return this.regexp_eatUnicodePropertyValue(state);\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\n\n\n  pp$9.regexp_eatCharacterClass = function (state) {\n    if (state.eat(0x5B\n    /* [ */\n    )) {\n      state.eat(0x5E\n      /* ^ */\n      );\n      this.regexp_classRanges(state);\n\n      if (state.eat(0x5D\n      /* [ */\n      )) {\n        return true;\n      } // Unreachable since it threw \"unterminated regular expression\" error before.\n\n\n      state.raise(\"Unterminated character class\");\n    }\n\n    return false;\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\n\n\n  pp$9.regexp_classRanges = function (state) {\n    var this$1 = this;\n\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n\n      if (state.eat(0x2D\n      /* - */\n      ) && this$1.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\n\n\n  pp$9.regexp_eatClassAtom = function (state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C\n    /* \\ */\n    )) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true;\n      }\n\n      if (state.switchU) {\n        // Make the same message as V8.\n        var ch$1 = state.current();\n\n        if (ch$1 === 0x63\n        /* c */\n        || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n\n        state.raise(\"Invalid escape\");\n      }\n\n      state.pos = start;\n    }\n\n    var ch = state.current();\n\n    if (ch !== 0x5D\n    /* [ */\n    ) {\n        state.lastIntValue = ch;\n        state.advance();\n        return true;\n      }\n\n    return false;\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\n\n\n  pp$9.regexp_eatClassEscape = function (state) {\n    var start = state.pos;\n\n    if (state.eat(0x62\n    /* b */\n    )) {\n      state.lastIntValue = 0x08;\n      /* <BS> */\n\n      return true;\n    }\n\n    if (state.switchU && state.eat(0x2D\n    /* - */\n    )) {\n      state.lastIntValue = 0x2D;\n      /* - */\n\n      return true;\n    }\n\n    if (!state.switchU && state.eat(0x63\n    /* c */\n    )) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true;\n      }\n\n      state.pos = start;\n    }\n\n    return this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state);\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\n\n\n  pp$9.regexp_eatClassControlLetter = function (state) {\n    var ch = state.current();\n\n    if (isDecimalDigit(ch) || ch === 0x5F\n    /* _ */\n    ) {\n        state.lastIntValue = ch % 0x20;\n        state.advance();\n        return true;\n      }\n\n    return false;\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n\n\n  pp$9.regexp_eatHexEscapeSequence = function (state) {\n    var start = state.pos;\n\n    if (state.eat(0x78\n    /* x */\n    )) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true;\n      }\n\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n\n      state.pos = start;\n    }\n\n    return false;\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\n\n\n  pp$9.regexp_eatDecimalDigits = function (state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30\n      /* 0 */\n      );\n      state.advance();\n    }\n\n    return state.pos !== start;\n  };\n\n  function isDecimalDigit(ch) {\n    return ch >= 0x30\n    /* 0 */\n    && ch <= 0x39;\n    /* 9 */\n  } // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\n\n\n  pp$9.regexp_eatHexDigits = function (state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n\n    return state.pos !== start;\n  };\n\n  function isHexDigit(ch) {\n    return ch >= 0x30\n    /* 0 */\n    && ch <= 0x39\n    /* 9 */\n    || ch >= 0x41\n    /* A */\n    && ch <= 0x46\n    /* F */\n    || ch >= 0x61\n    /* a */\n    && ch <= 0x66\n    /* f */\n    ;\n  }\n\n  function hexToInt(ch) {\n    if (ch >= 0x41\n    /* A */\n    && ch <= 0x46\n    /* F */\n    ) {\n        return 10 + (ch - 0x41\n        /* A */\n        );\n      }\n\n    if (ch >= 0x61\n    /* a */\n    && ch <= 0x66\n    /* f */\n    ) {\n        return 10 + (ch - 0x61\n        /* a */\n        );\n      }\n\n    return ch - 0x30;\n    /* 0 */\n  } // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n  // Allows only 0-377(octal) i.e. 0-255(decimal).\n\n\n  pp$9.regexp_eatLegacyOctalEscapeSequence = function (state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n\n      return true;\n    }\n\n    return false;\n  }; // https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\n\n\n  pp$9.regexp_eatOctalDigit = function (state) {\n    var ch = state.current();\n\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30;\n      /* 0 */\n\n      state.advance();\n      return true;\n    }\n\n    state.lastIntValue = 0;\n    return false;\n  };\n\n  function isOctalDigit(ch) {\n    return ch >= 0x30\n    /* 0 */\n    && ch <= 0x37;\n    /* 7 */\n  } // https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n  // And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n\n\n  pp$9.regexp_eatFixedHexDigits = function (state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false;\n      }\n\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n\n    return true;\n  }; // Object type used to represent tokens. Note that normally, tokens\n  // simply exist as properties on the parser object. This is only\n  // used for the onToken callback and the external tokenizer.\n\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n\n    if (p.options.locations) {\n      this.loc = new SourceLocation(p, p.startLoc, p.endLoc);\n    }\n\n    if (p.options.ranges) {\n      this.range = [p.start, p.end];\n    }\n  }; // ## Tokenizer\n\n\n  var pp$8 = Parser.prototype; // Move to the next token\n\n  pp$8.next = function () {\n    if (this.options.onToken) {\n      this.options.onToken(new Token(this));\n    }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp$8.getToken = function () {\n    this.next();\n    return new Token(this);\n  }; // If we're in an ES6 environment, make parsers iterable\n\n\n  if (typeof Symbol !== \"undefined\") {\n    pp$8[Symbol.iterator] = function () {\n      var this$1 = this;\n      return {\n        next: function next() {\n          var token = this$1.getToken();\n          return {\n            done: token.type === types.eof,\n            value: token\n          };\n        }\n      };\n    };\n  } // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n\n  pp$8.curContext = function () {\n    return this.context[this.context.length - 1];\n  }; // Read a single token, updating the parser object's token-related\n  // properties.\n\n\n  pp$8.nextToken = function () {\n    var curContext = this.curContext();\n\n    if (!curContext || !curContext.preserveSpace) {\n      this.skipSpace();\n    }\n\n    this.start = this.pos;\n\n    if (this.options.locations) {\n      this.startLoc = this.curPosition();\n    }\n\n    if (this.pos >= this.input.length) {\n      return this.finishToken(types.eof);\n    }\n\n    if (curContext.override) {\n      return curContext.override(this);\n    } else {\n      this.readToken(this.fullCharCodeAtPos());\n    }\n  };\n\n  pp$8.readToken = function (code) {\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\n    // identifiers, so '\\' also dispatches to that.\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92\n    /* '\\' */\n    ) {\n        return this.readWord();\n      }\n\n    return this.getTokenFromCode(code);\n  };\n\n  pp$8.fullCharCodeAtPos = function () {\n    var code = this.input.charCodeAt(this.pos);\n\n    if (code <= 0xd7ff || code >= 0xe000) {\n      return code;\n    }\n\n    var next = this.input.charCodeAt(this.pos + 1);\n    return (code << 10) + next - 0x35fdc00;\n  };\n\n  pp$8.skipBlockComment = function () {\n    var this$1 = this;\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos,\n        end = this.input.indexOf(\"*/\", this.pos += 2);\n\n    if (end === -1) {\n      this.raise(this.pos - 2, \"Unterminated comment\");\n    }\n\n    this.pos = end + 2;\n\n    if (this.options.locations) {\n      lineBreakG.lastIndex = start;\n      var match;\n\n      while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n        ++this$1.curLine;\n        this$1.lineStart = match.index + match[0].length;\n      }\n    }\n\n    if (this.options.onComment) {\n      this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos, startLoc, this.curPosition());\n    }\n  };\n\n  pp$8.skipLineComment = function (startSkip) {\n    var this$1 = this;\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this$1.input.charCodeAt(++this$1.pos);\n    }\n\n    if (this.options.onComment) {\n      this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos, startLoc, this.curPosition());\n    }\n  }; // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n\n  pp$8.skipSpace = function () {\n    var this$1 = this;\n\n    loop: while (this.pos < this.input.length) {\n      var ch = this$1.input.charCodeAt(this$1.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n          // ' '\n          ++this$1.pos;\n          break;\n\n        case 13:\n          if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n            ++this$1.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this$1.pos;\n\n          if (this$1.options.locations) {\n            ++this$1.curLine;\n            this$1.lineStart = this$1.pos;\n          }\n\n          break;\n\n        case 47:\n          // '/'\n          switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n            case 42:\n              // '*'\n              this$1.skipBlockComment();\n              break;\n\n            case 47:\n              this$1.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n            ++this$1.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }; // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n\n  pp$8.finishToken = function (type, val) {\n    this.end = this.pos;\n\n    if (this.options.locations) {\n      this.endLoc = this.curPosition();\n    }\n\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n    this.updateContext(prevType);\n  }; // ### Token reading\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n  //\n\n\n  pp$8.readToken_dot = function () {\n    var next = this.input.charCodeAt(this.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      return this.readNumber(true);\n    }\n\n    var next2 = this.input.charCodeAt(this.pos + 2);\n\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) {\n      // 46 = dot '.'\n      this.pos += 3;\n      return this.finishToken(types.ellipsis);\n    } else {\n      ++this.pos;\n      return this.finishToken(types.dot);\n    }\n  };\n\n  pp$8.readToken_slash = function () {\n    // '/'\n    var next = this.input.charCodeAt(this.pos + 1);\n\n    if (this.exprAllowed) {\n      ++this.pos;\n      return this.readRegexp();\n    }\n\n    if (next === 61) {\n      return this.finishOp(types.assign, 2);\n    }\n\n    return this.finishOp(types.slash, 1);\n  };\n\n  pp$8.readToken_mult_modulo_exp = function (code) {\n    // '%*'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types.star : types.modulo; // exponentiation operator ** and **=\n\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) {\n      return this.finishOp(types.assign, size + 1);\n    }\n\n    return this.finishOp(tokentype, size);\n  };\n\n  pp$8.readToken_pipe_amp = function (code) {\n    // '|&'\n    var next = this.input.charCodeAt(this.pos + 1);\n\n    if (next === code) {\n      return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n    }\n\n    if (next === 61) {\n      return this.finishOp(types.assign, 2);\n    }\n\n    return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  };\n\n  pp$8.readToken_caret = function () {\n    // '^'\n    var next = this.input.charCodeAt(this.pos + 1);\n\n    if (next === 61) {\n      return this.finishOp(types.assign, 2);\n    }\n\n    return this.finishOp(types.bitwiseXOR, 1);\n  };\n\n  pp$8.readToken_plus_min = function (code) {\n    // '+-'\n    var next = this.input.charCodeAt(this.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken();\n      }\n\n      return this.finishOp(types.incDec, 2);\n    }\n\n    if (next === 61) {\n      return this.finishOp(types.assign, 2);\n    }\n\n    return this.finishOp(types.plusMin, 1);\n  };\n\n  pp$8.readToken_lt_gt = function (code) {\n    // '<>'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.pos + size) === 61) {\n        return this.finishOp(types.assign, size + 1);\n      }\n\n      return this.finishOp(types.bitShift, size);\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 && this.input.charCodeAt(this.pos + 3) === 45) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken();\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    return this.finishOp(types.relational, size);\n  };\n\n  pp$8.readToken_eq_excl = function (code) {\n    // '=!'\n    var next = this.input.charCodeAt(this.pos + 1);\n\n    if (next === 61) {\n      return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2);\n    }\n\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) {\n      // '=>'\n      this.pos += 2;\n      return this.finishToken(types.arrow);\n    }\n\n    return this.finishOp(code === 61 ? types.eq : types.prefix, 1);\n  };\n\n  pp$8.getTokenFromCode = function (code) {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n      case 46:\n        // '.'\n        return this.readToken_dot();\n      // Punctuation tokens.\n\n      case 40:\n        ++this.pos;\n        return this.finishToken(types.parenL);\n\n      case 41:\n        ++this.pos;\n        return this.finishToken(types.parenR);\n\n      case 59:\n        ++this.pos;\n        return this.finishToken(types.semi);\n\n      case 44:\n        ++this.pos;\n        return this.finishToken(types.comma);\n\n      case 91:\n        ++this.pos;\n        return this.finishToken(types.bracketL);\n\n      case 93:\n        ++this.pos;\n        return this.finishToken(types.bracketR);\n\n      case 123:\n        ++this.pos;\n        return this.finishToken(types.braceL);\n\n      case 125:\n        ++this.pos;\n        return this.finishToken(types.braceR);\n\n      case 58:\n        ++this.pos;\n        return this.finishToken(types.colon);\n\n      case 63:\n        ++this.pos;\n        return this.finishToken(types.question);\n\n      case 96:\n        // '`'\n        if (this.options.ecmaVersion < 6) {\n          break;\n        }\n\n        ++this.pos;\n        return this.finishToken(types.backQuote);\n\n      case 48:\n        // '0'\n        var next = this.input.charCodeAt(this.pos + 1);\n\n        if (next === 120 || next === 88) {\n          return this.readRadixNumber(16);\n        } // '0x', '0X' - hex number\n\n\n        if (this.options.ecmaVersion >= 6) {\n          if (next === 111 || next === 79) {\n            return this.readRadixNumber(8);\n          } // '0o', '0O' - octal number\n\n\n          if (next === 98 || next === 66) {\n            return this.readRadixNumber(2);\n          } // '0b', '0B' - binary number\n\n        }\n\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float.\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        // 1-9\n        return this.readNumber(false);\n      // Quotes produce strings.\n\n      case 34:\n      case 39:\n        // '\"', \"'\"\n        return this.readString(code);\n      // Operators are parsed inline in tiny state machines. '=' (61) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case 47:\n        // '/'\n        return this.readToken_slash();\n\n      case 37:\n      case 42:\n        // '%*'\n        return this.readToken_mult_modulo_exp(code);\n\n      case 124:\n      case 38:\n        // '|&'\n        return this.readToken_pipe_amp(code);\n\n      case 94:\n        // '^'\n        return this.readToken_caret();\n\n      case 43:\n      case 45:\n        // '+-'\n        return this.readToken_plus_min(code);\n\n      case 60:\n      case 62:\n        // '<>'\n        return this.readToken_lt_gt(code);\n\n      case 61:\n      case 33:\n        // '=!'\n        return this.readToken_eq_excl(code);\n\n      case 126:\n        // '~'\n        return this.finishOp(types.prefix, 1);\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n  };\n\n  pp$8.finishOp = function (type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str);\n  };\n\n  pp$8.readRegexp = function () {\n    var this$1 = this;\n    var escaped,\n        inClass,\n        start = this.pos;\n\n    for (;;) {\n      if (this$1.pos >= this$1.input.length) {\n        this$1.raise(start, \"Unterminated regular expression\");\n      }\n\n      var ch = this$1.input.charAt(this$1.pos);\n\n      if (lineBreak.test(ch)) {\n        this$1.raise(start, \"Unterminated regular expression\");\n      }\n\n      if (!escaped) {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      } else {\n        escaped = false;\n      }\n\n      ++this$1.pos;\n    }\n\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n\n    if (this.containsEsc) {\n      this.unexpected(flagsStart);\n    } // Validate pattern\n\n\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state); // Create Literal#value property value.\n\n    var value = null;\n\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {// ESTree requires null if it failed to instantiate RegExp object.\n      // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n    }\n\n    return this.finishToken(types.regexp, {\n      pattern: pattern,\n      flags: flags,\n      value: value\n    });\n  }; // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n\n\n  pp$8.readInt = function (radix, len) {\n    var this$1 = this;\n    var start = this.pos,\n        total = 0;\n\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      var code = this$1.input.charCodeAt(this$1.pos),\n          val = void 0;\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } // a\n      else if (code >= 65) {\n          val = code - 65 + 10;\n        } // A\n        else if (code >= 48 && code <= 57) {\n            val = code - 48;\n          } // 0-9\n          else {\n              val = Infinity;\n            }\n\n      if (val >= radix) {\n        break;\n      }\n\n      ++this$1.pos;\n      total = total * radix + val;\n    }\n\n    if (this.pos === start || len != null && this.pos - start !== len) {\n      return null;\n    }\n\n    return total;\n  };\n\n  pp$8.readRadixNumber = function (radix) {\n    this.pos += 2; // 0x\n\n    var val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.start + 2, \"Expected number in radix \" + radix);\n    }\n\n    if (isIdentifierStart(this.fullCharCodeAtPos())) {\n      this.raise(this.pos, \"Identifier directly after number\");\n    }\n\n    return this.finishToken(types.num, val);\n  }; // Read an integer, octal integer, or floating-point number.\n\n\n  pp$8.readNumber = function (startsWithDot) {\n    var start = this.pos;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, \"Invalid number\");\n    }\n\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (octal && this.strict) {\n      this.raise(start, \"Invalid number\");\n    }\n\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) {\n      octal = false;\n    }\n\n    var next = this.input.charCodeAt(this.pos);\n\n    if (next === 46 && !octal) {\n      // '.'\n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n\n    if ((next === 69 || next === 101) && !octal) {\n      // 'eE'\n      next = this.input.charCodeAt(++this.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.pos;\n      } // '+-'\n\n\n      if (this.readInt(10) === null) {\n        this.raise(start, \"Invalid number\");\n      }\n    }\n\n    if (isIdentifierStart(this.fullCharCodeAtPos())) {\n      this.raise(this.pos, \"Identifier directly after number\");\n    }\n\n    var str = this.input.slice(start, this.pos);\n    var val = octal ? parseInt(str, 8) : parseFloat(str);\n    return this.finishToken(types.num, val);\n  }; // Read a string value, interpreting backslash-escapes.\n\n\n  pp$8.readCodePoint = function () {\n    var ch = this.input.charCodeAt(this.pos),\n        code;\n\n    if (ch === 123) {\n      // '{'\n      if (this.options.ecmaVersion < 6) {\n        this.unexpected();\n      }\n\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n\n      if (code > 0x10FFFF) {\n        this.invalidStringToken(codePos, \"Code point out of bounds\");\n      }\n    } else {\n      code = this.readHexChar(4);\n    }\n\n    return code;\n  };\n\n  function codePointToString(code) {\n    // UTF-16 Decoding\n    if (code <= 0xFFFF) {\n      return String.fromCharCode(code);\n    }\n\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00);\n  }\n\n  pp$8.readString = function (quote) {\n    var this$1 = this;\n    var out = \"\",\n        chunkStart = ++this.pos;\n\n    for (;;) {\n      if (this$1.pos >= this$1.input.length) {\n        this$1.raise(this$1.start, \"Unterminated string constant\");\n      }\n\n      var ch = this$1.input.charCodeAt(this$1.pos);\n\n      if (ch === quote) {\n        break;\n      }\n\n      if (ch === 92) {\n        // '\\'\n        out += this$1.input.slice(chunkStart, this$1.pos);\n        out += this$1.readEscapedChar(false);\n        chunkStart = this$1.pos;\n      } else {\n        if (isNewLine(ch, this$1.options.ecmaVersion >= 10)) {\n          this$1.raise(this$1.start, \"Unterminated string constant\");\n        }\n\n        ++this$1.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types.string, out);\n  }; // Reads template string tokens.\n\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp$8.tryReadTemplateToken = function () {\n    this.inTemplateElement = true;\n\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err;\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp$8.invalidStringToken = function (position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR;\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp$8.readTmplToken = function () {\n    var this$1 = this;\n    var out = \"\",\n        chunkStart = this.pos;\n\n    for (;;) {\n      if (this$1.pos >= this$1.input.length) {\n        this$1.raise(this$1.start, \"Unterminated template\");\n      }\n\n      var ch = this$1.input.charCodeAt(this$1.pos);\n\n      if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) {\n        // '`', '${'\n        if (this$1.pos === this$1.start && (this$1.type === types.template || this$1.type === types.invalidTemplate)) {\n          if (ch === 36) {\n            this$1.pos += 2;\n            return this$1.finishToken(types.dollarBraceL);\n          } else {\n            ++this$1.pos;\n            return this$1.finishToken(types.backQuote);\n          }\n        }\n\n        out += this$1.input.slice(chunkStart, this$1.pos);\n        return this$1.finishToken(types.template, out);\n      }\n\n      if (ch === 92) {\n        // '\\'\n        out += this$1.input.slice(chunkStart, this$1.pos);\n        out += this$1.readEscapedChar(true);\n        chunkStart = this$1.pos;\n      } else if (isNewLine(ch)) {\n        out += this$1.input.slice(chunkStart, this$1.pos);\n        ++this$1.pos;\n\n        switch (ch) {\n          case 13:\n            if (this$1.input.charCodeAt(this$1.pos) === 10) {\n              ++this$1.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        if (this$1.options.locations) {\n          ++this$1.curLine;\n          this$1.lineStart = this$1.pos;\n        }\n\n        chunkStart = this$1.pos;\n      } else {\n        ++this$1.pos;\n      }\n    }\n  }; // Reads a template token to search for the end, without validating any escape sequences\n\n\n  pp$8.readInvalidTemplateToken = function () {\n    var this$1 = this;\n\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this$1.input[this$1.pos]) {\n        case \"\\\\\":\n          ++this$1.pos;\n          break;\n\n        case \"$\":\n          if (this$1.input[this$1.pos + 1] !== \"{\") {\n            break;\n          }\n\n        // falls through\n\n        case \"`\":\n          return this$1.finishToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos));\n        // no default\n      }\n    }\n\n    this.raise(this.start, \"Unterminated template\");\n  }; // Used to read escaped characters\n\n\n  pp$8.readEscapedChar = function (inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n      // 'n' -> '\\n'\n\n      case 114:\n        return \"\\r\";\n      // 'r' -> '\\r'\n\n      case 120:\n        return String.fromCharCode(this.readHexChar(2));\n      // 'x'\n\n      case 117:\n        return codePointToString(this.readCodePoint());\n      // 'u'\n\n      case 116:\n        return \"\\t\";\n      // 't' -> '\\t'\n\n      case 98:\n        return \"\\b\";\n      // 'b' -> '\\b'\n\n      case 118:\n        return \"\\x0B\";\n      // 'v' -> '\\u000b'\n\n      case 102:\n        return \"\\f\";\n      // 'f' -> '\\f'\n\n      case 13:\n        if (this.input.charCodeAt(this.pos) === 10) {\n          ++this.pos;\n        }\n\n      // '\\r\\n'\n\n      case 10:\n        // ' \\n'\n        if (this.options.locations) {\n          this.lineStart = this.pos;\n          ++this.curLine;\n        }\n\n        return \"\";\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n          var octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.pos += octalStr.length - 1;\n          ch = this.input.charCodeAt(this.pos);\n\n          if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n            this.invalidStringToken(this.pos - 1 - octalStr.length, inTemplate ? \"Octal literal in template string\" : \"Octal literal in strict mode\");\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        if (isNewLine(ch)) {\n          // Unicode new line characters after \\ get removed from output in both\n          // template literals and strings\n          return \"\";\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }; // Used to read character escape sequences ('\\x', '\\u', '\\U').\n\n\n  pp$8.readHexChar = function (len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n\n    if (n === null) {\n      this.invalidStringToken(codePos, \"Bad character escape sequence\");\n    }\n\n    return n;\n  }; // Read an identifier, and return it as a string. Sets `this.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n\n  pp$8.readWord1 = function () {\n    var this$1 = this;\n    this.containsEsc = false;\n    var word = \"\",\n        first = true,\n        chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n\n    while (this.pos < this.input.length) {\n      var ch = this$1.fullCharCodeAtPos();\n\n      if (isIdentifierChar(ch, astral)) {\n        this$1.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        // \"\\\"\n        this$1.containsEsc = true;\n        word += this$1.input.slice(chunkStart, this$1.pos);\n        var escStart = this$1.pos;\n\n        if (this$1.input.charCodeAt(++this$1.pos) !== 117) // \"u\"\n          {\n            this$1.invalidStringToken(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\");\n          }\n\n        ++this$1.pos;\n        var esc = this$1.readCodePoint();\n\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral)) {\n          this$1.invalidStringToken(escStart, \"Invalid Unicode escape\");\n        }\n\n        word += codePointToString(esc);\n        chunkStart = this$1.pos;\n      } else {\n        break;\n      }\n\n      first = false;\n    }\n\n    return word + this.input.slice(chunkStart, this.pos);\n  }; // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n\n  pp$8.readWord = function () {\n    var word = this.readWord1();\n    var type = types.name;\n\n    if (this.keywords.test(word)) {\n      if (this.containsEsc) {\n        this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word);\n      }\n\n      type = keywords$1[word];\n    }\n\n    return this.finishToken(type, word);\n  }; // Acorn is a tiny, fast JavaScript parser written in JavaScript.\n  //\n  // Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n  // various contributors and released under an MIT license.\n  //\n  // Git repositories for Acorn are available at\n  //\n  //     http://marijnhaverbeke.nl/git/acorn\n  //     https://github.com/acornjs/acorn.git\n  //\n  // Please use the [github bug tracker][ghbt] to report issues.\n  //\n  // [ghbt]: https://github.com/acornjs/acorn/issues\n  //\n  // [walk]: util/walk.js\n\n\n  var version = \"6.1.1\"; // The main exported interface (under `self.acorn` when in the\n  // browser) is a `parse` function that takes a code string and\n  // returns an abstract syntax tree as specified by [Mozilla parser\n  // API][api].\n  //\n  // [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\n  function parse(input, options) {\n    return Parser.parse(input, options);\n  } // This function tries to parse a single expression at a given\n  // offset in a string. Useful for parsing mixed-language formats\n  // that embed JavaScript expressions.\n\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options);\n  } // Acorn is organized as a tokenizer and a recursive-descent parser.\n  // The `tokenizer` export provides an interface to the tokenizer.\n\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options);\n  }\n\n  var acorn =\n  /*#__PURE__*/\n  Object.freeze({\n    version: version,\n    parse: parse,\n    parseExpressionAt: parseExpressionAt,\n    tokenizer: tokenizer,\n    Parser: Parser,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types,\n    keywordTypes: keywords$1,\n    TokContext: TokContext,\n    tokContexts: types$1,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  });\n  var xhtml = {\n    quot: \"\\\"\",\n    amp: '&',\n    apos: \"'\",\n    lt: '<',\n    gt: '>',\n    nbsp: \"\\xA0\",\n    iexcl: \"\\xA1\",\n    cent: \"\\xA2\",\n    pound: \"\\xA3\",\n    curren: \"\\xA4\",\n    yen: \"\\xA5\",\n    brvbar: \"\\xA6\",\n    sect: \"\\xA7\",\n    uml: \"\\xA8\",\n    copy: \"\\xA9\",\n    ordf: \"\\xAA\",\n    laquo: \"\\xAB\",\n    not: \"\\xAC\",\n    shy: \"\\xAD\",\n    reg: \"\\xAE\",\n    macr: \"\\xAF\",\n    deg: \"\\xB0\",\n    plusmn: \"\\xB1\",\n    sup2: \"\\xB2\",\n    sup3: \"\\xB3\",\n    acute: \"\\xB4\",\n    micro: \"\\xB5\",\n    para: \"\\xB6\",\n    middot: \"\\xB7\",\n    cedil: \"\\xB8\",\n    sup1: \"\\xB9\",\n    ordm: \"\\xBA\",\n    raquo: \"\\xBB\",\n    frac14: \"\\xBC\",\n    frac12: \"\\xBD\",\n    frac34: \"\\xBE\",\n    iquest: \"\\xBF\",\n    Agrave: \"\\xC0\",\n    Aacute: \"\\xC1\",\n    Acirc: \"\\xC2\",\n    Atilde: \"\\xC3\",\n    Auml: \"\\xC4\",\n    Aring: \"\\xC5\",\n    AElig: \"\\xC6\",\n    Ccedil: \"\\xC7\",\n    Egrave: \"\\xC8\",\n    Eacute: \"\\xC9\",\n    Ecirc: \"\\xCA\",\n    Euml: \"\\xCB\",\n    Igrave: \"\\xCC\",\n    Iacute: \"\\xCD\",\n    Icirc: \"\\xCE\",\n    Iuml: \"\\xCF\",\n    ETH: \"\\xD0\",\n    Ntilde: \"\\xD1\",\n    Ograve: \"\\xD2\",\n    Oacute: \"\\xD3\",\n    Ocirc: \"\\xD4\",\n    Otilde: \"\\xD5\",\n    Ouml: \"\\xD6\",\n    times: \"\\xD7\",\n    Oslash: \"\\xD8\",\n    Ugrave: \"\\xD9\",\n    Uacute: \"\\xDA\",\n    Ucirc: \"\\xDB\",\n    Uuml: \"\\xDC\",\n    Yacute: \"\\xDD\",\n    THORN: \"\\xDE\",\n    szlig: \"\\xDF\",\n    agrave: \"\\xE0\",\n    aacute: \"\\xE1\",\n    acirc: \"\\xE2\",\n    atilde: \"\\xE3\",\n    auml: \"\\xE4\",\n    aring: \"\\xE5\",\n    aelig: \"\\xE6\",\n    ccedil: \"\\xE7\",\n    egrave: \"\\xE8\",\n    eacute: \"\\xE9\",\n    ecirc: \"\\xEA\",\n    euml: \"\\xEB\",\n    igrave: \"\\xEC\",\n    iacute: \"\\xED\",\n    icirc: \"\\xEE\",\n    iuml: \"\\xEF\",\n    eth: \"\\xF0\",\n    ntilde: \"\\xF1\",\n    ograve: \"\\xF2\",\n    oacute: \"\\xF3\",\n    ocirc: \"\\xF4\",\n    otilde: \"\\xF5\",\n    ouml: \"\\xF6\",\n    divide: \"\\xF7\",\n    oslash: \"\\xF8\",\n    ugrave: \"\\xF9\",\n    uacute: \"\\xFA\",\n    ucirc: \"\\xFB\",\n    uuml: \"\\xFC\",\n    yacute: \"\\xFD\",\n    thorn: \"\\xFE\",\n    yuml: \"\\xFF\",\n    OElig: \"\\u0152\",\n    oelig: \"\\u0153\",\n    Scaron: \"\\u0160\",\n    scaron: \"\\u0161\",\n    Yuml: \"\\u0178\",\n    fnof: \"\\u0192\",\n    circ: \"\\u02C6\",\n    tilde: \"\\u02DC\",\n    Alpha: \"\\u0391\",\n    Beta: \"\\u0392\",\n    Gamma: \"\\u0393\",\n    Delta: \"\\u0394\",\n    Epsilon: \"\\u0395\",\n    Zeta: \"\\u0396\",\n    Eta: \"\\u0397\",\n    Theta: \"\\u0398\",\n    Iota: \"\\u0399\",\n    Kappa: \"\\u039A\",\n    Lambda: \"\\u039B\",\n    Mu: \"\\u039C\",\n    Nu: \"\\u039D\",\n    Xi: \"\\u039E\",\n    Omicron: \"\\u039F\",\n    Pi: \"\\u03A0\",\n    Rho: \"\\u03A1\",\n    Sigma: \"\\u03A3\",\n    Tau: \"\\u03A4\",\n    Upsilon: \"\\u03A5\",\n    Phi: \"\\u03A6\",\n    Chi: \"\\u03A7\",\n    Psi: \"\\u03A8\",\n    Omega: \"\\u03A9\",\n    alpha: \"\\u03B1\",\n    beta: \"\\u03B2\",\n    gamma: \"\\u03B3\",\n    delta: \"\\u03B4\",\n    epsilon: \"\\u03B5\",\n    zeta: \"\\u03B6\",\n    eta: \"\\u03B7\",\n    theta: \"\\u03B8\",\n    iota: \"\\u03B9\",\n    kappa: \"\\u03BA\",\n    lambda: \"\\u03BB\",\n    mu: \"\\u03BC\",\n    nu: \"\\u03BD\",\n    xi: \"\\u03BE\",\n    omicron: \"\\u03BF\",\n    pi: \"\\u03C0\",\n    rho: \"\\u03C1\",\n    sigmaf: \"\\u03C2\",\n    sigma: \"\\u03C3\",\n    tau: \"\\u03C4\",\n    upsilon: \"\\u03C5\",\n    phi: \"\\u03C6\",\n    chi: \"\\u03C7\",\n    psi: \"\\u03C8\",\n    omega: \"\\u03C9\",\n    thetasym: \"\\u03D1\",\n    upsih: \"\\u03D2\",\n    piv: \"\\u03D6\",\n    ensp: \"\\u2002\",\n    emsp: \"\\u2003\",\n    thinsp: \"\\u2009\",\n    zwnj: \"\\u200C\",\n    zwj: \"\\u200D\",\n    lrm: \"\\u200E\",\n    rlm: \"\\u200F\",\n    ndash: \"\\u2013\",\n    mdash: \"\\u2014\",\n    lsquo: \"\\u2018\",\n    rsquo: \"\\u2019\",\n    sbquo: \"\\u201A\",\n    ldquo: \"\\u201C\",\n    rdquo: \"\\u201D\",\n    bdquo: \"\\u201E\",\n    dagger: \"\\u2020\",\n    Dagger: \"\\u2021\",\n    bull: \"\\u2022\",\n    hellip: \"\\u2026\",\n    permil: \"\\u2030\",\n    prime: \"\\u2032\",\n    Prime: \"\\u2033\",\n    lsaquo: \"\\u2039\",\n    rsaquo: \"\\u203A\",\n    oline: \"\\u203E\",\n    frasl: \"\\u2044\",\n    euro: \"\\u20AC\",\n    image: \"\\u2111\",\n    weierp: \"\\u2118\",\n    real: \"\\u211C\",\n    trade: \"\\u2122\",\n    alefsym: \"\\u2135\",\n    larr: \"\\u2190\",\n    uarr: \"\\u2191\",\n    rarr: \"\\u2192\",\n    darr: \"\\u2193\",\n    harr: \"\\u2194\",\n    crarr: \"\\u21B5\",\n    lArr: \"\\u21D0\",\n    uArr: \"\\u21D1\",\n    rArr: \"\\u21D2\",\n    dArr: \"\\u21D3\",\n    hArr: \"\\u21D4\",\n    forall: \"\\u2200\",\n    part: \"\\u2202\",\n    exist: \"\\u2203\",\n    empty: \"\\u2205\",\n    nabla: \"\\u2207\",\n    isin: \"\\u2208\",\n    notin: \"\\u2209\",\n    ni: \"\\u220B\",\n    prod: \"\\u220F\",\n    sum: \"\\u2211\",\n    minus: \"\\u2212\",\n    lowast: \"\\u2217\",\n    radic: \"\\u221A\",\n    prop: \"\\u221D\",\n    infin: \"\\u221E\",\n    ang: \"\\u2220\",\n    and: \"\\u2227\",\n    or: \"\\u2228\",\n    cap: \"\\u2229\",\n    cup: \"\\u222A\",\n    'int': \"\\u222B\",\n    there4: \"\\u2234\",\n    sim: \"\\u223C\",\n    cong: \"\\u2245\",\n    asymp: \"\\u2248\",\n    ne: \"\\u2260\",\n    equiv: \"\\u2261\",\n    le: \"\\u2264\",\n    ge: \"\\u2265\",\n    sub: \"\\u2282\",\n    sup: \"\\u2283\",\n    nsub: \"\\u2284\",\n    sube: \"\\u2286\",\n    supe: \"\\u2287\",\n    oplus: \"\\u2295\",\n    otimes: \"\\u2297\",\n    perp: \"\\u22A5\",\n    sdot: \"\\u22C5\",\n    lceil: \"\\u2308\",\n    rceil: \"\\u2309\",\n    lfloor: \"\\u230A\",\n    rfloor: \"\\u230B\",\n    lang: \"\\u2329\",\n    rang: \"\\u232A\",\n    loz: \"\\u25CA\",\n    spades: \"\\u2660\",\n    clubs: \"\\u2663\",\n    hearts: \"\\u2665\",\n    diams: \"\\u2666\"\n  };\n  var hexNumber = /^[\\da-fA-F]+$/;\n  var decimalNumber = /^\\d+$/;\n  var tt = acorn.tokTypes;\n  var TokContext$1 = acorn.TokContext;\n  var tokContexts = acorn.tokContexts;\n  var TokenType$1 = acorn.TokenType;\n  var isNewLine$1 = acorn.isNewLine;\n  var isIdentifierStart$1 = acorn.isIdentifierStart;\n  var isIdentifierChar$1 = acorn.isIdentifierChar;\n  var tc_oTag = new TokContext$1('<tag', false);\n  var tc_cTag = new TokContext$1('</tag', false);\n  var tc_expr = new TokContext$1('<tag>...</tag>', true, true);\n  var tok = {\n    jsxName: new TokenType$1('jsxName'),\n    jsxText: new TokenType$1('jsxText', {\n      beforeExpr: true\n    }),\n    jsxTagStart: new TokenType$1('jsxTagStart'),\n    jsxTagEnd: new TokenType$1('jsxTagEnd')\n  };\n\n  tok.jsxTagStart.updateContext = function () {\n    this.context.push(tc_expr); // treat as beginning of JSX expression\n\n    this.context.push(tc_oTag); // start opening tag context\n\n    this.exprAllowed = false;\n  };\n\n  tok.jsxTagEnd.updateContext = function (prevType) {\n    var out = this.context.pop();\n\n    if (out === tc_oTag && prevType === tt.slash || out === tc_cTag) {\n      this.context.pop();\n      this.exprAllowed = this.curContext() === tc_expr;\n    } else {\n      this.exprAllowed = true;\n    }\n  }; // Transforms JSX element name to string.\n\n\n  function getQualifiedJSXName(object) {\n    if (!object) {\n      return object;\n    }\n\n    if (object.type === 'JSXIdentifier') {\n      return object.name;\n    }\n\n    if (object.type === 'JSXNamespacedName') {\n      return object.namespace.name + ':' + object.name.name;\n    }\n\n    if (object.type === 'JSXMemberExpression') {\n      return getQualifiedJSXName(object.object) + '.' + getQualifiedJSXName(object.property);\n    }\n  }\n\n  var acornJsx = function acornJsx(options) {\n    options = options || {};\n    return function (Parser) {\n      return plugin({\n        allowNamespaces: options.allowNamespaces !== false,\n        allowNamespacedObjects: !!options.allowNamespacedObjects\n      }, Parser);\n    };\n  };\n\n  var tokTypes = tok;\n\n  function plugin(options, Parser) {\n    return (\n      /*@__PURE__*/\n      function (Parser) {\n        function anonymous() {\n          Parser.apply(this, arguments);\n        }\n\n        if (Parser) anonymous.__proto__ = Parser;\n        anonymous.prototype = Object.create(Parser && Parser.prototype);\n        anonymous.prototype.constructor = anonymous;\n\n        anonymous.prototype.jsx_readToken = function jsx_readToken() {\n          var out = '',\n              chunkStart = this.pos;\n\n          for (;;) {\n            if (this.pos >= this.input.length) {\n              this.raise(this.start, 'Unterminated JSX contents');\n            }\n\n            var ch = this.input.charCodeAt(this.pos);\n\n            switch (ch) {\n              case 60: // '<'\n\n              case 123:\n                // '{'\n                if (this.pos === this.start) {\n                  if (ch === 60 && this.exprAllowed) {\n                    ++this.pos;\n                    return this.finishToken(tok.jsxTagStart);\n                  }\n\n                  return this.getTokenFromCode(ch);\n                }\n\n                out += this.input.slice(chunkStart, this.pos);\n                return this.finishToken(tok.jsxText, out);\n\n              case 38:\n                // '&'\n                out += this.input.slice(chunkStart, this.pos);\n                out += this.jsx_readEntity();\n                chunkStart = this.pos;\n                break;\n\n              default:\n                if (isNewLine$1(ch)) {\n                  out += this.input.slice(chunkStart, this.pos);\n                  out += this.jsx_readNewLine(true);\n                  chunkStart = this.pos;\n                } else {\n                  ++this.pos;\n                }\n\n            }\n          }\n        };\n\n        anonymous.prototype.jsx_readNewLine = function jsx_readNewLine(normalizeCRLF) {\n          var ch = this.input.charCodeAt(this.pos);\n          var out;\n          ++this.pos;\n\n          if (ch === 13 && this.input.charCodeAt(this.pos) === 10) {\n            ++this.pos;\n            out = normalizeCRLF ? '\\n' : '\\r\\n';\n          } else {\n            out = String.fromCharCode(ch);\n          }\n\n          if (this.options.locations) {\n            ++this.curLine;\n            this.lineStart = this.pos;\n          }\n\n          return out;\n        };\n\n        anonymous.prototype.jsx_readString = function jsx_readString(quote) {\n          var out = '',\n              chunkStart = ++this.pos;\n\n          for (;;) {\n            if (this.pos >= this.input.length) {\n              this.raise(this.start, 'Unterminated string constant');\n            }\n\n            var ch = this.input.charCodeAt(this.pos);\n\n            if (ch === quote) {\n              break;\n            }\n\n            if (ch === 38) {\n              // '&'\n              out += this.input.slice(chunkStart, this.pos);\n              out += this.jsx_readEntity();\n              chunkStart = this.pos;\n            } else if (isNewLine$1(ch)) {\n              out += this.input.slice(chunkStart, this.pos);\n              out += this.jsx_readNewLine(false);\n              chunkStart = this.pos;\n            } else {\n              ++this.pos;\n            }\n          }\n\n          out += this.input.slice(chunkStart, this.pos++);\n          return this.finishToken(tt.string, out);\n        };\n\n        anonymous.prototype.jsx_readEntity = function jsx_readEntity() {\n          var str = '',\n              count = 0,\n              entity;\n          var ch = this.input[this.pos];\n\n          if (ch !== '&') {\n            this.raise(this.pos, 'Entity must start with an ampersand');\n          }\n\n          var startPos = ++this.pos;\n\n          while (this.pos < this.input.length && count++ < 10) {\n            ch = this.input[this.pos++];\n\n            if (ch === ';') {\n              if (str[0] === '#') {\n                if (str[1] === 'x') {\n                  str = str.substr(2);\n\n                  if (hexNumber.test(str)) {\n                    entity = String.fromCharCode(parseInt(str, 16));\n                  }\n                } else {\n                  str = str.substr(1);\n\n                  if (decimalNumber.test(str)) {\n                    entity = String.fromCharCode(parseInt(str, 10));\n                  }\n                }\n              } else {\n                entity = xhtml[str];\n              }\n\n              break;\n            }\n\n            str += ch;\n          }\n\n          if (!entity) {\n            this.pos = startPos;\n            return '&';\n          }\n\n          return entity;\n        }; // Read a JSX identifier (valid tag or attribute name).\n        //\n        // Optimized version since JSX identifiers can't contain\n        // escape characters and so can be read as single slice.\n        // Also assumes that first character was already checked\n        // by isIdentifierStart in readToken.\n\n\n        anonymous.prototype.jsx_readWord = function jsx_readWord() {\n          var ch,\n              start = this.pos;\n\n          do {\n            ch = this.input.charCodeAt(++this.pos);\n          } while (isIdentifierChar$1(ch) || ch === 45); // '-'\n\n\n          return this.finishToken(tok.jsxName, this.input.slice(start, this.pos));\n        }; // Parse next token as JSX identifier\n\n\n        anonymous.prototype.jsx_parseIdentifier = function jsx_parseIdentifier() {\n          var node = this.startNode();\n\n          if (this.type === tok.jsxName) {\n            node.name = this.value;\n          } else if (this.type.keyword) {\n            node.name = this.type.keyword;\n          } else {\n            this.unexpected();\n          }\n\n          this.next();\n          return this.finishNode(node, 'JSXIdentifier');\n        }; // Parse namespaced identifier.\n\n\n        anonymous.prototype.jsx_parseNamespacedName = function jsx_parseNamespacedName() {\n          var startPos = this.start,\n              startLoc = this.startLoc;\n          var name = this.jsx_parseIdentifier();\n\n          if (!options.allowNamespaces || !this.eat(tt.colon)) {\n            return name;\n          }\n\n          var node = this.startNodeAt(startPos, startLoc);\n          node.namespace = name;\n          node.name = this.jsx_parseIdentifier();\n          return this.finishNode(node, 'JSXNamespacedName');\n        }; // Parses element name in any form - namespaced, member\n        // or single identifier.\n\n\n        anonymous.prototype.jsx_parseElementName = function jsx_parseElementName() {\n          if (this.type === tok.jsxTagEnd) {\n            return '';\n          }\n\n          var startPos = this.start,\n              startLoc = this.startLoc;\n          var node = this.jsx_parseNamespacedName();\n\n          if (this.type === tt.dot && node.type === 'JSXNamespacedName' && !options.allowNamespacedObjects) {\n            this.unexpected();\n          }\n\n          while (this.eat(tt.dot)) {\n            var newNode = this.startNodeAt(startPos, startLoc);\n            newNode.object = node;\n            newNode.property = this.jsx_parseIdentifier();\n            node = this.finishNode(newNode, 'JSXMemberExpression');\n          }\n\n          return node;\n        }; // Parses any type of JSX attribute value.\n\n\n        anonymous.prototype.jsx_parseAttributeValue = function jsx_parseAttributeValue() {\n          switch (this.type) {\n            case tt.braceL:\n              var node = this.jsx_parseExpressionContainer();\n\n              if (node.expression.type === 'JSXEmptyExpression') {\n                this.raise(node.start, 'JSX attributes must only be assigned a non-empty expression');\n              }\n\n              return node;\n\n            case tok.jsxTagStart:\n            case tt.string:\n              return this.parseExprAtom();\n\n            default:\n              this.raise(this.start, 'JSX value should be either an expression or a quoted JSX text');\n          }\n        }; // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n        // and so it should start at the end of last read token (left brace) and finish\n        // at the beginning of the next one (right brace).\n\n\n        anonymous.prototype.jsx_parseEmptyExpression = function jsx_parseEmptyExpression() {\n          var node = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);\n          return this.finishNodeAt(node, 'JSXEmptyExpression', this.start, this.startLoc);\n        }; // Parses JSX expression enclosed into curly brackets.\n\n\n        anonymous.prototype.jsx_parseExpressionContainer = function jsx_parseExpressionContainer() {\n          var node = this.startNode();\n          this.next();\n          node.expression = this.type === tt.braceR ? this.jsx_parseEmptyExpression() : this.parseExpression();\n          this.expect(tt.braceR);\n          return this.finishNode(node, 'JSXExpressionContainer');\n        }; // Parses following JSX attribute name-value pair.\n\n\n        anonymous.prototype.jsx_parseAttribute = function jsx_parseAttribute() {\n          var node = this.startNode();\n\n          if (this.eat(tt.braceL)) {\n            this.expect(tt.ellipsis);\n            node.argument = this.parseMaybeAssign();\n            this.expect(tt.braceR);\n            return this.finishNode(node, 'JSXSpreadAttribute');\n          }\n\n          node.name = this.jsx_parseNamespacedName();\n          node.value = this.eat(tt.eq) ? this.jsx_parseAttributeValue() : null;\n          return this.finishNode(node, 'JSXAttribute');\n        }; // Parses JSX opening tag starting after '<'.\n\n\n        anonymous.prototype.jsx_parseOpeningElementAt = function jsx_parseOpeningElementAt(startPos, startLoc) {\n          var node = this.startNodeAt(startPos, startLoc);\n          node.attributes = [];\n          var nodeName = this.jsx_parseElementName();\n\n          if (nodeName) {\n            node.name = nodeName;\n          }\n\n          while (this.type !== tt.slash && this.type !== tok.jsxTagEnd) {\n            node.attributes.push(this.jsx_parseAttribute());\n          }\n\n          node.selfClosing = this.eat(tt.slash);\n          this.expect(tok.jsxTagEnd);\n          return this.finishNode(node, nodeName ? 'JSXOpeningElement' : 'JSXOpeningFragment');\n        }; // Parses JSX closing tag starting after '</'.\n\n\n        anonymous.prototype.jsx_parseClosingElementAt = function jsx_parseClosingElementAt(startPos, startLoc) {\n          var node = this.startNodeAt(startPos, startLoc);\n          var nodeName = this.jsx_parseElementName();\n\n          if (nodeName) {\n            node.name = nodeName;\n          }\n\n          this.expect(tok.jsxTagEnd);\n          return this.finishNode(node, nodeName ? 'JSXClosingElement' : 'JSXClosingFragment');\n        }; // Parses entire JSX element, including it's opening tag\n        // (starting after '<'), attributes, contents and closing tag.\n\n\n        anonymous.prototype.jsx_parseElementAt = function jsx_parseElementAt(startPos, startLoc) {\n          var node = this.startNodeAt(startPos, startLoc);\n          var children = [];\n          var openingElement = this.jsx_parseOpeningElementAt(startPos, startLoc);\n          var closingElement = null;\n\n          if (!openingElement.selfClosing) {\n            contents: for (;;) {\n              switch (this.type) {\n                case tok.jsxTagStart:\n                  startPos = this.start;\n                  startLoc = this.startLoc;\n                  this.next();\n\n                  if (this.eat(tt.slash)) {\n                    closingElement = this.jsx_parseClosingElementAt(startPos, startLoc);\n                    break contents;\n                  }\n\n                  children.push(this.jsx_parseElementAt(startPos, startLoc));\n                  break;\n\n                case tok.jsxText:\n                  children.push(this.parseExprAtom());\n                  break;\n\n                case tt.braceL:\n                  children.push(this.jsx_parseExpressionContainer());\n                  break;\n\n                default:\n                  this.unexpected();\n              }\n            }\n\n            if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n              this.raise(closingElement.start, 'Expected corresponding JSX closing tag for <' + getQualifiedJSXName(openingElement.name) + '>');\n            }\n          }\n\n          var fragmentOrElement = openingElement.name ? 'Element' : 'Fragment';\n          node['opening' + fragmentOrElement] = openingElement;\n          node['closing' + fragmentOrElement] = closingElement;\n          node.children = children;\n\n          if (this.type === tt.relational && this.value === \"<\") {\n            this.raise(this.start, \"Adjacent JSX elements must be wrapped in an enclosing tag\");\n          }\n\n          return this.finishNode(node, 'JSX' + fragmentOrElement);\n        }; // Parse JSX text\n\n\n        anonymous.prototype.jsx_parseText = function jsx_parseText(value) {\n          var node = this.parseLiteral(value);\n          node.type = \"JSXText\";\n          return node;\n        }; // Parses entire JSX element from current position.\n\n\n        anonymous.prototype.jsx_parseElement = function jsx_parseElement() {\n          var startPos = this.start,\n              startLoc = this.startLoc;\n          this.next();\n          return this.jsx_parseElementAt(startPos, startLoc);\n        };\n\n        anonymous.prototype.parseExprAtom = function parseExprAtom(refShortHandDefaultPos) {\n          if (this.type === tok.jsxText) {\n            return this.jsx_parseText(this.value);\n          } else if (this.type === tok.jsxTagStart) {\n            return this.jsx_parseElement();\n          } else {\n            return Parser.prototype.parseExprAtom.call(this, refShortHandDefaultPos);\n          }\n        };\n\n        anonymous.prototype.readToken = function readToken(code) {\n          var context = this.curContext();\n\n          if (context === tc_expr) {\n            return this.jsx_readToken();\n          }\n\n          if (context === tc_oTag || context === tc_cTag) {\n            if (isIdentifierStart$1(code)) {\n              return this.jsx_readWord();\n            }\n\n            if (code == 62) {\n              ++this.pos;\n              return this.finishToken(tok.jsxTagEnd);\n            }\n\n            if ((code === 34 || code === 39) && context == tc_oTag) {\n              return this.jsx_readString(code);\n            }\n          }\n\n          if (code === 60 && this.exprAllowed && this.input.charCodeAt(this.pos + 1) !== 33) {\n            ++this.pos;\n            return this.finishToken(tok.jsxTagStart);\n          }\n\n          return Parser.prototype.readToken.call(this, code);\n        };\n\n        anonymous.prototype.updateContext = function updateContext(prevType) {\n          if (this.type == tt.braceL) {\n            var curContext = this.curContext();\n\n            if (curContext == tc_oTag) {\n              this.context.push(tokContexts.b_expr);\n            } else if (curContext == tc_expr) {\n              this.context.push(tokContexts.b_tmpl);\n            } else {\n              Parser.prototype.updateContext.call(this, prevType);\n            }\n\n            this.exprAllowed = true;\n          } else if (this.type === tt.slash && prevType === tok.jsxTagStart) {\n            this.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n\n            this.context.push(tc_cTag); // reconsider as closing tag context\n\n            this.exprAllowed = false;\n          } else {\n            return Parser.prototype.updateContext.call(this, prevType);\n          }\n        };\n\n        return anonymous;\n      }(Parser)\n    );\n  }\n\n  acornJsx.tokTypes = tokTypes;\n  var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function commonjsRequire() {\n    throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');\n  }\n\n  function unwrapExports(x) {\n    return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n  }\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n\n  var lib = createCommonjsModule(function (module, exports) {\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.DynamicImportKey = undefined;\n\n    var _createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var _get = function () {\n      function get(object, property, receiver) {\n        if (object === null) object = Function.prototype;\n        var desc = Object.getOwnPropertyDescriptor(object, property);\n\n        if (desc === undefined) {\n          var parent = Object.getPrototypeOf(object);\n\n          if (parent === null) {\n            return undefined;\n          } else {\n            return get(parent, property, receiver);\n          }\n        } else if (\"value\" in desc) {\n          return desc.value;\n        } else {\n          var getter = desc.get;\n\n          if (getter === undefined) {\n            return undefined;\n          }\n\n          return getter.call(receiver);\n        }\n      }\n\n      return get;\n    }();\n\n    exports['default'] = dynamicImport;\n\n    function _classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n\n    function _possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    }\n\n    function _inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    }\n    /* eslint-disable no-underscore-dangle */\n\n\n    var DynamicImportKey = exports.DynamicImportKey = 'Import'; // NOTE: This allows `yield import()` to parse correctly.\n\n    acorn.tokTypes._import.startsExpr = true;\n\n    function parseDynamicImport() {\n      var node = this.startNode();\n      this.next();\n\n      if (this.type !== acorn.tokTypes.parenL) {\n        this.unexpected();\n      }\n\n      return this.finishNode(node, DynamicImportKey);\n    }\n\n    function parenAfter() {\n      return /^(\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*\\(/.test(this.input.slice(this.pos));\n    }\n\n    function dynamicImport(Parser) {\n      return function (_Parser) {\n        _inherits(_class, _Parser);\n\n        function _class() {\n          _classCallCheck(this, _class);\n\n          return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n        }\n\n        _createClass(_class, [{\n          key: 'parseStatement',\n          value: function () {\n            function parseStatement(context, topLevel, exports) {\n              if (this.type === acorn.tokTypes._import && parenAfter.call(this)) {\n                return this.parseExpressionStatement(this.startNode(), this.parseExpression());\n              }\n\n              return _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'parseStatement', this).call(this, context, topLevel, exports);\n            }\n\n            return parseStatement;\n          }()\n        }, {\n          key: 'parseExprAtom',\n          value: function () {\n            function parseExprAtom(refDestructuringErrors) {\n              if (this.type === acorn.tokTypes._import) {\n                return parseDynamicImport.call(this);\n              }\n\n              return _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'parseExprAtom', this).call(this, refDestructuringErrors);\n            }\n\n            return parseExprAtom;\n          }()\n        }]);\n\n        return _class;\n      }(Parser);\n    }\n  });\n  var acornDynamicImport = unwrapExports(lib);\n  var lib_1 = lib.DynamicImportKey;\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function encode(decoded) {\n    var sourceFileIndex = 0; // second field\n\n    var sourceCodeLine = 0; // third field\n\n    var sourceCodeColumn = 0; // fourth field\n\n    var nameIndex = 0; // fifth field\n\n    var mappings = '';\n\n    for (var i = 0; i < decoded.length; i++) {\n      var line = decoded[i];\n      if (i > 0) mappings += ';';\n      if (line.length === 0) continue;\n      var generatedCodeColumn = 0; // first field\n\n      var lineMappings = [];\n\n      for (var _i = 0, line_1 = line; _i < line_1.length; _i++) {\n        var segment = line_1[_i];\n        var segmentMappings = encodeInteger(segment[0] - generatedCodeColumn);\n        generatedCodeColumn = segment[0];\n\n        if (segment.length > 1) {\n          segmentMappings += encodeInteger(segment[1] - sourceFileIndex) + encodeInteger(segment[2] - sourceCodeLine) + encodeInteger(segment[3] - sourceCodeColumn);\n          sourceFileIndex = segment[1];\n          sourceCodeLine = segment[2];\n          sourceCodeColumn = segment[3];\n        }\n\n        if (segment.length === 5) {\n          segmentMappings += encodeInteger(segment[4] - nameIndex);\n          nameIndex = segment[4];\n        }\n\n        lineMappings.push(segmentMappings);\n      }\n\n      mappings += lineMappings.join(',');\n    }\n\n    return mappings;\n  }\n\n  function encodeInteger(num) {\n    var result = '';\n    num = num < 0 ? -num << 1 | 1 : num << 1;\n\n    do {\n      var clamped = num & 31;\n      num >>= 5;\n\n      if (num > 0) {\n        clamped |= 32;\n      }\n\n      result += chars[clamped];\n    } while (num > 0);\n\n    return result;\n  }\n\n  var Chunk = function Chunk(start, end, content) {\n    this.start = start;\n    this.end = end;\n    this.original = content;\n    this.intro = '';\n    this.outro = '';\n    this.content = content;\n    this.storeName = false;\n    this.edited = false; // we make these non-enumerable, for sanity while debugging\n\n    Object.defineProperties(this, {\n      previous: {\n        writable: true,\n        value: null\n      },\n      next: {\n        writable: true,\n        value: null\n      }\n    });\n  };\n\n  Chunk.prototype.appendLeft = function appendLeft(content) {\n    this.outro += content;\n  };\n\n  Chunk.prototype.appendRight = function appendRight(content) {\n    this.intro = this.intro + content;\n  };\n\n  Chunk.prototype.clone = function clone() {\n    var chunk = new Chunk(this.start, this.end, this.original);\n    chunk.intro = this.intro;\n    chunk.outro = this.outro;\n    chunk.content = this.content;\n    chunk.storeName = this.storeName;\n    chunk.edited = this.edited;\n    return chunk;\n  };\n\n  Chunk.prototype.contains = function contains(index) {\n    return this.start < index && index < this.end;\n  };\n\n  Chunk.prototype.eachNext = function eachNext(fn) {\n    var chunk = this;\n\n    while (chunk) {\n      fn(chunk);\n      chunk = chunk.next;\n    }\n  };\n\n  Chunk.prototype.eachPrevious = function eachPrevious(fn) {\n    var chunk = this;\n\n    while (chunk) {\n      fn(chunk);\n      chunk = chunk.previous;\n    }\n  };\n\n  Chunk.prototype.edit = function edit(content, storeName, contentOnly) {\n    this.content = content;\n\n    if (!contentOnly) {\n      this.intro = '';\n      this.outro = '';\n    }\n\n    this.storeName = storeName;\n    this.edited = true;\n    return this;\n  };\n\n  Chunk.prototype.prependLeft = function prependLeft(content) {\n    this.outro = content + this.outro;\n  };\n\n  Chunk.prototype.prependRight = function prependRight(content) {\n    this.intro = content + this.intro;\n  };\n\n  Chunk.prototype.split = function split(index) {\n    var sliceIndex = index - this.start;\n    var originalBefore = this.original.slice(0, sliceIndex);\n    var originalAfter = this.original.slice(sliceIndex);\n    this.original = originalBefore;\n    var newChunk = new Chunk(index, this.end, originalAfter);\n    newChunk.outro = this.outro;\n    this.outro = '';\n    this.end = index;\n\n    if (this.edited) {\n      // TODO is this block necessary?...\n      newChunk.edit('', false);\n      this.content = '';\n    } else {\n      this.content = originalBefore;\n    }\n\n    newChunk.next = this.next;\n\n    if (newChunk.next) {\n      newChunk.next.previous = newChunk;\n    }\n\n    newChunk.previous = this;\n    this.next = newChunk;\n    return newChunk;\n  };\n\n  Chunk.prototype.toString = function toString() {\n    return this.intro + this.content + this.outro;\n  };\n\n  Chunk.prototype.trimEnd = function trimEnd(rx) {\n    this.outro = this.outro.replace(rx, '');\n\n    if (this.outro.length) {\n      return true;\n    }\n\n    var trimmed = this.content.replace(rx, '');\n\n    if (trimmed.length) {\n      if (trimmed !== this.content) {\n        this.split(this.start + trimmed.length).edit('', undefined, true);\n      }\n\n      return true;\n    } else {\n      this.edit('', undefined, true);\n      this.intro = this.intro.replace(rx, '');\n\n      if (this.intro.length) {\n        return true;\n      }\n    }\n  };\n\n  Chunk.prototype.trimStart = function trimStart(rx) {\n    this.intro = this.intro.replace(rx, '');\n\n    if (this.intro.length) {\n      return true;\n    }\n\n    var trimmed = this.content.replace(rx, '');\n\n    if (trimmed.length) {\n      if (trimmed !== this.content) {\n        this.split(this.end - trimmed.length);\n        this.edit('', undefined, true);\n      }\n\n      return true;\n    } else {\n      this.edit('', undefined, true);\n      this.outro = this.outro.replace(rx, '');\n\n      if (this.outro.length) {\n        return true;\n      }\n    }\n  };\n\n  var btoa = function btoa() {\n    throw new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\n  };\n\n  if (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n    btoa = function btoa(str) {\n      return window.btoa(unescape(encodeURIComponent(str)));\n    };\n  } else if (typeof Buffer === 'function') {\n    btoa = function btoa(str) {\n      return Buffer.from(str, 'utf-8').toString('base64');\n    };\n  }\n\n  var SourceMap = function SourceMap(properties) {\n    this.version = 3;\n    this.file = properties.file;\n    this.sources = properties.sources;\n    this.sourcesContent = properties.sourcesContent;\n    this.names = properties.names;\n    this.mappings = encode(properties.mappings);\n  };\n\n  SourceMap.prototype.toString = function toString() {\n    return JSON.stringify(this);\n  };\n\n  SourceMap.prototype.toUrl = function toUrl() {\n    return 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\n  };\n\n  function guessIndent(code) {\n    var lines = code.split('\\n');\n    var tabbed = lines.filter(function (line) {\n      return /^\\t+/.test(line);\n    });\n    var spaced = lines.filter(function (line) {\n      return /^ {2,}/.test(line);\n    });\n\n    if (tabbed.length === 0 && spaced.length === 0) {\n      return null;\n    } // More lines tabbed than spaced? Assume tabs, and\n    // default to tabs in the case of a tie (or nothing\n    // to go on)\n\n\n    if (tabbed.length >= spaced.length) {\n      return '\\t';\n    } // Otherwise, we need to guess the multiple\n\n\n    var min = spaced.reduce(function (previous, current) {\n      var numSpaces = /^ +/.exec(current)[0].length;\n      return Math.min(numSpaces, previous);\n    }, Infinity);\n    return new Array(min + 1).join(' ');\n  }\n\n  function getRelativePath(from, to) {\n    var fromParts = from.split(/[/\\\\]/);\n    var toParts = to.split(/[/\\\\]/);\n    fromParts.pop(); // get dirname\n\n    while (fromParts[0] === toParts[0]) {\n      fromParts.shift();\n      toParts.shift();\n    }\n\n    if (fromParts.length) {\n      var i = fromParts.length;\n\n      while (i--) {\n        fromParts[i] = '..';\n      }\n    }\n\n    return fromParts.concat(toParts).join('/');\n  }\n\n  var toString$1 = Object.prototype.toString;\n\n  function isObject(thing) {\n    return toString$1.call(thing) === '[object Object]';\n  }\n\n  function getLocator(source) {\n    var originalLines = source.split('\\n');\n    var lineOffsets = [];\n\n    for (var i = 0, pos = 0; i < originalLines.length; i++) {\n      lineOffsets.push(pos);\n      pos += originalLines[i].length + 1;\n    }\n\n    return function locate(index) {\n      var i = 0;\n      var j = lineOffsets.length;\n\n      while (i < j) {\n        var m = i + j >> 1;\n\n        if (index < lineOffsets[m]) {\n          j = m;\n        } else {\n          i = m + 1;\n        }\n      }\n\n      var line = i - 1;\n      var column = index - lineOffsets[line];\n      return {\n        line: line,\n        column: column\n      };\n    };\n  }\n\n  var Mappings = function Mappings(hires) {\n    this.hires = hires;\n    this.generatedCodeLine = 0;\n    this.generatedCodeColumn = 0;\n    this.raw = [];\n    this.rawSegments = this.raw[this.generatedCodeLine] = [];\n    this.pending = null;\n  };\n\n  Mappings.prototype.addEdit = function addEdit(sourceIndex, content, loc, nameIndex) {\n    if (content.length) {\n      var segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\n      if (nameIndex >= 0) {\n        segment.push(nameIndex);\n      }\n\n      this.rawSegments.push(segment);\n    } else if (this.pending) {\n      this.rawSegments.push(this.pending);\n    }\n\n    this.advance(content);\n    this.pending = null;\n  };\n\n  Mappings.prototype.addUneditedChunk = function addUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\n    var originalCharIndex = chunk.start;\n    var first = true;\n\n    while (originalCharIndex < chunk.end) {\n      if (this.hires || first || sourcemapLocations[originalCharIndex]) {\n        this.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\n      }\n\n      if (original[originalCharIndex] === '\\n') {\n        loc.line += 1;\n        loc.column = 0;\n        this.generatedCodeLine += 1;\n        this.raw[this.generatedCodeLine] = this.rawSegments = [];\n        this.generatedCodeColumn = 0;\n      } else {\n        loc.column += 1;\n        this.generatedCodeColumn += 1;\n      }\n\n      originalCharIndex += 1;\n      first = false;\n    }\n\n    this.pending = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n  };\n\n  Mappings.prototype.advance = function advance(str) {\n    if (!str) {\n      return;\n    }\n\n    var lines = str.split('\\n');\n\n    if (lines.length > 1) {\n      for (var i = 0; i < lines.length - 1; i++) {\n        this.generatedCodeLine++;\n        this.raw[this.generatedCodeLine] = this.rawSegments = [];\n      }\n\n      this.generatedCodeColumn = 0;\n    }\n\n    this.generatedCodeColumn += lines[lines.length - 1].length;\n  };\n\n  var n = '\\n';\n  var warned = {\n    insertLeft: false,\n    insertRight: false,\n    storeName: false\n  };\n\n  var MagicString = function MagicString(string, options) {\n    if (options === void 0) options = {};\n    var chunk = new Chunk(0, string.length, string);\n    Object.defineProperties(this, {\n      original: {\n        writable: true,\n        value: string\n      },\n      outro: {\n        writable: true,\n        value: ''\n      },\n      intro: {\n        writable: true,\n        value: ''\n      },\n      firstChunk: {\n        writable: true,\n        value: chunk\n      },\n      lastChunk: {\n        writable: true,\n        value: chunk\n      },\n      lastSearchedChunk: {\n        writable: true,\n        value: chunk\n      },\n      byStart: {\n        writable: true,\n        value: {}\n      },\n      byEnd: {\n        writable: true,\n        value: {}\n      },\n      filename: {\n        writable: true,\n        value: options.filename\n      },\n      indentExclusionRanges: {\n        writable: true,\n        value: options.indentExclusionRanges\n      },\n      sourcemapLocations: {\n        writable: true,\n        value: {}\n      },\n      storedNames: {\n        writable: true,\n        value: {}\n      },\n      indentStr: {\n        writable: true,\n        value: guessIndent(string)\n      }\n    });\n    this.byStart[0] = chunk;\n    this.byEnd[string.length] = chunk;\n  };\n\n  MagicString.prototype.addSourcemapLocation = function addSourcemapLocation(_char2) {\n    this.sourcemapLocations[_char2] = true;\n  };\n\n  MagicString.prototype.append = function append(content) {\n    if (typeof content !== 'string') {\n      throw new TypeError('outro content must be a string');\n    }\n\n    this.outro += content;\n    return this;\n  };\n\n  MagicString.prototype.appendLeft = function appendLeft(index, content) {\n    if (typeof content !== 'string') {\n      throw new TypeError('inserted content must be a string');\n    }\n\n    this._split(index);\n\n    var chunk = this.byEnd[index];\n\n    if (chunk) {\n      chunk.appendLeft(content);\n    } else {\n      this.intro += content;\n    }\n\n    return this;\n  };\n\n  MagicString.prototype.appendRight = function appendRight(index, content) {\n    if (typeof content !== 'string') {\n      throw new TypeError('inserted content must be a string');\n    }\n\n    this._split(index);\n\n    var chunk = this.byStart[index];\n\n    if (chunk) {\n      chunk.appendRight(content);\n    } else {\n      this.outro += content;\n    }\n\n    return this;\n  };\n\n  MagicString.prototype.clone = function clone() {\n    var cloned = new MagicString(this.original, {\n      filename: this.filename\n    });\n    var originalChunk = this.firstChunk;\n    var clonedChunk = cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone();\n\n    while (originalChunk) {\n      cloned.byStart[clonedChunk.start] = clonedChunk;\n      cloned.byEnd[clonedChunk.end] = clonedChunk;\n      var nextOriginalChunk = originalChunk.next;\n      var nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n      if (nextClonedChunk) {\n        clonedChunk.next = nextClonedChunk;\n        nextClonedChunk.previous = clonedChunk;\n        clonedChunk = nextClonedChunk;\n      }\n\n      originalChunk = nextOriginalChunk;\n    }\n\n    cloned.lastChunk = clonedChunk;\n\n    if (this.indentExclusionRanges) {\n      cloned.indentExclusionRanges = this.indentExclusionRanges.slice();\n    }\n\n    Object.keys(this.sourcemapLocations).forEach(function (loc) {\n      cloned.sourcemapLocations[loc] = true;\n    });\n    return cloned;\n  };\n\n  MagicString.prototype.generateDecodedMap = function generateDecodedMap(options) {\n    var this$1 = this;\n    options = options || {};\n    var sourceIndex = 0;\n    var names = Object.keys(this.storedNames);\n    var mappings = new Mappings(options.hires);\n    var locate = getLocator(this.original);\n\n    if (this.intro) {\n      mappings.advance(this.intro);\n    }\n\n    this.firstChunk.eachNext(function (chunk) {\n      var loc = locate(chunk.start);\n\n      if (chunk.intro.length) {\n        mappings.advance(chunk.intro);\n      }\n\n      if (chunk.edited) {\n        mappings.addEdit(sourceIndex, chunk.content, loc, chunk.storeName ? names.indexOf(chunk.original) : -1);\n      } else {\n        mappings.addUneditedChunk(sourceIndex, chunk, this$1.original, loc, this$1.sourcemapLocations);\n      }\n\n      if (chunk.outro.length) {\n        mappings.advance(chunk.outro);\n      }\n    });\n    return {\n      file: options.file ? options.file.split(/[/\\\\]/).pop() : null,\n      sources: [options.source ? getRelativePath(options.file || '', options.source) : null],\n      sourcesContent: options.includeContent ? [this.original] : [null],\n      names: names,\n      mappings: mappings.raw\n    };\n  };\n\n  MagicString.prototype.generateMap = function generateMap(options) {\n    return new SourceMap(this.generateDecodedMap(options));\n  };\n\n  MagicString.prototype.getIndentString = function getIndentString() {\n    return this.indentStr === null ? '\\t' : this.indentStr;\n  };\n\n  MagicString.prototype.indent = function indent(indentStr, options) {\n    var pattern = /^[^\\r\\n]/gm;\n\n    if (isObject(indentStr)) {\n      options = indentStr;\n      indentStr = undefined;\n    }\n\n    indentStr = indentStr !== undefined ? indentStr : this.indentStr || '\\t';\n\n    if (indentStr === '') {\n      return this;\n    } // noop\n\n\n    options = options || {}; // Process exclusion ranges\n\n    var isExcluded = {};\n\n    if (options.exclude) {\n      var exclusions = typeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\n      exclusions.forEach(function (exclusion) {\n        for (var i = exclusion[0]; i < exclusion[1]; i += 1) {\n          isExcluded[i] = true;\n        }\n      });\n    }\n\n    var shouldIndentNextCharacter = options.indentStart !== false;\n\n    var replacer = function replacer(match) {\n      if (shouldIndentNextCharacter) {\n        return \"\" + indentStr + match;\n      }\n\n      shouldIndentNextCharacter = true;\n      return match;\n    };\n\n    this.intro = this.intro.replace(pattern, replacer);\n    var charIndex = 0;\n    var chunk = this.firstChunk;\n\n    while (chunk) {\n      var end = chunk.end;\n\n      if (chunk.edited) {\n        if (!isExcluded[charIndex]) {\n          chunk.content = chunk.content.replace(pattern, replacer);\n\n          if (chunk.content.length) {\n            shouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\n          }\n        }\n      } else {\n        charIndex = chunk.start;\n\n        while (charIndex < end) {\n          if (!isExcluded[charIndex]) {\n            var _char3 = this.original[charIndex];\n\n            if (_char3 === '\\n') {\n              shouldIndentNextCharacter = true;\n            } else if (_char3 !== '\\r' && shouldIndentNextCharacter) {\n              shouldIndentNextCharacter = false;\n\n              if (charIndex === chunk.start) {\n                chunk.prependRight(indentStr);\n              } else {\n                this._splitChunk(chunk, charIndex);\n\n                chunk = chunk.next;\n                chunk.prependRight(indentStr);\n              }\n            }\n          }\n\n          charIndex += 1;\n        }\n      }\n\n      charIndex = chunk.end;\n      chunk = chunk.next;\n    }\n\n    this.outro = this.outro.replace(pattern, replacer);\n    return this;\n  };\n\n  MagicString.prototype.insert = function insert() {\n    throw new Error('magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)');\n  };\n\n  MagicString.prototype.insertLeft = function insertLeft(index, content) {\n    if (!warned.insertLeft) {\n      console.warn('magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'); // eslint-disable-line no-console\n\n      warned.insertLeft = true;\n    }\n\n    return this.appendLeft(index, content);\n  };\n\n  MagicString.prototype.insertRight = function insertRight(index, content) {\n    if (!warned.insertRight) {\n      console.warn('magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'); // eslint-disable-line no-console\n\n      warned.insertRight = true;\n    }\n\n    return this.prependRight(index, content);\n  };\n\n  MagicString.prototype.move = function move(start, end, index) {\n    if (index >= start && index <= end) {\n      throw new Error('Cannot move a selection inside itself');\n    }\n\n    this._split(start);\n\n    this._split(end);\n\n    this._split(index);\n\n    var first = this.byStart[start];\n    var last = this.byEnd[end];\n    var oldLeft = first.previous;\n    var oldRight = last.next;\n    var newRight = this.byStart[index];\n\n    if (!newRight && last === this.lastChunk) {\n      return this;\n    }\n\n    var newLeft = newRight ? newRight.previous : this.lastChunk;\n\n    if (oldLeft) {\n      oldLeft.next = oldRight;\n    }\n\n    if (oldRight) {\n      oldRight.previous = oldLeft;\n    }\n\n    if (newLeft) {\n      newLeft.next = first;\n    }\n\n    if (newRight) {\n      newRight.previous = last;\n    }\n\n    if (!first.previous) {\n      this.firstChunk = last.next;\n    }\n\n    if (!last.next) {\n      this.lastChunk = first.previous;\n      this.lastChunk.next = null;\n    }\n\n    first.previous = newLeft;\n    last.next = newRight || null;\n\n    if (!newLeft) {\n      this.firstChunk = first;\n    }\n\n    if (!newRight) {\n      this.lastChunk = last;\n    }\n\n    return this;\n  };\n\n  MagicString.prototype.overwrite = function overwrite(start, end, content, options) {\n    if (typeof content !== 'string') {\n      throw new TypeError('replacement content must be a string');\n    }\n\n    while (start < 0) {\n      start += this.original.length;\n    }\n\n    while (end < 0) {\n      end += this.original.length;\n    }\n\n    if (end > this.original.length) {\n      throw new Error('end is out of bounds');\n    }\n\n    if (start === end) {\n      throw new Error('Cannot overwrite a zero-length range – use appendLeft or prependRight instead');\n    }\n\n    this._split(start);\n\n    this._split(end);\n\n    if (options === true) {\n      if (!warned.storeName) {\n        console.warn('The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'); // eslint-disable-line no-console\n\n        warned.storeName = true;\n      }\n\n      options = {\n        storeName: true\n      };\n    }\n\n    var storeName = options !== undefined ? options.storeName : false;\n    var contentOnly = options !== undefined ? options.contentOnly : false;\n\n    if (storeName) {\n      var original = this.original.slice(start, end);\n      this.storedNames[original] = true;\n    }\n\n    var first = this.byStart[start];\n    var last = this.byEnd[end];\n\n    if (first) {\n      if (end > first.end && first.next !== this.byStart[first.end]) {\n        throw new Error('Cannot overwrite across a split point');\n      }\n\n      first.edit(content, storeName, contentOnly);\n\n      if (first !== last) {\n        var chunk = first.next;\n\n        while (chunk !== last) {\n          chunk.edit('', false);\n          chunk = chunk.next;\n        }\n\n        chunk.edit('', false);\n      }\n    } else {\n      // must be inserting at the end\n      var newChunk = new Chunk(start, end, '').edit(content, storeName); // TODO last chunk in the array may not be the last chunk, if it's moved...\n\n      last.next = newChunk;\n      newChunk.previous = last;\n    }\n\n    return this;\n  };\n\n  MagicString.prototype.prepend = function prepend(content) {\n    if (typeof content !== 'string') {\n      throw new TypeError('outro content must be a string');\n    }\n\n    this.intro = content + this.intro;\n    return this;\n  };\n\n  MagicString.prototype.prependLeft = function prependLeft(index, content) {\n    if (typeof content !== 'string') {\n      throw new TypeError('inserted content must be a string');\n    }\n\n    this._split(index);\n\n    var chunk = this.byEnd[index];\n\n    if (chunk) {\n      chunk.prependLeft(content);\n    } else {\n      this.intro = content + this.intro;\n    }\n\n    return this;\n  };\n\n  MagicString.prototype.prependRight = function prependRight(index, content) {\n    if (typeof content !== 'string') {\n      throw new TypeError('inserted content must be a string');\n    }\n\n    this._split(index);\n\n    var chunk = this.byStart[index];\n\n    if (chunk) {\n      chunk.prependRight(content);\n    } else {\n      this.outro = content + this.outro;\n    }\n\n    return this;\n  };\n\n  MagicString.prototype.remove = function remove(start, end) {\n    while (start < 0) {\n      start += this.original.length;\n    }\n\n    while (end < 0) {\n      end += this.original.length;\n    }\n\n    if (start === end) {\n      return this;\n    }\n\n    if (start < 0 || end > this.original.length) {\n      throw new Error('Character is out of bounds');\n    }\n\n    if (start > end) {\n      throw new Error('end must be greater than start');\n    }\n\n    this._split(start);\n\n    this._split(end);\n\n    var chunk = this.byStart[start];\n\n    while (chunk) {\n      chunk.intro = '';\n      chunk.outro = '';\n      chunk.edit('');\n      chunk = end > chunk.end ? this.byStart[chunk.end] : null;\n    }\n\n    return this;\n  };\n\n  MagicString.prototype.lastChar = function lastChar() {\n    if (this.outro.length) {\n      return this.outro[this.outro.length - 1];\n    }\n\n    var chunk = this.lastChunk;\n\n    do {\n      if (chunk.outro.length) {\n        return chunk.outro[chunk.outro.length - 1];\n      }\n\n      if (chunk.content.length) {\n        return chunk.content[chunk.content.length - 1];\n      }\n\n      if (chunk.intro.length) {\n        return chunk.intro[chunk.intro.length - 1];\n      }\n    } while (chunk = chunk.previous);\n\n    if (this.intro.length) {\n      return this.intro[this.intro.length - 1];\n    }\n\n    return '';\n  };\n\n  MagicString.prototype.lastLine = function lastLine() {\n    var lineIndex = this.outro.lastIndexOf(n);\n\n    if (lineIndex !== -1) {\n      return this.outro.substr(lineIndex + 1);\n    }\n\n    var lineStr = this.outro;\n    var chunk = this.lastChunk;\n\n    do {\n      if (chunk.outro.length > 0) {\n        lineIndex = chunk.outro.lastIndexOf(n);\n\n        if (lineIndex !== -1) {\n          return chunk.outro.substr(lineIndex + 1) + lineStr;\n        }\n\n        lineStr = chunk.outro + lineStr;\n      }\n\n      if (chunk.content.length > 0) {\n        lineIndex = chunk.content.lastIndexOf(n);\n\n        if (lineIndex !== -1) {\n          return chunk.content.substr(lineIndex + 1) + lineStr;\n        }\n\n        lineStr = chunk.content + lineStr;\n      }\n\n      if (chunk.intro.length > 0) {\n        lineIndex = chunk.intro.lastIndexOf(n);\n\n        if (lineIndex !== -1) {\n          return chunk.intro.substr(lineIndex + 1) + lineStr;\n        }\n\n        lineStr = chunk.intro + lineStr;\n      }\n    } while (chunk = chunk.previous);\n\n    lineIndex = this.intro.lastIndexOf(n);\n\n    if (lineIndex !== -1) {\n      return this.intro.substr(lineIndex + 1) + lineStr;\n    }\n\n    return this.intro + lineStr;\n  };\n\n  MagicString.prototype.slice = function slice(start, end) {\n    if (start === void 0) start = 0;\n    if (end === void 0) end = this.original.length;\n\n    while (start < 0) {\n      start += this.original.length;\n    }\n\n    while (end < 0) {\n      end += this.original.length;\n    }\n\n    var result = ''; // find start chunk\n\n    var chunk = this.firstChunk;\n\n    while (chunk && (chunk.start > start || chunk.end <= start)) {\n      // found end chunk before start\n      if (chunk.start < end && chunk.end >= end) {\n        return result;\n      }\n\n      chunk = chunk.next;\n    }\n\n    if (chunk && chunk.edited && chunk.start !== start) {\n      throw new Error(\"Cannot use replaced character \" + start + \" as slice start anchor.\");\n    }\n\n    var startChunk = chunk;\n\n    while (chunk) {\n      if (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\n        result += chunk.intro;\n      }\n\n      var containsEnd = chunk.start < end && chunk.end >= end;\n\n      if (containsEnd && chunk.edited && chunk.end !== end) {\n        throw new Error(\"Cannot use replaced character \" + end + \" as slice end anchor.\");\n      }\n\n      var sliceStart = startChunk === chunk ? start - chunk.start : 0;\n      var sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n      result += chunk.content.slice(sliceStart, sliceEnd);\n\n      if (chunk.outro && (!containsEnd || chunk.end === end)) {\n        result += chunk.outro;\n      }\n\n      if (containsEnd) {\n        break;\n      }\n\n      chunk = chunk.next;\n    }\n\n    return result;\n  }; // TODO deprecate this? not really very useful\n\n\n  MagicString.prototype.snip = function snip(start, end) {\n    var clone = this.clone();\n    clone.remove(0, start);\n    clone.remove(end, clone.original.length);\n    return clone;\n  };\n\n  MagicString.prototype._split = function _split(index) {\n    if (this.byStart[index] || this.byEnd[index]) {\n      return;\n    }\n\n    var chunk = this.lastSearchedChunk;\n    var searchForward = index > chunk.end;\n\n    while (chunk) {\n      if (chunk.contains(index)) {\n        return this._splitChunk(chunk, index);\n      }\n\n      chunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\n    }\n  };\n\n  MagicString.prototype._splitChunk = function _splitChunk(chunk, index) {\n    if (chunk.edited && chunk.content.length) {\n      // zero-length edited chunks are a special case (overlapping replacements)\n      var loc = getLocator(this.original)(index);\n      throw new Error(\"Cannot split a chunk that has already been edited (\" + loc.line + \":\" + loc.column + \" – \\\"\" + chunk.original + \"\\\")\");\n    }\n\n    var newChunk = chunk.split(index);\n    this.byEnd[index] = chunk;\n    this.byStart[index] = newChunk;\n    this.byEnd[newChunk.end] = newChunk;\n\n    if (chunk === this.lastChunk) {\n      this.lastChunk = newChunk;\n    }\n\n    this.lastSearchedChunk = chunk;\n    return true;\n  };\n\n  MagicString.prototype.toString = function toString() {\n    var str = this.intro;\n    var chunk = this.firstChunk;\n\n    while (chunk) {\n      str += chunk.toString();\n      chunk = chunk.next;\n    }\n\n    return str + this.outro;\n  };\n\n  MagicString.prototype.isEmpty = function isEmpty() {\n    var chunk = this.firstChunk;\n\n    do {\n      if (chunk.intro.length && chunk.intro.trim() || chunk.content.length && chunk.content.trim() || chunk.outro.length && chunk.outro.trim()) {\n        return false;\n      }\n    } while (chunk = chunk.next);\n\n    return true;\n  };\n\n  MagicString.prototype.length = function length() {\n    var chunk = this.firstChunk;\n    var length = 0;\n\n    do {\n      length += chunk.intro.length + chunk.content.length + chunk.outro.length;\n    } while (chunk = chunk.next);\n\n    return length;\n  };\n\n  MagicString.prototype.trimLines = function trimLines() {\n    return this.trim('[\\\\r\\\\n]');\n  };\n\n  MagicString.prototype.trim = function trim(charType) {\n    return this.trimStart(charType).trimEnd(charType);\n  };\n\n  MagicString.prototype.trimEndAborted = function trimEndAborted(charType) {\n    var rx = new RegExp((charType || '\\\\s') + '+$');\n    this.outro = this.outro.replace(rx, '');\n\n    if (this.outro.length) {\n      return true;\n    }\n\n    var chunk = this.lastChunk;\n\n    do {\n      var end = chunk.end;\n      var aborted = chunk.trimEnd(rx); // if chunk was trimmed, we have a new lastChunk\n\n      if (chunk.end !== end) {\n        if (this.lastChunk === chunk) {\n          this.lastChunk = chunk.next;\n        }\n\n        this.byEnd[chunk.end] = chunk;\n        this.byStart[chunk.next.start] = chunk.next;\n        this.byEnd[chunk.next.end] = chunk.next;\n      }\n\n      if (aborted) {\n        return true;\n      }\n\n      chunk = chunk.previous;\n    } while (chunk);\n\n    return false;\n  };\n\n  MagicString.prototype.trimEnd = function trimEnd(charType) {\n    this.trimEndAborted(charType);\n    return this;\n  };\n\n  MagicString.prototype.trimStartAborted = function trimStartAborted(charType) {\n    var rx = new RegExp('^' + (charType || '\\\\s') + '+');\n    this.intro = this.intro.replace(rx, '');\n\n    if (this.intro.length) {\n      return true;\n    }\n\n    var chunk = this.firstChunk;\n\n    do {\n      var end = chunk.end;\n      var aborted = chunk.trimStart(rx);\n\n      if (chunk.end !== end) {\n        // special case...\n        if (chunk === this.lastChunk) {\n          this.lastChunk = chunk.next;\n        }\n\n        this.byEnd[chunk.end] = chunk;\n        this.byStart[chunk.next.start] = chunk.next;\n        this.byEnd[chunk.next.end] = chunk.next;\n      }\n\n      if (aborted) {\n        return true;\n      }\n\n      chunk = chunk.next;\n    } while (chunk);\n\n    return false;\n  };\n\n  MagicString.prototype.trimStart = function trimStart(charType) {\n    this.trimStartAborted(charType);\n    return this;\n  }; // used for debugging, without the noise created by\n  // circular references\n\n\n  function toJSON(node) {\n    var obj = {};\n    Object.keys(node).forEach(function (key) {\n      if (key === 'parent' || key === 'program' || key === 'keys' || key === '__wrapped') {\n        return;\n      }\n\n      if (Array.isArray(node[key])) {\n        obj[key] = node[key].map(toJSON);\n      } else if (node[key] && node[key].toJSON) {\n        obj[key] = node[key].toJSON();\n      } else {\n        obj[key] = node[key];\n      }\n    });\n    return obj;\n  }\n\n  var Node$1 = function Node() {};\n\n  Node$1.prototype.ancestor = function ancestor(level) {\n    var node = this;\n\n    while (level--) {\n      node = node.parent;\n\n      if (!node) {\n        return null;\n      }\n    }\n\n    return node;\n  };\n\n  Node$1.prototype.contains = function contains(node) {\n    while (node) {\n      if (node === this) {\n        return true;\n      }\n\n      node = node.parent;\n    }\n\n    return false;\n  };\n\n  Node$1.prototype.findLexicalBoundary = function findLexicalBoundary() {\n    return this.parent.findLexicalBoundary();\n  };\n\n  Node$1.prototype.findNearest = function findNearest(type) {\n    if (typeof type === 'string') {\n      type = new RegExp(\"^\" + type + \"$\");\n    }\n\n    if (type.test(this.type)) {\n      return this;\n    }\n\n    return this.parent.findNearest(type);\n  };\n\n  Node$1.prototype.unparenthesizedParent = function unparenthesizedParent() {\n    var node = this.parent;\n\n    while (node && node.type === 'ParenthesizedExpression') {\n      node = node.parent;\n    }\n\n    return node;\n  };\n\n  Node$1.prototype.unparenthesize = function unparenthesize() {\n    var node = this;\n\n    while (node.type === 'ParenthesizedExpression') {\n      node = node.expression;\n    }\n\n    return node;\n  };\n\n  Node$1.prototype.findScope = function findScope(functionScope) {\n    return this.parent.findScope(functionScope);\n  };\n\n  Node$1.prototype.getIndentation = function getIndentation() {\n    return this.parent.getIndentation();\n  };\n\n  Node$1.prototype.initialise = function initialise(transforms) {\n    for (var i = 0, list = this.keys; i < list.length; i += 1) {\n      var key = list[i];\n      var value = this[key];\n\n      if (Array.isArray(value)) {\n        value.forEach(function (node) {\n          return node && node.initialise(transforms);\n        });\n      } else if (value && typeof value === 'object') {\n        value.initialise(transforms);\n      }\n    }\n  };\n\n  Node$1.prototype.toJSON = function toJSON$1() {\n    return toJSON(this);\n  };\n\n  Node$1.prototype.toString = function toString() {\n    return this.program.magicString.original.slice(this.start, this.end);\n  };\n\n  Node$1.prototype.transpile = function transpile(code, transforms) {\n    for (var i = 0, list = this.keys; i < list.length; i += 1) {\n      var key = list[i];\n      var value = this[key];\n\n      if (Array.isArray(value)) {\n        value.forEach(function (node) {\n          return node && node.transpile(code, transforms);\n        });\n      } else if (value && typeof value === 'object') {\n        value.transpile(code, transforms);\n      }\n    }\n  };\n\n  function extractNames(node) {\n    var names = [];\n    extractors[node.type](names, node);\n    return names;\n  }\n\n  var extractors = {\n    Identifier: function Identifier(names, node) {\n      names.push(node);\n    },\n    ObjectPattern: function ObjectPattern(names, node) {\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n        extractors[prop.type](names, prop);\n      }\n    },\n    Property: function Property(names, node) {\n      extractors[node.value.type](names, node.value);\n    },\n    ArrayPattern: function ArrayPattern(names, node) {\n      for (var i = 0, list = node.elements; i < list.length; i += 1) {\n        var element = list[i];\n\n        if (element) {\n          extractors[element.type](names, element);\n        }\n      }\n    },\n    RestElement: function RestElement(names, node) {\n      extractors[node.argument.type](names, node.argument);\n    },\n    AssignmentPattern: function AssignmentPattern(names, node) {\n      extractors[node.left.type](names, node.left);\n    }\n  };\n  var reserved = Object.create(null);\n  'do if in for let new try var case else enum eval null this true void with await break catch class const false super throw while yield delete export import public return static switch typeof default extends finally package private continue debugger function arguments interface protected implements instanceof'.split(' ').forEach(function (word) {\n    return reserved[word] = true;\n  });\n\n  function Scope$1(options) {\n    options = options || {};\n    this.parent = options.parent;\n    this.isBlockScope = !!options.block;\n    this.createDeclarationCallback = options.declare;\n    var scope = this;\n\n    while (scope.isBlockScope) {\n      scope = scope.parent;\n    }\n\n    this.functionScope = scope;\n    this.identifiers = [];\n    this.declarations = Object.create(null);\n    this.references = Object.create(null);\n    this.blockScopedDeclarations = this.isBlockScope ? null : Object.create(null);\n    this.aliases = Object.create(null);\n  }\n\n  Scope$1.prototype = {\n    addDeclaration: function addDeclaration(node, kind) {\n      for (var i = 0, list = extractNames(node); i < list.length; i += 1) {\n        var identifier = list[i];\n        var name = identifier.name;\n        var declaration = {\n          name: name,\n          node: identifier,\n          kind: kind,\n          instances: []\n        };\n        this.declarations[name] = declaration;\n\n        if (this.isBlockScope) {\n          if (!this.functionScope.blockScopedDeclarations[name]) {\n            this.functionScope.blockScopedDeclarations[name] = [];\n          }\n\n          this.functionScope.blockScopedDeclarations[name].push(declaration);\n        }\n      }\n    },\n    addReference: function addReference(identifier) {\n      if (this.consolidated) {\n        this.consolidateReference(identifier);\n      } else {\n        this.identifiers.push(identifier);\n      }\n    },\n    consolidate: function consolidate() {\n      for (var i = 0; i < this.identifiers.length; i += 1) {\n        // we might push to the array during consolidation, so don't cache length\n        var identifier = this.identifiers[i];\n        this.consolidateReference(identifier);\n      }\n\n      this.consolidated = true; // TODO understand why this is necessary... seems bad\n    },\n    consolidateReference: function consolidateReference(identifier) {\n      var declaration = this.declarations[identifier.name];\n\n      if (declaration) {\n        declaration.instances.push(identifier);\n      } else {\n        this.references[identifier.name] = true;\n\n        if (this.parent) {\n          this.parent.addReference(identifier);\n        }\n      }\n    },\n    contains: function contains(name) {\n      return this.declarations[name] || (this.parent ? this.parent.contains(name) : false);\n    },\n    createIdentifier: function createIdentifier(base) {\n      if (typeof base === 'number') {\n        base = base.toString();\n      }\n\n      base = base.replace(/\\s/g, '').replace(/\\[([^\\]]+)\\]/g, '_$1').replace(/[^a-zA-Z0-9_$]/g, '_').replace(/_{2,}/, '_');\n      var name = base;\n      var counter = 1;\n\n      while (this.declarations[name] || this.references[name] || this.aliases[name] || name in reserved) {\n        name = base + \"$\" + counter++;\n      }\n\n      this.aliases[name] = true;\n      return name;\n    },\n    createDeclaration: function createDeclaration(base) {\n      var id = this.createIdentifier(base);\n      this.createDeclarationCallback(id);\n      return id;\n    },\n    findDeclaration: function findDeclaration(name) {\n      return this.declarations[name] || this.parent && this.parent.findDeclaration(name);\n    },\n    // Sometimes, block scope declarations change name during transpilation\n    resolveName: function resolveName(name) {\n      var declaration = this.findDeclaration(name);\n      return declaration ? declaration.name : name;\n    }\n  };\n\n  function locate(source, index) {\n    var lines = source.split('\\n');\n    var len = lines.length;\n    var lineStart = 0;\n    var i;\n\n    for (i = 0; i < len; i += 1) {\n      var line = lines[i];\n      var lineEnd = lineStart + line.length + 1; // +1 for newline\n\n      if (lineEnd > index) {\n        return {\n          line: i + 1,\n          column: index - lineStart,\n          \"char\": i\n        };\n      }\n\n      lineStart = lineEnd;\n    }\n\n    throw new Error('Could not determine location of character');\n  }\n\n  function pad(num, len) {\n    var result = String(num);\n    return result + repeat(' ', len - result.length);\n  }\n\n  function repeat(str, times) {\n    var result = '';\n\n    while (times--) {\n      result += str;\n    }\n\n    return result;\n  }\n\n  function getSnippet(source, loc, length) {\n    if (length === void 0) length = 1;\n    var first = Math.max(loc.line - 5, 0);\n    var last = loc.line;\n    var numDigits = String(last).length;\n    var lines = source.split('\\n').slice(first, last);\n    var lastLine = lines[lines.length - 1];\n    var offset = lastLine.slice(0, loc.column).replace(/\\t/g, '  ').length;\n    var snippet = lines.map(function (line, i) {\n      return pad(i + first + 1, numDigits) + \" : \" + line.replace(/\\t/g, '  ');\n    }).join('\\n');\n    snippet += '\\n' + repeat(' ', numDigits + 3 + offset) + repeat('^', length);\n    return snippet;\n  }\n\n  var CompileError =\n  /*@__PURE__*/\n  function (Error) {\n    function CompileError(message, node) {\n      Error.call(this, message);\n      this.name = 'CompileError';\n\n      if (!node) {\n        return;\n      }\n\n      var source = node.program.magicString.original;\n      var loc = locate(source, node.start);\n      this.message = message + \" (\" + loc.line + \":\" + loc.column + \")\";\n      this.stack = new Error().stack.replace(new RegExp(\".+new \" + this.name + \".+\\\\n\", 'm'), '');\n      this.loc = loc;\n      this.snippet = getSnippet(source, loc, node.end - node.start);\n    }\n\n    if (Error) CompileError.__proto__ = Error;\n    CompileError.prototype = Object.create(Error && Error.prototype);\n    CompileError.prototype.constructor = CompileError;\n\n    CompileError.prototype.toString = function toString() {\n      return this.name + \": \" + this.message + \"\\n\" + this.snippet;\n    };\n\n    CompileError.missingTransform = function missingTransform(feature, transformKey, node, dangerousKey) {\n      if (dangerousKey === void 0) dangerousKey = null;\n      var maybeDangerous = dangerousKey ? \", or `transforms: { \" + dangerousKey + \": true }` if you know what you're doing\" : '';\n      throw new CompileError(\"Transforming \" + feature + \" is not \" + (dangerousKey ? \"fully supported\" : \"implemented\") + \". Use `transforms: { \" + transformKey + \": false }` to skip transformation and disable this error\" + maybeDangerous + \".\", node);\n    };\n\n    return CompileError;\n  }(Error);\n\n  function findIndex(array, fn) {\n    for (var i = 0; i < array.length; i += 1) {\n      if (fn(array[i], i)) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  var handlers = {\n    Identifier: destructureIdentifier,\n    AssignmentPattern: destructureAssignmentPattern,\n    ArrayPattern: destructureArrayPattern,\n    ObjectPattern: destructureObjectPattern\n  };\n\n  function destructure(code, createIdentifier, resolveName, node, ref, inline, statementGenerators) {\n    handlers[node.type](code, createIdentifier, resolveName, node, ref, inline, statementGenerators);\n  }\n\n  function destructureIdentifier(code, createIdentifier, resolveName, node, ref, inline, statementGenerators) {\n    statementGenerators.push(function (start, prefix, suffix) {\n      code.overwrite(node.start, node.end, (inline ? prefix : prefix + \"var \") + resolveName(node) + \" = \" + ref + suffix);\n      code.move(node.start, node.end, start);\n    });\n  }\n\n  function destructureMemberExpression(code, createIdentifier, resolveName, node, ref, inline, statementGenerators) {\n    statementGenerators.push(function (start, prefix, suffix) {\n      code.prependRight(node.start, inline ? prefix : prefix + \"var \");\n      code.appendLeft(node.end, \" = \" + ref + suffix);\n      code.move(node.start, node.end, start);\n    });\n  }\n\n  function destructureAssignmentPattern(code, createIdentifier, resolveName, node, ref, inline, statementGenerators) {\n    var isIdentifier = node.left.type === 'Identifier';\n    var name = isIdentifier ? node.left.name : ref;\n\n    if (!inline) {\n      statementGenerators.push(function (start, prefix, suffix) {\n        code.prependRight(node.left.end, prefix + \"if ( \" + name + \" === void 0 ) \" + name);\n        code.move(node.left.end, node.right.end, start);\n        code.appendLeft(node.right.end, suffix);\n      });\n    }\n\n    if (!isIdentifier) {\n      destructure(code, createIdentifier, resolveName, node.left, ref, inline, statementGenerators);\n    }\n  }\n\n  function destructureArrayPattern(code, createIdentifier, resolveName, node, ref, inline, statementGenerators) {\n    var c = node.start;\n    node.elements.forEach(function (element, i) {\n      if (!element) {\n        return;\n      }\n\n      if (element.type === 'RestElement') {\n        handleProperty(code, createIdentifier, resolveName, c, element.argument, ref + \".slice(\" + i + \")\", inline, statementGenerators);\n      } else {\n        handleProperty(code, createIdentifier, resolveName, c, element, ref + \"[\" + i + \"]\", inline, statementGenerators);\n      }\n\n      c = element.end;\n    });\n    code.remove(c, node.end);\n  }\n\n  function destructureObjectPattern(code, createIdentifier, resolveName, node, ref, inline, statementGenerators) {\n    var this$1 = this;\n    var c = node.start;\n    var nonRestKeys = [];\n    node.properties.forEach(function (prop) {\n      var value;\n      var content;\n\n      if (prop.type === 'Property') {\n        content = prop.value;\n\n        if (!prop.computed && prop.key.type === 'Identifier') {\n          value = ref + \".\" + prop.key.name;\n          nonRestKeys.push(\"\\\"\" + prop.key.name + \"\\\"\");\n        } else if (!prop.computed && prop.key.type === 'Literal') {\n          value = ref + \"[\" + prop.key.raw + \"]\";\n          nonRestKeys.push(JSON.stringify(String(prop.key.value)));\n        } else {\n          var expr = code.slice(prop.key.start, prop.key.end);\n          value = ref + \"[\" + expr + \"]\";\n          nonRestKeys.push(\"String(\" + expr + \")\");\n        }\n      } else if (prop.type === 'RestElement') {\n        content = prop.argument;\n        value = createIdentifier('rest');\n        statementGenerators.push(function (start, prefix, suffix) {\n          var helper = prop.program.getObjectWithoutPropertiesHelper(code);\n          code.overwrite(prop.start, c = prop.argument.start, (inline ? prefix : prefix + \"var \") + value + \" = \" + helper + \"( \" + ref + \", [\" + nonRestKeys.join(', ') + \"] )\" + suffix);\n          code.move(prop.start, c, start);\n        });\n      } else {\n        throw new CompileError(this$1, \"Unexpected node of type \" + prop.type + \" in object pattern\");\n      }\n\n      handleProperty(code, createIdentifier, resolveName, c, content, value, inline, statementGenerators);\n      c = prop.end;\n    });\n    code.remove(c, node.end);\n  }\n\n  function handleProperty(code, createIdentifier, resolveName, c, node, value, inline, statementGenerators) {\n    switch (node.type) {\n      case 'Identifier':\n        {\n          code.remove(c, node.start);\n          destructureIdentifier(code, createIdentifier, resolveName, node, value, inline, statementGenerators);\n          break;\n        }\n\n      case 'MemberExpression':\n        code.remove(c, node.start);\n        destructureMemberExpression(code, createIdentifier, resolveName, node, value, true, statementGenerators);\n        break;\n\n      case 'AssignmentPattern':\n        {\n          var name;\n          var isIdentifier = node.left.type === 'Identifier';\n\n          if (isIdentifier) {\n            name = resolveName(node.left);\n          } else {\n            name = createIdentifier(value);\n          }\n\n          statementGenerators.push(function (start, prefix, suffix) {\n            if (inline) {\n              code.prependRight(node.right.start, name + \" = \" + value + \", \" + name + \" = \" + name + \" === void 0 ? \");\n              code.appendLeft(node.right.end, \" : \" + name + suffix);\n            } else {\n              code.prependRight(node.right.start, prefix + \"var \" + name + \" = \" + value + \"; if ( \" + name + \" === void 0 ) \" + name + \" = \");\n              code.appendLeft(node.right.end, suffix);\n            }\n\n            code.move(node.right.start, node.right.end, start);\n          });\n\n          if (isIdentifier) {\n            code.remove(c, node.right.start);\n          } else {\n            code.remove(c, node.left.start);\n            code.remove(node.left.end, node.right.start);\n            handleProperty(code, createIdentifier, resolveName, c, node.left, name, inline, statementGenerators);\n          }\n\n          break;\n        }\n\n      case 'ObjectPattern':\n        {\n          code.remove(c, c = node.start);\n          var ref = value;\n\n          if (node.properties.length > 1) {\n            ref = createIdentifier(value);\n            statementGenerators.push(function (start, prefix, suffix) {\n              // this feels a tiny bit hacky, but we can't do a\n              // straightforward appendLeft and keep correct order...\n              code.prependRight(node.start, (inline ? '' : prefix + \"var \") + ref + \" = \");\n              code.overwrite(node.start, c = node.start + 1, value);\n              code.appendLeft(c, suffix);\n              code.overwrite(node.start, c = node.start + 1, (inline ? '' : prefix + \"var \") + ref + \" = \" + value + suffix);\n              code.move(node.start, c, start);\n            });\n          }\n\n          destructureObjectPattern(code, createIdentifier, resolveName, node, ref, inline, statementGenerators);\n          break;\n        }\n\n      case 'ArrayPattern':\n        {\n          code.remove(c, c = node.start);\n\n          if (node.elements.filter(Boolean).length > 1) {\n            var ref$1 = createIdentifier(value);\n            statementGenerators.push(function (start, prefix, suffix) {\n              code.prependRight(node.start, (inline ? '' : prefix + \"var \") + ref$1 + \" = \");\n              code.overwrite(node.start, c = node.start + 1, value, {\n                contentOnly: true\n              });\n              code.appendLeft(c, suffix);\n              code.move(node.start, c, start);\n            });\n            node.elements.forEach(function (element, i) {\n              if (!element) {\n                return;\n              }\n\n              if (element.type === 'RestElement') {\n                handleProperty(code, createIdentifier, resolveName, c, element.argument, ref$1 + \".slice(\" + i + \")\", inline, statementGenerators);\n              } else {\n                handleProperty(code, createIdentifier, resolveName, c, element, ref$1 + \"[\" + i + \"]\", inline, statementGenerators);\n              }\n\n              c = element.end;\n            });\n          } else {\n            var index = findIndex(node.elements, Boolean);\n            var element = node.elements[index];\n\n            if (element.type === 'RestElement') {\n              handleProperty(code, createIdentifier, resolveName, c, element.argument, value + \".slice(\" + index + \")\", inline, statementGenerators);\n            } else {\n              handleProperty(code, createIdentifier, resolveName, c, element, value + \"[\" + index + \"]\", inline, statementGenerators);\n            }\n\n            c = element.end;\n          }\n\n          code.remove(c, node.end);\n          break;\n        }\n\n      default:\n        {\n          throw new Error(\"Unexpected node type in destructuring (\" + node.type + \")\");\n        }\n    }\n  }\n\n  function isUseStrict(node) {\n    if (!node) {\n      return false;\n    }\n\n    if (node.type !== 'ExpressionStatement') {\n      return false;\n    }\n\n    if (node.expression.type !== 'Literal') {\n      return false;\n    }\n\n    return node.expression.value === 'use strict';\n  }\n\n  var BlockStatement =\n  /*@__PURE__*/\n  function (Node) {\n    function BlockStatement() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) BlockStatement.__proto__ = Node;\n    BlockStatement.prototype = Object.create(Node && Node.prototype);\n    BlockStatement.prototype.constructor = BlockStatement;\n\n    BlockStatement.prototype.createScope = function createScope() {\n      var this$1 = this;\n      this.parentIsFunction = /Function/.test(this.parent.type);\n      this.isFunctionBlock = this.parentIsFunction || this.parent.type === 'Root';\n      this.scope = new Scope$1({\n        block: !this.isFunctionBlock,\n        parent: this.parent.findScope(false),\n        declare: function declare(id) {\n          return this$1.createdDeclarations.push(id);\n        }\n      });\n\n      if (this.parentIsFunction) {\n        this.parent.params.forEach(function (node) {\n          this$1.scope.addDeclaration(node, 'param');\n        });\n      }\n    };\n\n    BlockStatement.prototype.initialise = function initialise(transforms) {\n      this.thisAlias = null;\n      this.argumentsAlias = null;\n      this.defaultParameters = [];\n      this.createdDeclarations = []; // normally the scope gets created here, during initialisation,\n      // but in some cases (e.g. `for` statements), we need to create\n      // the scope early, as it pertains to both the init block and\n      // the body of the statement\n\n      if (!this.scope) {\n        this.createScope();\n      }\n\n      this.body.forEach(function (node) {\n        return node.initialise(transforms);\n      });\n      this.scope.consolidate();\n    };\n\n    BlockStatement.prototype.findLexicalBoundary = function findLexicalBoundary() {\n      if (this.type === 'Program') {\n        return this;\n      }\n\n      if (/^Function/.test(this.parent.type)) {\n        return this;\n      }\n\n      return this.parent.findLexicalBoundary();\n    };\n\n    BlockStatement.prototype.findScope = function findScope(functionScope) {\n      if (functionScope && !this.isFunctionBlock) {\n        return this.parent.findScope(functionScope);\n      }\n\n      return this.scope;\n    };\n\n    BlockStatement.prototype.getArgumentsAlias = function getArgumentsAlias() {\n      if (!this.argumentsAlias) {\n        this.argumentsAlias = this.scope.createIdentifier('arguments');\n      }\n\n      return this.argumentsAlias;\n    };\n\n    BlockStatement.prototype.getArgumentsArrayAlias = function getArgumentsArrayAlias() {\n      if (!this.argumentsArrayAlias) {\n        this.argumentsArrayAlias = this.scope.createIdentifier('argsArray');\n      }\n\n      return this.argumentsArrayAlias;\n    };\n\n    BlockStatement.prototype.getThisAlias = function getThisAlias() {\n      if (!this.thisAlias) {\n        this.thisAlias = this.scope.createIdentifier('this');\n      }\n\n      return this.thisAlias;\n    };\n\n    BlockStatement.prototype.getIndentation = function getIndentation() {\n      if (this.indentation === undefined) {\n        var source = this.program.magicString.original;\n        var useOuter = this.synthetic || !this.body.length;\n        var c = useOuter ? this.start : this.body[0].start;\n\n        while (c && source[c] !== '\\n') {\n          c -= 1;\n        }\n\n        this.indentation = ''; // eslint-disable-next-line no-constant-condition\n\n        while (true) {\n          c += 1;\n          var _char4 = source[c];\n\n          if (_char4 !== ' ' && _char4 !== '\\t') {\n            break;\n          }\n\n          this.indentation += _char4;\n        }\n\n        var indentString = this.program.magicString.getIndentString(); // account for dedented class constructors\n\n        var parent = this.parent;\n\n        while (parent) {\n          if (parent.kind === 'constructor' && !parent.parent.parent.superClass) {\n            this.indentation = this.indentation.replace(indentString, '');\n          }\n\n          parent = parent.parent;\n        }\n\n        if (useOuter) {\n          this.indentation += indentString;\n        }\n      }\n\n      return this.indentation;\n    };\n\n    BlockStatement.prototype.transpile = function transpile(code, transforms) {\n      var this$1 = this;\n      var indentation = this.getIndentation();\n      var introStatementGenerators = [];\n\n      if (this.argumentsAlias) {\n        introStatementGenerators.push(function (start, prefix, suffix) {\n          var assignment = prefix + \"var \" + this$1.argumentsAlias + \" = arguments\" + suffix;\n          code.appendLeft(start, assignment);\n        });\n      }\n\n      if (this.thisAlias) {\n        introStatementGenerators.push(function (start, prefix, suffix) {\n          var assignment = prefix + \"var \" + this$1.thisAlias + \" = this\" + suffix;\n          code.appendLeft(start, assignment);\n        });\n      }\n\n      if (this.argumentsArrayAlias) {\n        introStatementGenerators.push(function (start, prefix, suffix) {\n          var i = this$1.scope.createIdentifier('i');\n          var assignment = prefix + \"var \" + i + \" = arguments.length, \" + this$1.argumentsArrayAlias + \" = Array(\" + i + \");\\n\" + indentation + \"while ( \" + i + \"-- ) \" + this$1.argumentsArrayAlias + \"[\" + i + \"] = arguments[\" + i + \"]\" + suffix;\n          code.appendLeft(start, assignment);\n        });\n      }\n\n      if (/Function/.test(this.parent.type)) {\n        this.transpileParameters(this.parent.params, code, transforms, indentation, introStatementGenerators);\n      } else if ('CatchClause' === this.parent.type) {\n        this.transpileParameters([this.parent.param], code, transforms, indentation, introStatementGenerators);\n      }\n\n      if (transforms.letConst && this.isFunctionBlock) {\n        this.transpileBlockScopedIdentifiers(code);\n      }\n\n      Node.prototype.transpile.call(this, code, transforms);\n\n      if (this.createdDeclarations.length) {\n        introStatementGenerators.push(function (start, prefix, suffix) {\n          var assignment = prefix + \"var \" + this$1.createdDeclarations.join(', ') + suffix;\n          code.appendLeft(start, assignment);\n        });\n      }\n\n      if (this.synthetic) {\n        if (this.parent.type === 'ArrowFunctionExpression') {\n          var expr = this.body[0];\n\n          if (introStatementGenerators.length) {\n            code.appendLeft(this.start, \"{\").prependRight(this.end, this.parent.getIndentation() + \"}\");\n            code.prependRight(expr.start, \"\\n\" + indentation + \"return \");\n            code.appendLeft(expr.end, \";\\n\");\n          } else if (transforms.arrow) {\n            code.prependRight(expr.start, \"{ return \");\n            code.appendLeft(expr.end, \"; }\");\n          }\n        } else if (introStatementGenerators.length) {\n          code.prependRight(this.start, \"{\").appendLeft(this.end, \"}\");\n        }\n      }\n\n      var start;\n\n      if (isUseStrict(this.body[0])) {\n        start = this.body[0].end;\n      } else if (this.synthetic || this.parent.type === 'Root') {\n        start = this.start;\n      } else {\n        start = this.start + 1;\n      }\n\n      var prefix = \"\\n\" + indentation;\n      var suffix = ';';\n      introStatementGenerators.forEach(function (fn, i) {\n        if (i === introStatementGenerators.length - 1) {\n          suffix = \";\\n\";\n        }\n\n        fn(start, prefix, suffix);\n      });\n    };\n\n    BlockStatement.prototype.transpileParameters = function transpileParameters(params, code, transforms, indentation, introStatementGenerators) {\n      var this$1 = this;\n      params.forEach(function (param) {\n        if (param.type === 'AssignmentPattern' && param.left.type === 'Identifier') {\n          if (transforms.defaultParameter) {\n            introStatementGenerators.push(function (start, prefix, suffix) {\n              var lhs = prefix + \"if ( \" + param.left.name + \" === void 0 ) \" + param.left.name;\n              code.prependRight(param.left.end, lhs).move(param.left.end, param.right.end, start).appendLeft(param.right.end, suffix);\n            });\n          }\n        } else if (param.type === 'RestElement') {\n          if (transforms.spreadRest) {\n            introStatementGenerators.push(function (start, prefix, suffix) {\n              var penultimateParam = params[params.length - 2];\n\n              if (penultimateParam) {\n                code.remove(penultimateParam ? penultimateParam.end : param.start, param.end);\n              } else {\n                var start$1 = param.start,\n                    end = param.end; // TODO https://gitlab.com/Rich-Harris/buble/issues/8\n\n                while (/\\s/.test(code.original[start$1 - 1])) {\n                  start$1 -= 1;\n                }\n\n                while (/\\s/.test(code.original[end])) {\n                  end += 1;\n                }\n\n                code.remove(start$1, end);\n              }\n\n              var name = param.argument.name;\n              var len = this$1.scope.createIdentifier('len');\n              var count = params.length - 1;\n\n              if (count) {\n                code.prependRight(start, prefix + \"var \" + name + \" = [], \" + len + \" = arguments.length - \" + count + \";\\n\" + indentation + \"while ( \" + len + \"-- > 0 ) \" + name + \"[ \" + len + \" ] = arguments[ \" + len + \" + \" + count + \" ]\" + suffix);\n              } else {\n                code.prependRight(start, prefix + \"var \" + name + \" = [], \" + len + \" = arguments.length;\\n\" + indentation + \"while ( \" + len + \"-- ) \" + name + \"[ \" + len + \" ] = arguments[ \" + len + \" ]\" + suffix);\n              }\n            });\n          }\n        } else if (param.type !== 'Identifier') {\n          if (transforms.parameterDestructuring) {\n            var ref = this$1.scope.createIdentifier('ref');\n            destructure(code, function (id) {\n              return this$1.scope.createIdentifier(id);\n            }, function (ref) {\n              var name = ref.name;\n              return this$1.scope.resolveName(name);\n            }, param, ref, false, introStatementGenerators);\n            code.prependRight(param.start, ref);\n          }\n        }\n      });\n    };\n\n    BlockStatement.prototype.transpileBlockScopedIdentifiers = function transpileBlockScopedIdentifiers(code) {\n      var this$1 = this;\n      Object.keys(this.scope.blockScopedDeclarations).forEach(function (name) {\n        var declarations = this$1.scope.blockScopedDeclarations[name];\n\n        for (var i$2 = 0, list$2 = declarations; i$2 < list$2.length; i$2 += 1) {\n          var declaration = list$2[i$2];\n          var cont = false; // TODO implement proper continue...\n\n          if (declaration.kind === 'for.let') {\n            // special case\n            var forStatement = declaration.node.findNearest('ForStatement');\n\n            if (forStatement.shouldRewriteAsFunction) {\n              var outerAlias = this$1.scope.createIdentifier(name);\n              var innerAlias = forStatement.reassigned[name] ? this$1.scope.createIdentifier(name) : name;\n              declaration.name = outerAlias;\n              code.overwrite(declaration.node.start, declaration.node.end, outerAlias, {\n                storeName: true\n              });\n              forStatement.aliases[name] = {\n                outer: outerAlias,\n                inner: innerAlias\n              };\n\n              for (var i = 0, list = declaration.instances; i < list.length; i += 1) {\n                var identifier = list[i];\n                var alias = forStatement.body.contains(identifier) ? innerAlias : outerAlias;\n\n                if (name !== alias) {\n                  code.overwrite(identifier.start, identifier.end, alias, {\n                    storeName: true\n                  });\n                }\n              }\n\n              cont = true;\n            }\n          }\n\n          if (!cont) {\n            var alias$1 = this$1.scope.createIdentifier(name);\n\n            if (name !== alias$1) {\n              declaration.name = alias$1;\n              code.overwrite(declaration.node.start, declaration.node.end, alias$1, {\n                storeName: true\n              });\n\n              for (var i$1 = 0, list$1 = declaration.instances; i$1 < list$1.length; i$1 += 1) {\n                var identifier$1 = list$1[i$1];\n                identifier$1.rewritten = true;\n                code.overwrite(identifier$1.start, identifier$1.end, alias$1, {\n                  storeName: true\n                });\n              }\n            }\n          }\n        }\n      });\n    };\n\n    return BlockStatement;\n  }(Node$1);\n\n  function isArguments(node) {\n    return node.type === 'Identifier' && node.name === 'arguments';\n  }\n\n  function inlineSpreads(code, node, elements) {\n    var i = elements.length;\n\n    while (i--) {\n      var element = elements[i];\n\n      if (!element || element.type !== 'SpreadElement') {\n        continue;\n      }\n\n      var argument = element.argument;\n\n      if (argument.type !== 'ArrayExpression') {\n        continue;\n      }\n\n      var subelements = argument.elements;\n\n      if (subelements.some(function (subelement) {\n        return subelement === null;\n      })) {\n        // Not even going to try inlining spread arrays with holes.\n        // It's a lot of work (got to be VERY careful in comma counting for\n        // ArrayExpression, and turn blanks into undefined for\n        // CallExpression and NewExpression), and probably literally no one\n        // would ever benefit from it.\n        continue;\n      } // We can inline it: drop the `...[` and `]` and sort out any commas.\n\n\n      var isLast = i === elements.length - 1;\n\n      if (subelements.length === 0) {\n        code.remove(isLast && i !== 0 ? elements[i - 1].end // Take the previous comma too\n        : element.start, isLast ? node.end - 1 // Must remove trailing comma; element.end wouldn’t\n        : elements[i + 1].start);\n      } else {\n        // Strip the `...[` and the `]` with a possible trailing comma before it,\n        // leaving just the possible trailing comma after it.\n        code.remove(element.start, subelements[0].start);\n        code.remove( // Strip a possible trailing comma after the last element\n        subelements[subelements.length - 1].end, // And also a possible trailing comma after the spread\n        isLast ? node.end - 1 : element.end);\n      }\n\n      elements.splice.apply(elements, [i, 1].concat(subelements));\n      i += subelements.length;\n    }\n  } // Returns false if it’s safe to simply append a method call to the node,\n  // e.g. `a` → `a.concat()`.\n  //\n  // Returns true if it may not be and so parentheses should be employed,\n  // e.g. `a ? b : c` → `a ? b : c.concat()` would be wrong.\n  //\n  // This test may be overcautious; if desired it can be refined over time.\n\n\n  function needsParentheses(node) {\n    switch (node.type) {\n      // Currently whitelisted are all relevant ES5 node types ('Literal' and\n      // 'ObjectExpression' are skipped as irrelevant for array/call spread.)\n      case 'ArrayExpression':\n      case 'CallExpression':\n      case 'Identifier':\n      case 'ParenthesizedExpression':\n      case 'ThisExpression':\n        return false;\n\n      default:\n        return true;\n    }\n  }\n\n  function spread(code, elements, start, argumentsArrayAlias, isNew) {\n    var i = elements.length;\n    var firstSpreadIndex = -1;\n\n    while (i--) {\n      var element$1 = elements[i];\n\n      if (element$1 && element$1.type === 'SpreadElement') {\n        if (isArguments(element$1.argument)) {\n          code.overwrite(element$1.argument.start, element$1.argument.end, argumentsArrayAlias);\n        }\n\n        firstSpreadIndex = i;\n      }\n    }\n\n    if (firstSpreadIndex === -1) {\n      return false;\n    } // false indicates no spread elements\n\n\n    if (isNew) {\n      for (i = 0; i < elements.length; i += 1) {\n        var element$2 = elements[i];\n\n        if (element$2.type === 'SpreadElement') {\n          code.remove(element$2.start, element$2.argument.start);\n        } else {\n          code.prependRight(element$2.start, '[');\n          code.prependRight(element$2.end, ']');\n        }\n      }\n\n      return true; // true indicates some spread elements\n    }\n\n    var element = elements[firstSpreadIndex];\n    var previousElement = elements[firstSpreadIndex - 1];\n\n    if (!previousElement) {\n      // We may need to parenthesize it to handle ternaries like [...a ? b : c].\n      var addClosingParen;\n\n      if (start !== element.start) {\n        if (addClosingParen = needsParentheses(element.argument)) {\n          code.overwrite(start, element.start, '( ');\n        } else {\n          code.remove(start, element.start);\n        }\n      } else if (element.parent.type === 'CallExpression') {\n        // CallExpression inserts `( ` itself, we add the ).\n        // (Yeah, CallExpression did the needsParentheses call already,\n        // but we don’t have its result handy, so do it again. It’s cheap.)\n        addClosingParen = needsParentheses(element.argument);\n      } else {\n        // Should be unreachable, but doing this is more robust.\n        throw new CompileError('Unsupported spread construct, please raise an issue at https://github.com/bublejs/buble/issues', element);\n      }\n\n      code.overwrite(element.end, elements[1].start, addClosingParen ? ' ).concat( ' : '.concat( ');\n    } else {\n      code.overwrite(previousElement.end, element.start, ' ].concat( ');\n    }\n\n    for (i = firstSpreadIndex; i < elements.length; i += 1) {\n      element = elements[i];\n\n      if (element) {\n        if (element.type === 'SpreadElement') {\n          code.remove(element.start, element.argument.start);\n        } else {\n          code.appendLeft(element.start, '[');\n          code.appendLeft(element.end, ']');\n        }\n      }\n    }\n\n    return true; // true indicates some spread elements\n  }\n\n  var ArrayExpression =\n  /*@__PURE__*/\n  function (Node) {\n    function ArrayExpression() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) ArrayExpression.__proto__ = Node;\n    ArrayExpression.prototype = Object.create(Node && Node.prototype);\n    ArrayExpression.prototype.constructor = ArrayExpression;\n\n    ArrayExpression.prototype.initialise = function initialise(transforms) {\n      if (transforms.spreadRest && this.elements.length) {\n        var lexicalBoundary = this.findLexicalBoundary();\n        var i = this.elements.length;\n\n        while (i--) {\n          var element = this.elements[i];\n\n          if (element && element.type === 'SpreadElement' && isArguments(element.argument)) {\n            this.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();\n          }\n        }\n      }\n\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    ArrayExpression.prototype.transpile = function transpile(code, transforms) {\n      Node.prototype.transpile.call(this, code, transforms);\n\n      if (transforms.spreadRest) {\n        inlineSpreads(code, this, this.elements); // erase trailing comma after last array element if not an array hole\n\n        if (this.elements.length) {\n          var lastElement = this.elements[this.elements.length - 1];\n\n          if (lastElement && /\\s*,/.test(code.original.slice(lastElement.end, this.end))) {\n            code.overwrite(lastElement.end, this.end - 1, ' ');\n          }\n        }\n\n        if (this.elements.length === 1) {\n          var element = this.elements[0];\n\n          if (element && element.type === 'SpreadElement') {\n            // special case – [ ...arguments ]\n            if (isArguments(element.argument)) {\n              code.overwrite(this.start, this.end, \"[].concat( \" + this.argumentsArrayAlias + \" )\"); // TODO if this is the only use of argsArray, don't bother concating\n            } else {\n              code.overwrite(this.start, element.argument.start, '[].concat( ');\n              code.overwrite(element.end, this.end, ' )');\n            }\n          }\n        } else {\n          var hasSpreadElements = spread(code, this.elements, this.start, this.argumentsArrayAlias);\n\n          if (hasSpreadElements) {\n            code.overwrite(this.end - 1, this.end, ')');\n          }\n        }\n      }\n    };\n\n    return ArrayExpression;\n  }(Node$1);\n\n  function removeTrailingComma(code, c) {\n    while (code.original[c] !== ')') {\n      if (code.original[c] === ',') {\n        code.remove(c, c + 1);\n        return;\n      }\n\n      if (code.original[c] === '/') {\n        if (code.original[c + 1] === '/') {\n          c = code.original.indexOf('\\n', c);\n        } else {\n          c = code.original.indexOf('*/', c) + 1;\n        }\n      }\n\n      c += 1;\n    }\n  }\n\n  var ArrowFunctionExpression =\n  /*@__PURE__*/\n  function (Node) {\n    function ArrowFunctionExpression() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) ArrowFunctionExpression.__proto__ = Node;\n    ArrowFunctionExpression.prototype = Object.create(Node && Node.prototype);\n    ArrowFunctionExpression.prototype.constructor = ArrowFunctionExpression;\n\n    ArrowFunctionExpression.prototype.initialise = function initialise(transforms) {\n      if (this.async && transforms.asyncAwait) {\n        CompileError.missingTransform(\"async arrow functions\", \"asyncAwait\", this);\n      }\n\n      this.body.createScope();\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    ArrowFunctionExpression.prototype.transpile = function transpile(code, transforms) {\n      var openParensPos = this.start;\n\n      for (var end = (this.body || this.params[0]).start - 1; code.original[openParensPos] !== '(' && openParensPos < end;) {\n        ++openParensPos;\n      }\n\n      if (code.original[openParensPos] !== '(') {\n        openParensPos = -1;\n      }\n\n      var naked = openParensPos === -1;\n\n      if (transforms.arrow || this.needsArguments(transforms)) {\n        // remove arrow\n        var charIndex = this.body.start;\n\n        while (code.original[charIndex] !== '=') {\n          charIndex -= 1;\n        }\n\n        code.remove(charIndex, this.body.start);\n        Node.prototype.transpile.call(this, code, transforms); // wrap naked parameter\n\n        if (naked) {\n          code.prependRight(this.params[0].start, '(');\n          code.appendLeft(this.params[0].end, ')');\n        } // standalone expression statement\n\n\n        var standalone = this.parent && this.parent.type === 'ExpressionStatement';\n        var start,\n            text = standalone ? '!' : '';\n\n        if (this.async) {\n          text += 'async ';\n        }\n\n        text += 'function';\n\n        if (!standalone) {\n          text += ' ';\n        }\n\n        if (naked) {\n          start = this.params[0].start;\n        } else {\n          start = openParensPos;\n        } // add function\n\n\n        if (start > this.start) {\n          code.overwrite(this.start, start, text);\n        } else {\n          code.prependRight(this.start, text);\n        }\n      } else {\n        Node.prototype.transpile.call(this, code, transforms);\n      }\n\n      if (transforms.trailingFunctionCommas && this.params.length && !naked) {\n        removeTrailingComma(code, this.params[this.params.length - 1].end);\n      }\n    }; // Returns whether any transforms that will happen use `arguments`\n\n\n    ArrowFunctionExpression.prototype.needsArguments = function needsArguments(transforms) {\n      return transforms.spreadRest && this.params.filter(function (param) {\n        return param.type === 'RestElement';\n      }).length > 0;\n    };\n\n    return ArrowFunctionExpression;\n  }(Node$1);\n\n  function checkConst(identifier, scope) {\n    var declaration = scope.findDeclaration(identifier.name);\n\n    if (declaration && declaration.kind === 'const') {\n      throw new CompileError(identifier.name + \" is read-only\", identifier);\n    }\n  }\n\n  var AssignmentExpression =\n  /*@__PURE__*/\n  function (Node) {\n    function AssignmentExpression() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) AssignmentExpression.__proto__ = Node;\n    AssignmentExpression.prototype = Object.create(Node && Node.prototype);\n    AssignmentExpression.prototype.constructor = AssignmentExpression;\n\n    AssignmentExpression.prototype.initialise = function initialise(transforms) {\n      if (this.left.type === 'Identifier') {\n        var declaration = this.findScope(false).findDeclaration(this.left.name); // special case – https://gitlab.com/Rich-Harris/buble/issues/11\n\n        var statement = declaration && declaration.node.ancestor(3);\n\n        if (statement && statement.type === 'ForStatement' && statement.body.contains(this)) {\n          statement.reassigned[this.left.name] = true;\n        }\n      }\n\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    AssignmentExpression.prototype.transpile = function transpile(code, transforms) {\n      if (this.left.type === 'Identifier') {\n        // Do this check after everything has been initialized to find\n        // shadowing declarations after this expression\n        checkConst(this.left, this.findScope(false));\n      }\n\n      if (this.operator === '**=' && transforms.exponentiation) {\n        this.transpileExponentiation(code, transforms);\n      } else if (/Pattern/.test(this.left.type) && transforms.destructuring) {\n        this.transpileDestructuring(code);\n      }\n\n      Node.prototype.transpile.call(this, code, transforms);\n    };\n\n    AssignmentExpression.prototype.transpileDestructuring = function transpileDestructuring(code) {\n      var this$1 = this;\n      var writeScope = this.findScope(true);\n      var lookupScope = this.findScope(false);\n      var assign = writeScope.createDeclaration('assign');\n      code.appendRight(this.left.end, \"(\" + assign);\n      code.appendLeft(this.right.end, ', ');\n      var statementGenerators = [];\n      destructure(code, function (id) {\n        return writeScope.createDeclaration(id);\n      }, function (node) {\n        var name = lookupScope.resolveName(node.name);\n        checkConst(node, lookupScope);\n        return name;\n      }, this.left, assign, true, statementGenerators);\n      var suffix = ', ';\n      statementGenerators.forEach(function (fn, j) {\n        if (j === statementGenerators.length - 1) {\n          suffix = '';\n        }\n\n        fn(this$1.end, '', suffix);\n      });\n\n      if (this.unparenthesizedParent().type === 'ExpressionStatement') {\n        // no rvalue needed for expression statement\n        code.prependRight(this.end, \")\");\n      } else {\n        // destructuring is part of an expression - need an rvalue\n        code.appendRight(this.end, \", \" + assign + \")\");\n      }\n    };\n\n    AssignmentExpression.prototype.transpileExponentiation = function transpileExponentiation(code) {\n      var scope = this.findScope(false); // first, the easy part – `**=` -> `=`\n\n      var charIndex = this.left.end;\n\n      while (code.original[charIndex] !== '*') {\n        charIndex += 1;\n      }\n\n      code.remove(charIndex, charIndex + 2); // how we do the next part depends on a number of factors – whether\n      // this is a top-level statement, and whether we're updating a\n      // simple or complex reference\n\n      var base;\n      var left = this.left.unparenthesize();\n\n      if (left.type === 'Identifier') {\n        base = scope.resolveName(left.name);\n      } else if (left.type === 'MemberExpression') {\n        var object;\n        var needsObjectVar = false;\n        var property;\n        var needsPropertyVar = false;\n        var statement = this.findNearest(/(?:Statement|Declaration)$/);\n        var i0 = statement.getIndentation();\n\n        if (left.property.type === 'Identifier') {\n          property = left.computed ? scope.resolveName(left.property.name) : left.property.name;\n        } else {\n          property = scope.createDeclaration('property');\n          needsPropertyVar = true;\n        }\n\n        if (left.object.type === 'Identifier') {\n          object = scope.resolveName(left.object.name);\n        } else {\n          object = scope.createDeclaration('object');\n          needsObjectVar = true;\n        }\n\n        if (left.start === statement.start) {\n          if (needsObjectVar && needsPropertyVar) {\n            code.prependRight(statement.start, object + \" = \");\n            code.overwrite(left.object.end, left.property.start, \";\\n\" + i0 + property + \" = \");\n            code.overwrite(left.property.end, left.end, \";\\n\" + i0 + object + \"[\" + property + \"]\");\n          } else if (needsObjectVar) {\n            code.prependRight(statement.start, object + \" = \");\n            code.appendLeft(left.object.end, \";\\n\" + i0);\n            code.appendLeft(left.object.end, object);\n          } else if (needsPropertyVar) {\n            code.prependRight(left.property.start, property + \" = \");\n            code.appendLeft(left.property.end, \";\\n\" + i0);\n            code.move(left.property.start, left.property.end, this.start);\n            code.appendLeft(left.object.end, \"[\" + property + \"]\");\n            code.remove(left.object.end, left.property.start);\n            code.remove(left.property.end, left.end);\n          }\n        } else {\n          if (needsObjectVar && needsPropertyVar) {\n            code.prependRight(left.start, \"( \" + object + \" = \");\n            code.overwrite(left.object.end, left.property.start, \", \" + property + \" = \");\n            code.overwrite(left.property.end, left.end, \", \" + object + \"[\" + property + \"]\");\n          } else if (needsObjectVar) {\n            code.prependRight(left.start, \"( \" + object + \" = \");\n            code.appendLeft(left.object.end, \", \" + object);\n          } else if (needsPropertyVar) {\n            code.prependRight(left.property.start, \"( \" + property + \" = \");\n            code.appendLeft(left.property.end, \", \");\n            code.move(left.property.start, left.property.end, left.start);\n            code.overwrite(left.object.end, left.property.start, \"[\" + property + \"]\");\n            code.remove(left.property.end, left.end);\n          }\n\n          if (needsPropertyVar) {\n            code.appendLeft(this.end, \" )\");\n          }\n        }\n\n        base = object + (left.computed || needsPropertyVar ? \"[\" + property + \"]\" : \".\" + property);\n      }\n\n      code.prependRight(this.right.start, \"Math.pow( \" + base + \", \");\n      code.appendLeft(this.right.end, \" )\");\n    };\n\n    return AssignmentExpression;\n  }(Node$1);\n\n  var AwaitExpression =\n  /*@__PURE__*/\n  function (Node) {\n    function AwaitExpression() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) AwaitExpression.__proto__ = Node;\n    AwaitExpression.prototype = Object.create(Node && Node.prototype);\n    AwaitExpression.prototype.constructor = AwaitExpression;\n\n    AwaitExpression.prototype.initialise = function initialise(transforms) {\n      if (transforms.asyncAwait) {\n        CompileError.missingTransform(\"await\", \"asyncAwait\", this);\n      }\n\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    return AwaitExpression;\n  }(Node$1);\n\n  var BinaryExpression =\n  /*@__PURE__*/\n  function (Node) {\n    function BinaryExpression() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) BinaryExpression.__proto__ = Node;\n    BinaryExpression.prototype = Object.create(Node && Node.prototype);\n    BinaryExpression.prototype.constructor = BinaryExpression;\n\n    BinaryExpression.prototype.transpile = function transpile(code, transforms) {\n      if (this.operator === '**' && transforms.exponentiation) {\n        code.prependRight(this.start, \"Math.pow( \");\n        code.overwrite(this.left.end, this.right.start, \", \");\n        code.appendLeft(this.end, \" )\");\n      }\n\n      Node.prototype.transpile.call(this, code, transforms);\n    };\n\n    return BinaryExpression;\n  }(Node$1);\n\n  var loopStatement = /(?:For(?:In|Of)?|While)Statement/;\n\n  var BreakStatement =\n  /*@__PURE__*/\n  function (Node) {\n    function BreakStatement() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) BreakStatement.__proto__ = Node;\n    BreakStatement.prototype = Object.create(Node && Node.prototype);\n    BreakStatement.prototype.constructor = BreakStatement;\n\n    BreakStatement.prototype.initialise = function initialise() {\n      var loop = this.findNearest(loopStatement);\n      var switchCase = this.findNearest('SwitchCase');\n\n      if (loop && (!switchCase || loop.depth > switchCase.depth)) {\n        loop.canBreak = true;\n        this.loop = loop;\n      }\n    };\n\n    BreakStatement.prototype.transpile = function transpile(code) {\n      if (this.loop && this.loop.shouldRewriteAsFunction) {\n        if (this.label) {\n          throw new CompileError('Labels are not currently supported in a loop with locally-scoped variables', this);\n        }\n\n        code.overwrite(this.start, this.start + 5, \"return 'break'\");\n      }\n    };\n\n    return BreakStatement;\n  }(Node$1);\n\n  var CallExpression =\n  /*@__PURE__*/\n  function (Node) {\n    function CallExpression() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) CallExpression.__proto__ = Node;\n    CallExpression.prototype = Object.create(Node && Node.prototype);\n    CallExpression.prototype.constructor = CallExpression;\n\n    CallExpression.prototype.initialise = function initialise(transforms) {\n      if (transforms.spreadRest && this.arguments.length > 1) {\n        var lexicalBoundary = this.findLexicalBoundary();\n        var i = this.arguments.length;\n\n        while (i--) {\n          var arg = this.arguments[i];\n\n          if (arg.type === 'SpreadElement' && isArguments(arg.argument)) {\n            this.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();\n          }\n        }\n      }\n\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    CallExpression.prototype.transpile = function transpile(code, transforms) {\n      if (transforms.spreadRest && this.arguments.length) {\n        inlineSpreads(code, this, this.arguments); // this.arguments.length may have changed, must retest.\n      }\n\n      if (transforms.spreadRest && this.arguments.length) {\n        var hasSpreadElements = false;\n        var context;\n        var firstArgument = this.arguments[0];\n\n        if (this.arguments.length === 1) {\n          if (firstArgument.type === 'SpreadElement') {\n            code.remove(firstArgument.start, firstArgument.argument.start);\n            hasSpreadElements = true;\n          }\n        } else {\n          hasSpreadElements = spread(code, this.arguments, firstArgument.start, this.argumentsArrayAlias);\n        }\n\n        if (hasSpreadElements) {\n          // we need to handle super() and super.method() differently\n          // due to its instance\n          var _super = null;\n\n          if (this.callee.type === 'Super') {\n            _super = this.callee;\n          } else if (this.callee.type === 'MemberExpression' && this.callee.object.type === 'Super') {\n            _super = this.callee.object;\n          }\n\n          if (!_super && this.callee.type === 'MemberExpression') {\n            if (this.callee.object.type === 'Identifier') {\n              context = this.callee.object.name;\n            } else {\n              context = this.findScope(true).createDeclaration('ref');\n              var callExpression = this.callee.object;\n              code.prependRight(callExpression.start, \"(\" + context + \" = \");\n              code.appendLeft(callExpression.end, \")\");\n            }\n          } else {\n            context = 'void 0';\n          }\n\n          code.appendLeft(this.callee.end, '.apply');\n\n          if (_super) {\n            _super.noCall = true; // bit hacky...\n\n            if (this.arguments.length > 1) {\n              if (firstArgument.type === 'SpreadElement') {\n                if (needsParentheses(firstArgument.argument)) {\n                  code.prependRight(firstArgument.start, \"( \");\n                }\n              } else {\n                code.prependRight(firstArgument.start, \"[ \");\n              }\n\n              code.appendLeft(this.arguments[this.arguments.length - 1].end, ' )');\n            }\n          } else if (this.arguments.length === 1) {\n            code.prependRight(firstArgument.start, context + \", \");\n          } else {\n            if (firstArgument.type === 'SpreadElement') {\n              if (needsParentheses(firstArgument.argument)) {\n                code.appendLeft(firstArgument.start, context + \", ( \");\n              } else {\n                code.appendLeft(firstArgument.start, context + \", \");\n              }\n            } else {\n              code.appendLeft(firstArgument.start, context + \", [ \");\n            }\n\n            code.appendLeft(this.arguments[this.arguments.length - 1].end, ' )');\n          }\n        }\n      }\n\n      if (transforms.trailingFunctionCommas && this.arguments.length) {\n        removeTrailingComma(code, this.arguments[this.arguments.length - 1].end);\n      }\n\n      Node.prototype.transpile.call(this, code, transforms);\n    };\n\n    return CallExpression;\n  }(Node$1); // TODO this code is pretty wild, tidy it up\n\n\n  var ClassBody =\n  /*@__PURE__*/\n  function (Node) {\n    function ClassBody() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) ClassBody.__proto__ = Node;\n    ClassBody.prototype = Object.create(Node && Node.prototype);\n    ClassBody.prototype.constructor = ClassBody;\n\n    ClassBody.prototype.transpile = function transpile(code, transforms, inFunctionExpression, superName) {\n      var this$1 = this;\n\n      if (transforms.classes) {\n        var name = this.parent.name;\n        var indentStr = code.getIndentString();\n        var i0 = this.getIndentation() + (inFunctionExpression ? indentStr : '');\n        var i1 = i0 + indentStr;\n        var constructorIndex = findIndex(this.body, function (node) {\n          return node.kind === 'constructor';\n        });\n        var constructor = this.body[constructorIndex];\n        var introBlock = '';\n        var outroBlock = '';\n\n        if (this.body.length) {\n          code.remove(this.start, this.body[0].start);\n          code.remove(this.body[this.body.length - 1].end, this.end);\n        } else {\n          code.remove(this.start, this.end);\n        }\n\n        if (constructor) {\n          constructor.value.body.isConstructorBody = true;\n          var previousMethod = this.body[constructorIndex - 1];\n          var nextMethod = this.body[constructorIndex + 1]; // ensure constructor is first\n\n          if (constructorIndex > 0) {\n            code.remove(previousMethod.end, constructor.start);\n            code.move(constructor.start, nextMethod ? nextMethod.start : this.end - 1, this.body[0].start);\n          }\n\n          if (!inFunctionExpression) {\n            code.appendLeft(constructor.end, ';');\n          }\n        }\n\n        var namedFunctions = this.program.options.namedFunctionExpressions !== false;\n        var namedConstructor = namedFunctions || this.parent.superClass || this.parent.type !== 'ClassDeclaration';\n\n        if (this.parent.superClass) {\n          var inheritanceBlock = \"if ( \" + superName + \" ) \" + name + \".__proto__ = \" + superName + \";\\n\" + i0 + name + \".prototype = Object.create( \" + superName + \" && \" + superName + \".prototype );\\n\" + i0 + name + \".prototype.constructor = \" + name + \";\";\n\n          if (constructor) {\n            introBlock += \"\\n\\n\" + i0 + inheritanceBlock;\n          } else {\n            var fn = \"function \" + name + \" () {\" + (superName ? \"\\n\" + i1 + superName + \".apply(this, arguments);\\n\" + i0 + \"}\" : \"}\") + (inFunctionExpression ? '' : ';') + (this.body.length ? \"\\n\\n\" + i0 : '');\n            inheritanceBlock = fn + inheritanceBlock;\n            introBlock += inheritanceBlock + \"\\n\\n\" + i0;\n          }\n        } else if (!constructor) {\n          var fn$1 = 'function ' + (namedConstructor ? name + ' ' : '') + '() {}';\n\n          if (this.parent.type === 'ClassDeclaration') {\n            fn$1 += ';';\n          }\n\n          if (this.body.length) {\n            fn$1 += \"\\n\\n\" + i0;\n          }\n\n          introBlock += fn$1;\n        }\n\n        var scope = this.findScope(false);\n        var prototypeGettersAndSetters = [];\n        var staticGettersAndSetters = [];\n        var prototypeAccessors;\n        var staticAccessors;\n        this.body.forEach(function (method, i) {\n          if ((method.kind === 'get' || method.kind === 'set') && transforms.getterSetter) {\n            CompileError.missingTransform(\"getters and setters\", \"getterSetter\", method);\n          }\n\n          if (method.kind === 'constructor') {\n            var constructorName = namedConstructor ? ' ' + name : '';\n            code.overwrite(method.key.start, method.key.end, \"function\" + constructorName);\n            return;\n          }\n\n          if (method[\"static\"]) {\n            var len = code.original[method.start + 6] == ' ' ? 7 : 6;\n            code.remove(method.start, method.start + len);\n          }\n\n          var isAccessor = method.kind !== 'method';\n          var lhs;\n          var methodName = method.key.name;\n\n          if (reserved[methodName] || method.value.body.scope.references[methodName]) {\n            methodName = scope.createIdentifier(methodName);\n          } // when method name is a string or a number let's pretend it's a computed method\n\n\n          var fake_computed = false;\n\n          if (!method.computed && method.key.type === 'Literal') {\n            fake_computed = true;\n            method.computed = true;\n          }\n\n          if (isAccessor) {\n            if (method.computed) {\n              throw new Error('Computed accessor properties are not currently supported');\n            }\n\n            code.remove(method.start, method.key.start);\n\n            if (method[\"static\"]) {\n              if (!~staticGettersAndSetters.indexOf(method.key.name)) {\n                staticGettersAndSetters.push(method.key.name);\n              }\n\n              if (!staticAccessors) {\n                staticAccessors = scope.createIdentifier('staticAccessors');\n              }\n\n              lhs = \"\" + staticAccessors;\n            } else {\n              if (!~prototypeGettersAndSetters.indexOf(method.key.name)) {\n                prototypeGettersAndSetters.push(method.key.name);\n              }\n\n              if (!prototypeAccessors) {\n                prototypeAccessors = scope.createIdentifier('prototypeAccessors');\n              }\n\n              lhs = \"\" + prototypeAccessors;\n            }\n          } else {\n            lhs = method[\"static\"] ? \"\" + name : name + \".prototype\";\n          }\n\n          if (!method.computed) {\n            lhs += '.';\n          }\n\n          var insertNewlines = constructorIndex > 0 && i === constructorIndex + 1 || i === 0 && constructorIndex === this$1.body.length - 1;\n\n          if (insertNewlines) {\n            lhs = \"\\n\\n\" + i0 + lhs;\n          }\n\n          var c = method.key.end;\n\n          if (method.computed) {\n            if (fake_computed) {\n              code.prependRight(method.key.start, '[');\n              code.appendLeft(method.key.end, ']');\n            } else {\n              while (code.original[c] !== ']') {\n                c += 1;\n              }\n\n              c += 1;\n            }\n          }\n\n          var funcName = method.computed || isAccessor || !namedFunctions ? '' : methodName + \" \";\n          var rhs = (isAccessor ? \".\" + method.kind : '') + \" = \" + (method.value.async ? 'async ' : '') + \"function\" + (method.value.generator ? '* ' : ' ') + funcName;\n          code.remove(c, method.value.start);\n          code.prependRight(method.value.start, rhs);\n          code.appendLeft(method.end, ';');\n\n          if (method.value.generator) {\n            code.remove(method.start, method.key.start);\n          }\n\n          var start = method.key.start;\n\n          if (method.computed && !fake_computed) {\n            while (code.original[start] != '[') {\n              --start;\n            }\n          }\n\n          if (method.start < start) {\n            code.overwrite(method.start, start, lhs);\n          } else {\n            code.prependRight(method.start, lhs);\n          }\n        });\n\n        if (prototypeGettersAndSetters.length || staticGettersAndSetters.length) {\n          var intro = [];\n          var outro = [];\n\n          if (prototypeGettersAndSetters.length) {\n            intro.push(\"var \" + prototypeAccessors + \" = { \" + prototypeGettersAndSetters.map(function (name) {\n              return name + \": { configurable: true }\";\n            }).join(',') + \" };\");\n            outro.push(\"Object.defineProperties( \" + name + \".prototype, \" + prototypeAccessors + \" );\");\n          }\n\n          if (staticGettersAndSetters.length) {\n            intro.push(\"var \" + staticAccessors + \" = { \" + staticGettersAndSetters.map(function (name) {\n              return name + \": { configurable: true }\";\n            }).join(',') + \" };\");\n            outro.push(\"Object.defineProperties( \" + name + \", \" + staticAccessors + \" );\");\n          }\n\n          if (constructor) {\n            introBlock += \"\\n\\n\" + i0;\n          }\n\n          introBlock += intro.join(\"\\n\" + i0);\n\n          if (!constructor) {\n            introBlock += \"\\n\\n\" + i0;\n          }\n\n          outroBlock += \"\\n\\n\" + i0 + outro.join(\"\\n\" + i0);\n        }\n\n        if (constructor) {\n          code.appendLeft(constructor.end, introBlock);\n        } else {\n          code.prependRight(this.start, introBlock);\n        }\n\n        code.appendLeft(this.end, outroBlock);\n      }\n\n      Node.prototype.transpile.call(this, code, transforms);\n    };\n\n    return ClassBody;\n  }(Node$1); // TODO this function is slightly flawed – it works on the original string,\n  // not its current edited state.\n  // That's not a problem for the way that it's currently used, but it could\n  // be in future...\n\n\n  function deindent(node, code) {\n    var start = node.start;\n    var end = node.end;\n    var indentStr = code.getIndentString();\n    var indentStrLen = indentStr.length;\n    var indentStart = start - indentStrLen;\n\n    if (!node.program.indentExclusions[indentStart] && code.original.slice(indentStart, start) === indentStr) {\n      code.remove(indentStart, start);\n    }\n\n    var pattern = new RegExp(indentStr + '\\\\S', 'g');\n    var slice = code.original.slice(start, end);\n    var match;\n\n    while (match = pattern.exec(slice)) {\n      var removeStart = start + match.index;\n\n      if (!node.program.indentExclusions[removeStart]) {\n        code.remove(removeStart, removeStart + indentStrLen);\n      }\n    }\n  }\n\n  var ClassDeclaration =\n  /*@__PURE__*/\n  function (Node) {\n    function ClassDeclaration() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) ClassDeclaration.__proto__ = Node;\n    ClassDeclaration.prototype = Object.create(Node && Node.prototype);\n    ClassDeclaration.prototype.constructor = ClassDeclaration;\n\n    ClassDeclaration.prototype.initialise = function initialise(transforms) {\n      if (this.id) {\n        this.name = this.id.name;\n        this.findScope(true).addDeclaration(this.id, 'class');\n      } else {\n        this.name = this.findScope(true).createIdentifier(\"defaultExport\");\n      }\n\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    ClassDeclaration.prototype.transpile = function transpile(code, transforms) {\n      if (transforms.classes) {\n        if (!this.superClass) {\n          deindent(this.body, code);\n        }\n\n        var superName = this.superClass && (this.superClass.name || 'superclass');\n        var i0 = this.getIndentation();\n        var i1 = i0 + code.getIndentString(); // if this is an export default statement, we have to move the export to\n        // after the declaration, because `export default var Foo = ...` is illegal\n\n        var isExportDefaultDeclaration = this.parent.type === 'ExportDefaultDeclaration';\n\n        if (isExportDefaultDeclaration) {\n          code.remove(this.parent.start, this.start);\n        }\n\n        var c = this.start;\n\n        if (this.id) {\n          code.overwrite(c, this.id.start, 'var ');\n          c = this.id.end;\n        } else {\n          code.prependLeft(c, \"var \" + this.name);\n        }\n\n        if (this.superClass) {\n          if (this.superClass.end === this.body.start) {\n            code.remove(c, this.superClass.start);\n            code.appendLeft(c, \" = /*@__PURE__*/(function (\" + superName + \") {\\n\" + i1);\n          } else {\n            code.overwrite(c, this.superClass.start, ' = ');\n            code.overwrite(this.superClass.end, this.body.start, \"/*@__PURE__*/(function (\" + superName + \") {\\n\" + i1);\n          }\n        } else {\n          if (c === this.body.start) {\n            code.appendLeft(c, ' = ');\n          } else {\n            code.overwrite(c, this.body.start, ' = ');\n          }\n        }\n\n        this.body.transpile(code, transforms, !!this.superClass, superName);\n        var syntheticDefaultExport = isExportDefaultDeclaration ? \"\\n\\n\" + i0 + \"export default \" + this.name + \";\" : '';\n\n        if (this.superClass) {\n          code.appendLeft(this.end, \"\\n\\n\" + i1 + \"return \" + this.name + \";\\n\" + i0 + \"}(\");\n          code.move(this.superClass.start, this.superClass.end, this.end);\n          code.prependRight(this.end, \"));\" + syntheticDefaultExport);\n        } else if (syntheticDefaultExport) {\n          code.prependRight(this.end, syntheticDefaultExport);\n        }\n      } else {\n        this.body.transpile(code, transforms, false, null);\n      }\n    };\n\n    return ClassDeclaration;\n  }(Node$1);\n\n  var ClassExpression =\n  /*@__PURE__*/\n  function (Node) {\n    function ClassExpression() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) ClassExpression.__proto__ = Node;\n    ClassExpression.prototype = Object.create(Node && Node.prototype);\n    ClassExpression.prototype.constructor = ClassExpression;\n\n    ClassExpression.prototype.initialise = function initialise(transforms) {\n      this.name = (this.id ? this.id.name : this.parent.type === 'VariableDeclarator' ? this.parent.id.name : this.parent.type !== 'AssignmentExpression' ? null : this.parent.left.type === 'Identifier' ? this.parent.left.name : this.parent.left.type === 'MemberExpression' ? this.parent.left.property.name : null) || this.findScope(true).createIdentifier('anonymous');\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    ClassExpression.prototype.transpile = function transpile(code, transforms) {\n      if (transforms.classes) {\n        var superName = this.superClass && (this.superClass.name || 'superclass');\n        var i0 = this.getIndentation();\n        var i1 = i0 + code.getIndentString();\n\n        if (this.superClass) {\n          code.remove(this.start, this.superClass.start);\n          code.remove(this.superClass.end, this.body.start);\n          code.appendRight(this.start, \"/*@__PURE__*/(function (\" + superName + \") {\\n\" + i1);\n        } else {\n          code.overwrite(this.start, this.body.start, \"/*@__PURE__*/(function () {\\n\" + i1);\n        }\n\n        this.body.transpile(code, transforms, true, superName);\n        var superClass = '';\n\n        if (this.superClass) {\n          superClass = code.slice(this.superClass.start, this.superClass.end);\n          code.remove(this.superClass.start, this.superClass.end);\n        }\n\n        code.appendLeft(this.end, \"\\n\\n\" + i1 + \"return \" + this.name + \";\\n\" + i0 + \"}(\" + superClass + \"))\");\n      } else {\n        this.body.transpile(code, transforms, false);\n      }\n    };\n\n    return ClassExpression;\n  }(Node$1);\n\n  var ContinueStatement =\n  /*@__PURE__*/\n  function (Node) {\n    function ContinueStatement() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) ContinueStatement.__proto__ = Node;\n    ContinueStatement.prototype = Object.create(Node && Node.prototype);\n    ContinueStatement.prototype.constructor = ContinueStatement;\n\n    ContinueStatement.prototype.transpile = function transpile(code) {\n      var loop = this.findNearest(loopStatement);\n\n      if (loop.shouldRewriteAsFunction) {\n        if (this.label) {\n          throw new CompileError('Labels are not currently supported in a loop with locally-scoped variables', this);\n        }\n\n        code.overwrite(this.start, this.start + 8, 'return');\n      }\n    };\n\n    return ContinueStatement;\n  }(Node$1);\n\n  var ExportDefaultDeclaration =\n  /*@__PURE__*/\n  function (Node) {\n    function ExportDefaultDeclaration() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) ExportDefaultDeclaration.__proto__ = Node;\n    ExportDefaultDeclaration.prototype = Object.create(Node && Node.prototype);\n    ExportDefaultDeclaration.prototype.constructor = ExportDefaultDeclaration;\n\n    ExportDefaultDeclaration.prototype.initialise = function initialise(transforms) {\n      if (transforms.moduleExport) {\n        CompileError.missingTransform(\"export\", \"moduleExport\", this);\n      }\n\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    return ExportDefaultDeclaration;\n  }(Node$1);\n\n  var ExportNamedDeclaration =\n  /*@__PURE__*/\n  function (Node) {\n    function ExportNamedDeclaration() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) ExportNamedDeclaration.__proto__ = Node;\n    ExportNamedDeclaration.prototype = Object.create(Node && Node.prototype);\n    ExportNamedDeclaration.prototype.constructor = ExportNamedDeclaration;\n\n    ExportNamedDeclaration.prototype.initialise = function initialise(transforms) {\n      if (transforms.moduleExport) {\n        CompileError.missingTransform(\"export\", \"moduleExport\", this);\n      }\n\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    return ExportNamedDeclaration;\n  }(Node$1);\n\n  var LoopStatement =\n  /*@__PURE__*/\n  function (Node) {\n    function LoopStatement() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) LoopStatement.__proto__ = Node;\n    LoopStatement.prototype = Object.create(Node && Node.prototype);\n    LoopStatement.prototype.constructor = LoopStatement;\n\n    LoopStatement.prototype.findScope = function findScope(functionScope) {\n      return functionScope || !this.createdScope ? this.parent.findScope(functionScope) : this.body.scope;\n    };\n\n    LoopStatement.prototype.initialise = function initialise(transforms) {\n      this.body.createScope();\n      this.createdScope = true; // this is populated as and when reassignments occur\n\n      this.reassigned = Object.create(null);\n      this.aliases = Object.create(null);\n      this.thisRefs = [];\n      Node.prototype.initialise.call(this, transforms);\n\n      if (transforms.letConst) {\n        // see if any block-scoped declarations are referenced\n        // inside function expressions\n        var names = Object.keys(this.body.scope.declarations);\n        var i = names.length;\n\n        while (i--) {\n          var name = names[i];\n          var declaration = this.body.scope.declarations[name];\n          var j = declaration.instances.length;\n\n          while (j--) {\n            var instance = declaration.instances[j];\n            var nearestFunctionExpression = instance.findNearest(/Function/);\n\n            if (nearestFunctionExpression && nearestFunctionExpression.depth > this.depth) {\n              this.shouldRewriteAsFunction = true;\n\n              for (var i$1 = 0, list = this.thisRefs; i$1 < list.length; i$1 += 1) {\n                var node = list[i$1];\n                node.alias = node.alias || node.findLexicalBoundary().getThisAlias();\n              }\n\n              break;\n            }\n          }\n\n          if (this.shouldRewriteAsFunction) {\n            break;\n          }\n        }\n      }\n    };\n\n    LoopStatement.prototype.transpile = function transpile(code, transforms) {\n      var needsBlock = this.type != 'ForOfStatement' && (this.body.type !== 'BlockStatement' || this.body.type === 'BlockStatement' && this.body.synthetic);\n\n      if (this.shouldRewriteAsFunction) {\n        var i0 = this.getIndentation();\n        var i1 = i0 + code.getIndentString();\n        var argString = this.args ? \" \" + this.args.join(', ') + \" \" : '';\n        var paramString = this.params ? \" \" + this.params.join(', ') + \" \" : '';\n        var functionScope = this.findScope(true);\n        var loop = functionScope.createIdentifier('loop');\n        var before = \"var \" + loop + \" = function (\" + paramString + \") \" + (this.body.synthetic ? \"{\\n\" + i0 + code.getIndentString() : '');\n        var after = (this.body.synthetic ? \"\\n\" + i0 + \"}\" : '') + \";\\n\\n\" + i0;\n        code.prependRight(this.body.start, before);\n        code.appendLeft(this.body.end, after);\n        code.move(this.start, this.body.start, this.body.end);\n\n        if (this.canBreak || this.canReturn) {\n          var returned = functionScope.createIdentifier('returned');\n          var insert = \"{\\n\" + i1 + \"var \" + returned + \" = \" + loop + \"(\" + argString + \");\\n\";\n\n          if (this.canBreak) {\n            insert += \"\\n\" + i1 + \"if ( \" + returned + \" === 'break' ) break;\";\n          }\n\n          if (this.canReturn) {\n            insert += \"\\n\" + i1 + \"if ( \" + returned + \" ) return \" + returned + \".v;\";\n          }\n\n          insert += \"\\n\" + i0 + \"}\";\n          code.prependRight(this.body.end, insert);\n        } else {\n          var callExpression = loop + \"(\" + argString + \");\";\n\n          if (this.type === 'DoWhileStatement') {\n            code.overwrite(this.start, this.body.start, \"do {\\n\" + i1 + callExpression + \"\\n\" + i0 + \"}\");\n          } else {\n            code.prependRight(this.body.end, callExpression);\n          }\n        }\n      } else if (needsBlock) {\n        code.appendLeft(this.body.start, '{ ');\n        code.prependRight(this.body.end, ' }');\n      }\n\n      Node.prototype.transpile.call(this, code, transforms);\n    };\n\n    return LoopStatement;\n  }(Node$1);\n\n  var ForStatement =\n  /*@__PURE__*/\n  function (LoopStatement$$1) {\n    function ForStatement() {\n      LoopStatement$$1.apply(this, arguments);\n    }\n\n    if (LoopStatement$$1) ForStatement.__proto__ = LoopStatement$$1;\n    ForStatement.prototype = Object.create(LoopStatement$$1 && LoopStatement$$1.prototype);\n    ForStatement.prototype.constructor = ForStatement;\n\n    ForStatement.prototype.findScope = function findScope(functionScope) {\n      return functionScope || !this.createdScope ? this.parent.findScope(functionScope) : this.body.scope;\n    };\n\n    ForStatement.prototype.transpile = function transpile(code, transforms) {\n      var this$1 = this;\n      var i1 = this.getIndentation() + code.getIndentString();\n\n      if (this.shouldRewriteAsFunction) {\n        // which variables are declared in the init statement?\n        var names = this.init.type === 'VariableDeclaration' ? this.init.declarations.map(function (declarator) {\n          return extractNames(declarator.id);\n        }) : [];\n        var aliases = this.aliases;\n        this.args = names.map(function (name) {\n          return name in this$1.aliases ? this$1.aliases[name].outer : name;\n        });\n        this.params = names.map(function (name) {\n          return name in this$1.aliases ? this$1.aliases[name].inner : name;\n        });\n        var updates = Object.keys(this.reassigned).map(function (name) {\n          return aliases[name].outer + \" = \" + aliases[name].inner + \";\";\n        });\n\n        if (updates.length) {\n          if (this.body.synthetic) {\n            code.appendLeft(this.body.body[0].end, \"; \" + updates.join(\" \"));\n          } else {\n            var lastStatement = this.body.body[this.body.body.length - 1];\n            code.appendLeft(lastStatement.end, \"\\n\\n\" + i1 + updates.join(\"\\n\" + i1));\n          }\n        }\n      }\n\n      LoopStatement$$1.prototype.transpile.call(this, code, transforms);\n    };\n\n    return ForStatement;\n  }(LoopStatement);\n\n  var ForInStatement =\n  /*@__PURE__*/\n  function (LoopStatement$$1) {\n    function ForInStatement() {\n      LoopStatement$$1.apply(this, arguments);\n    }\n\n    if (LoopStatement$$1) ForInStatement.__proto__ = LoopStatement$$1;\n    ForInStatement.prototype = Object.create(LoopStatement$$1 && LoopStatement$$1.prototype);\n    ForInStatement.prototype.constructor = ForInStatement;\n\n    ForInStatement.prototype.findScope = function findScope(functionScope) {\n      return functionScope || !this.createdScope ? this.parent.findScope(functionScope) : this.body.scope;\n    };\n\n    ForInStatement.prototype.transpile = function transpile(code, transforms) {\n      var this$1 = this;\n      var hasDeclaration = this.left.type === 'VariableDeclaration';\n\n      if (this.shouldRewriteAsFunction) {\n        // which variables are declared in the init statement?\n        var names = hasDeclaration ? this.left.declarations.map(function (declarator) {\n          return extractNames(declarator.id);\n        }) : [];\n        this.args = names.map(function (name) {\n          return name in this$1.aliases ? this$1.aliases[name].outer : name;\n        });\n        this.params = names.map(function (name) {\n          return name in this$1.aliases ? this$1.aliases[name].inner : name;\n        });\n      }\n\n      LoopStatement$$1.prototype.transpile.call(this, code, transforms);\n      var maybePattern = hasDeclaration ? this.left.declarations[0].id : this.left;\n\n      if (maybePattern.type !== 'Identifier') {\n        this.destructurePattern(code, maybePattern, hasDeclaration);\n      }\n    };\n\n    ForInStatement.prototype.destructurePattern = function destructurePattern(code, pattern, isDeclaration) {\n      var scope = this.findScope(true);\n      var i0 = this.getIndentation();\n      var i1 = i0 + code.getIndentString();\n      var ref = scope.createIdentifier('ref');\n      var bodyStart = this.body.body.length ? this.body.body[0].start : this.body.start + 1;\n      code.move(pattern.start, pattern.end, bodyStart);\n      code.prependRight(pattern.end, isDeclaration ? ref : \"var \" + ref);\n      var statementGenerators = [];\n      destructure(code, function (id) {\n        return scope.createIdentifier(id);\n      }, function (ref) {\n        var name = ref.name;\n        return scope.resolveName(name);\n      }, pattern, ref, false, statementGenerators);\n      var suffix = \";\\n\" + i1;\n      statementGenerators.forEach(function (fn, i) {\n        if (i === statementGenerators.length - 1) {\n          suffix = \";\\n\\n\" + i1;\n        }\n\n        fn(bodyStart, '', suffix);\n      });\n    };\n\n    return ForInStatement;\n  }(LoopStatement);\n\n  var ForOfStatement =\n  /*@__PURE__*/\n  function (LoopStatement$$1) {\n    function ForOfStatement() {\n      LoopStatement$$1.apply(this, arguments);\n    }\n\n    if (LoopStatement$$1) ForOfStatement.__proto__ = LoopStatement$$1;\n    ForOfStatement.prototype = Object.create(LoopStatement$$1 && LoopStatement$$1.prototype);\n    ForOfStatement.prototype.constructor = ForOfStatement;\n\n    ForOfStatement.prototype.initialise = function initialise(transforms) {\n      if (transforms.forOf && !transforms.dangerousForOf) {\n        CompileError.missingTransform(\"for-of statements\", \"forOf\", this, \"dangerousForOf\");\n      }\n\n      if (this[\"await\"] && transforms.asyncAwait) {\n        CompileError.missingTransform(\"for-await-of statements\", \"asyncAwait\", this);\n      }\n\n      LoopStatement$$1.prototype.initialise.call(this, transforms);\n    };\n\n    ForOfStatement.prototype.transpile = function transpile(code, transforms) {\n      LoopStatement$$1.prototype.transpile.call(this, code, transforms);\n\n      if (!transforms.dangerousForOf) {\n        return;\n      } // edge case (#80)\n\n\n      if (!this.body.body[0]) {\n        if (this.left.type === 'VariableDeclaration' && this.left.kind === 'var') {\n          code.remove(this.start, this.left.start);\n          code.appendLeft(this.left.end, ';');\n          code.remove(this.left.end, this.end);\n        } else {\n          code.remove(this.start, this.end);\n        }\n\n        return;\n      }\n\n      var scope = this.findScope(true);\n      var i0 = this.getIndentation();\n      var i1 = i0 + code.getIndentString();\n      var key = scope.createIdentifier('i');\n      var list = scope.createIdentifier('list');\n\n      if (this.body.synthetic) {\n        code.prependRight(this.left.start, \"{\\n\" + i1);\n        code.appendLeft(this.body.body[0].end, \"\\n\" + i0 + \"}\");\n      }\n\n      var bodyStart = this.body.body[0].start;\n      code.remove(this.left.end, this.right.start);\n      code.move(this.left.start, this.left.end, bodyStart);\n      code.prependRight(this.right.start, \"var \" + key + \" = 0, \" + list + \" = \");\n      code.appendLeft(this.right.end, \"; \" + key + \" < \" + list + \".length; \" + key + \" += 1\");\n      var isDeclaration = this.left.type === 'VariableDeclaration';\n      var maybeDestructuring = isDeclaration ? this.left.declarations[0].id : this.left;\n\n      if (maybeDestructuring.type !== 'Identifier') {\n        var statementGenerators = [];\n        var ref = scope.createIdentifier('ref');\n        destructure(code, function (id) {\n          return scope.createIdentifier(id);\n        }, function (ref) {\n          var name = ref.name;\n          return scope.resolveName(name);\n        }, maybeDestructuring, ref, !isDeclaration, statementGenerators);\n        var suffix = \";\\n\" + i1;\n        statementGenerators.forEach(function (fn, i) {\n          if (i === statementGenerators.length - 1) {\n            suffix = \";\\n\\n\" + i1;\n          }\n\n          fn(bodyStart, '', suffix);\n        });\n\n        if (isDeclaration) {\n          code.appendLeft(this.left.start + this.left.kind.length + 1, ref);\n          code.appendLeft(this.left.end, \" = \" + list + \"[\" + key + \"];\\n\" + i1);\n        } else {\n          code.appendLeft(this.left.end, \"var \" + ref + \" = \" + list + \"[\" + key + \"];\\n\" + i1);\n        }\n      } else {\n        code.appendLeft(this.left.end, \" = \" + list + \"[\" + key + \"];\\n\\n\" + i1);\n      }\n    };\n\n    return ForOfStatement;\n  }(LoopStatement);\n\n  var FunctionDeclaration =\n  /*@__PURE__*/\n  function (Node) {\n    function FunctionDeclaration() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) FunctionDeclaration.__proto__ = Node;\n    FunctionDeclaration.prototype = Object.create(Node && Node.prototype);\n    FunctionDeclaration.prototype.constructor = FunctionDeclaration;\n\n    FunctionDeclaration.prototype.initialise = function initialise(transforms) {\n      if (this.generator && transforms.generator) {\n        CompileError.missingTransform(\"generators\", \"generator\", this);\n      }\n\n      if (this.async && transforms.asyncAwait) {\n        CompileError.missingTransform(\"async functions\", \"asyncAwait\", this);\n      }\n\n      this.body.createScope();\n\n      if (this.id) {\n        this.findScope(true).addDeclaration(this.id, 'function');\n      }\n\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    FunctionDeclaration.prototype.transpile = function transpile(code, transforms) {\n      Node.prototype.transpile.call(this, code, transforms);\n\n      if (transforms.trailingFunctionCommas && this.params.length) {\n        removeTrailingComma(code, this.params[this.params.length - 1].end);\n      }\n    };\n\n    return FunctionDeclaration;\n  }(Node$1);\n\n  var FunctionExpression =\n  /*@__PURE__*/\n  function (Node) {\n    function FunctionExpression() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) FunctionExpression.__proto__ = Node;\n    FunctionExpression.prototype = Object.create(Node && Node.prototype);\n    FunctionExpression.prototype.constructor = FunctionExpression;\n\n    FunctionExpression.prototype.initialise = function initialise(transforms) {\n      if (this.generator && transforms.generator) {\n        CompileError.missingTransform(\"generators\", \"generator\", this);\n      }\n\n      if (this.async && transforms.asyncAwait) {\n        CompileError.missingTransform(\"async functions\", \"asyncAwait\", this);\n      }\n\n      this.body.createScope();\n\n      if (this.id) {\n        // function expression IDs belong to the child scope...\n        this.body.scope.addDeclaration(this.id, 'function');\n      }\n\n      Node.prototype.initialise.call(this, transforms);\n      var parent = this.parent;\n      var methodName;\n\n      if (transforms.conciseMethodProperty && parent.type === 'Property' && parent.kind === 'init' && parent.method && parent.key.type === 'Identifier') {\n        // object literal concise method\n        methodName = parent.key.name;\n      } else if (transforms.classes && parent.type === 'MethodDefinition' && parent.kind === 'method' && parent.key.type === 'Identifier') {\n        // method definition in a class\n        methodName = parent.key.name;\n      } else if (this.id && this.id.type === 'Identifier') {\n        // naked function expression\n        methodName = this.id.alias || this.id.name;\n      }\n\n      if (methodName) {\n        for (var i$1 = 0, list$1 = this.params; i$1 < list$1.length; i$1 += 1) {\n          var param = list$1[i$1];\n\n          if (param.type === 'Identifier' && methodName === param.name) {\n            // workaround for Safari 9/WebKit bug:\n            // https://gitlab.com/Rich-Harris/buble/issues/154\n            // change parameter name when same as method name\n            var scope = this.body.scope;\n            var declaration = scope.declarations[methodName];\n            var alias = scope.createIdentifier(methodName);\n            param.alias = alias;\n\n            for (var i = 0, list = declaration.instances; i < list.length; i += 1) {\n              var identifier = list[i];\n              identifier.alias = alias;\n            }\n\n            break;\n          }\n        }\n      }\n    };\n\n    FunctionExpression.prototype.transpile = function transpile(code, transforms) {\n      Node.prototype.transpile.call(this, code, transforms);\n\n      if (transforms.trailingFunctionCommas && this.params.length) {\n        removeTrailingComma(code, this.params[this.params.length - 1].end);\n      }\n    };\n\n    return FunctionExpression;\n  }(Node$1);\n\n  function isReference(node, parent) {\n    if (node.type === 'MemberExpression') {\n      return !node.computed && isReference(node.object, node);\n    }\n\n    if (node.type === 'Identifier') {\n      // the only time we could have an identifier node without a parent is\n      // if it's the entire body of a function without a block statement –\n      // i.e. an arrow function expression like `a => a`\n      if (!parent) {\n        return true;\n      }\n\n      if (/(Function|Class)Expression/.test(parent.type)) {\n        return false;\n      }\n\n      if (parent.type === 'VariableDeclarator') {\n        return node === parent.init;\n      } // TODO is this right?\n\n\n      if (parent.type === 'MemberExpression' || parent.type === 'MethodDefinition') {\n        return parent.computed || node === parent.object;\n      }\n\n      if (parent.type === 'ArrayPattern') {\n        return false;\n      } // disregard the `bar` in `{ bar: foo }`, but keep it in `{ [bar]: foo }`\n\n\n      if (parent.type === 'Property') {\n        if (parent.parent.type === 'ObjectPattern') {\n          return false;\n        }\n\n        return parent.computed || node === parent.value;\n      } // disregard the `bar` in `class Foo { bar () {...} }`\n\n\n      if (parent.type === 'MethodDefinition') {\n        return false;\n      } // disregard the `bar` in `export { foo as bar }`\n\n\n      if (parent.type === 'ExportSpecifier' && node !== parent.local) {\n        return false;\n      }\n\n      return true;\n    }\n  }\n\n  var Identifier =\n  /*@__PURE__*/\n  function (Node) {\n    function Identifier() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) Identifier.__proto__ = Node;\n    Identifier.prototype = Object.create(Node && Node.prototype);\n    Identifier.prototype.constructor = Identifier;\n\n    Identifier.prototype.findScope = function findScope(functionScope) {\n      if (this.parent.params && ~this.parent.params.indexOf(this)) {\n        return this.parent.body.scope;\n      }\n\n      if (this.parent.type === 'FunctionExpression' && this === this.parent.id) {\n        return this.parent.body.scope;\n      }\n\n      return this.parent.findScope(functionScope);\n    };\n\n    Identifier.prototype.initialise = function initialise(transforms) {\n      if (isReference(this, this.parent)) {\n        if (transforms.arrow && this.name === 'arguments' && !this.findScope(false).contains(this.name)) {\n          var lexicalBoundary = this.findLexicalBoundary();\n          var arrowFunction = this.findNearest('ArrowFunctionExpression');\n          var loop = this.findNearest(loopStatement);\n\n          if (arrowFunction && arrowFunction.depth > lexicalBoundary.depth) {\n            this.alias = lexicalBoundary.getArgumentsAlias();\n          }\n\n          if (loop && loop.body.contains(this) && loop.depth > lexicalBoundary.depth) {\n            this.alias = lexicalBoundary.getArgumentsAlias();\n          }\n        }\n\n        this.findScope(false).addReference(this);\n      }\n    };\n\n    Identifier.prototype.transpile = function transpile(code) {\n      if (this.alias) {\n        code.overwrite(this.start, this.end, this.alias, {\n          storeName: true,\n          contentOnly: true\n        });\n      }\n    };\n\n    return Identifier;\n  }(Node$1);\n\n  var IfStatement =\n  /*@__PURE__*/\n  function (Node) {\n    function IfStatement() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) IfStatement.__proto__ = Node;\n    IfStatement.prototype = Object.create(Node && Node.prototype);\n    IfStatement.prototype.constructor = IfStatement;\n\n    IfStatement.prototype.initialise = function initialise(transforms) {\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    IfStatement.prototype.transpile = function transpile(code, transforms) {\n      if (this.consequent.type !== 'BlockStatement' || this.consequent.type === 'BlockStatement' && this.consequent.synthetic) {\n        code.appendLeft(this.consequent.start, '{ ');\n        code.prependRight(this.consequent.end, ' }');\n      }\n\n      if (this.alternate && this.alternate.type !== 'IfStatement' && (this.alternate.type !== 'BlockStatement' || this.alternate.type === 'BlockStatement' && this.alternate.synthetic)) {\n        code.appendLeft(this.alternate.start, '{ ');\n        code.prependRight(this.alternate.end, ' }');\n      }\n\n      Node.prototype.transpile.call(this, code, transforms);\n    };\n\n    return IfStatement;\n  }(Node$1);\n\n  var Import =\n  /*@__PURE__*/\n  function (Node) {\n    function Import() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) Import.__proto__ = Node;\n    Import.prototype = Object.create(Node && Node.prototype);\n    Import.prototype.constructor = Import;\n\n    Import.prototype.initialise = function initialise(transforms) {\n      if (transforms.moduleImport) {\n        CompileError.missingTransform(\"dynamic import expressions\", \"moduleImport\", this);\n      }\n\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    return Import;\n  }(Node$1);\n\n  var ImportDeclaration =\n  /*@__PURE__*/\n  function (Node) {\n    function ImportDeclaration() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) ImportDeclaration.__proto__ = Node;\n    ImportDeclaration.prototype = Object.create(Node && Node.prototype);\n    ImportDeclaration.prototype.constructor = ImportDeclaration;\n\n    ImportDeclaration.prototype.initialise = function initialise(transforms) {\n      if (transforms.moduleImport) {\n        CompileError.missingTransform(\"import\", \"moduleImport\", this);\n      }\n\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    return ImportDeclaration;\n  }(Node$1);\n\n  var ImportDefaultSpecifier =\n  /*@__PURE__*/\n  function (Node) {\n    function ImportDefaultSpecifier() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) ImportDefaultSpecifier.__proto__ = Node;\n    ImportDefaultSpecifier.prototype = Object.create(Node && Node.prototype);\n    ImportDefaultSpecifier.prototype.constructor = ImportDefaultSpecifier;\n\n    ImportDefaultSpecifier.prototype.initialise = function initialise(transforms) {\n      this.findScope(true).addDeclaration(this.local, 'import');\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    return ImportDefaultSpecifier;\n  }(Node$1);\n\n  var ImportSpecifier =\n  /*@__PURE__*/\n  function (Node) {\n    function ImportSpecifier() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) ImportSpecifier.__proto__ = Node;\n    ImportSpecifier.prototype = Object.create(Node && Node.prototype);\n    ImportSpecifier.prototype.constructor = ImportSpecifier;\n\n    ImportSpecifier.prototype.initialise = function initialise(transforms) {\n      this.findScope(true).addDeclaration(this.local, 'import');\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    return ImportSpecifier;\n  }(Node$1);\n\n  var hasDashes = function hasDashes(val) {\n    return /-/.test(val);\n  };\n\n  var formatKey = function formatKey(key) {\n    return hasDashes(key) ? \"'\" + key + \"'\" : key;\n  };\n\n  var formatVal = function formatVal(val) {\n    return val ? '' : 'true';\n  };\n\n  var JSXAttribute =\n  /*@__PURE__*/\n  function (Node) {\n    function JSXAttribute() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) JSXAttribute.__proto__ = Node;\n    JSXAttribute.prototype = Object.create(Node && Node.prototype);\n    JSXAttribute.prototype.constructor = JSXAttribute;\n\n    JSXAttribute.prototype.transpile = function transpile(code, transforms) {\n      var ref = this.name;\n      var start = ref.start;\n      var name = ref.name; // Overwrite equals sign if value is present.\n\n      var end = this.value ? this.value.start : this.name.end;\n      code.overwrite(start, end, formatKey(name) + \": \" + formatVal(this.value));\n      Node.prototype.transpile.call(this, code, transforms);\n    };\n\n    return JSXAttribute;\n  }(Node$1);\n\n  function containsNewLine(node) {\n    return node.type === 'JSXText' && !/\\S/.test(node.value) && /\\n/.test(node.value);\n  }\n\n  var JSXClosingElement =\n  /*@__PURE__*/\n  function (Node) {\n    function JSXClosingElement() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) JSXClosingElement.__proto__ = Node;\n    JSXClosingElement.prototype = Object.create(Node && Node.prototype);\n    JSXClosingElement.prototype.constructor = JSXClosingElement;\n\n    JSXClosingElement.prototype.transpile = function transpile(code) {\n      var spaceBeforeParen = true;\n      var lastChild = this.parent.children[this.parent.children.length - 1]; // omit space before closing paren if\n      //   a) this is on a separate line, or\n      //   b) there are no children but there are attributes\n\n      if (lastChild && containsNewLine(lastChild) || this.parent.openingElement.attributes.length) {\n        spaceBeforeParen = false;\n      }\n\n      code.overwrite(this.start, this.end, spaceBeforeParen ? ' )' : ')');\n    };\n\n    return JSXClosingElement;\n  }(Node$1);\n\n  function containsNewLine$1(node) {\n    return node.type === 'JSXText' && !/\\S/.test(node.value) && /\\n/.test(node.value);\n  }\n\n  var JSXClosingFragment =\n  /*@__PURE__*/\n  function (Node) {\n    function JSXClosingFragment() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) JSXClosingFragment.__proto__ = Node;\n    JSXClosingFragment.prototype = Object.create(Node && Node.prototype);\n    JSXClosingFragment.prototype.constructor = JSXClosingFragment;\n\n    JSXClosingFragment.prototype.transpile = function transpile(code) {\n      var spaceBeforeParen = true;\n      var lastChild = this.parent.children[this.parent.children.length - 1]; // omit space before closing paren if this is on a separate line\n\n      if (lastChild && containsNewLine$1(lastChild)) {\n        spaceBeforeParen = false;\n      }\n\n      code.overwrite(this.start, this.end, spaceBeforeParen ? ' )' : ')');\n    };\n\n    return JSXClosingFragment;\n  }(Node$1);\n\n  function normalise(str, removeTrailingWhitespace) {\n    str = str.replace(/\\u00a0/g, '&nbsp;');\n\n    if (removeTrailingWhitespace && /\\n/.test(str)) {\n      str = str.replace(/\\s+$/, '');\n    }\n\n    str = str.replace(/^\\n\\r?\\s+/, '') // remove leading newline + space\n    .replace(/\\s*\\n\\r?\\s*/gm, ' '); // replace newlines with spaces\n    // TODO prefer single quotes?\n\n    return JSON.stringify(str);\n  }\n\n  var JSXElement =\n  /*@__PURE__*/\n  function (Node) {\n    function JSXElement() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) JSXElement.__proto__ = Node;\n    JSXElement.prototype = Object.create(Node && Node.prototype);\n    JSXElement.prototype.constructor = JSXElement;\n\n    JSXElement.prototype.transpile = function transpile(code, transforms) {\n      Node.prototype.transpile.call(this, code, transforms);\n      var children = this.children.filter(function (child) {\n        if (child.type !== 'JSXText') {\n          return true;\n        } // remove whitespace-only literals, unless on a single line\n\n\n        return /\\S/.test(child.raw) || !/\\n/.test(child.raw);\n      });\n\n      if (children.length) {\n        var c = (this.openingElement || this.openingFragment).end;\n        var i;\n\n        for (i = 0; i < children.length; i += 1) {\n          var child = children[i];\n          if (child.type === 'JSXExpressionContainer' && child.expression.type === 'JSXEmptyExpression') ;else {\n            var tail = code.original[c] === '\\n' && child.type !== 'JSXText' ? '' : ' ';\n            code.appendLeft(c, \",\" + tail);\n          }\n\n          if (child.type === 'JSXText') {\n            var str = normalise(child.value, i === children.length - 1);\n            code.overwrite(child.start, child.end, str);\n          }\n\n          c = child.end;\n        }\n      }\n    };\n\n    return JSXElement;\n  }(Node$1);\n\n  var JSXExpressionContainer =\n  /*@__PURE__*/\n  function (Node) {\n    function JSXExpressionContainer() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) JSXExpressionContainer.__proto__ = Node;\n    JSXExpressionContainer.prototype = Object.create(Node && Node.prototype);\n    JSXExpressionContainer.prototype.constructor = JSXExpressionContainer;\n\n    JSXExpressionContainer.prototype.transpile = function transpile(code, transforms) {\n      code.remove(this.start, this.expression.start);\n      code.remove(this.expression.end, this.end);\n      Node.prototype.transpile.call(this, code, transforms);\n    };\n\n    return JSXExpressionContainer;\n  }(Node$1);\n\n  var JSXFragment =\n  /*@__PURE__*/\n  function (JSXElement$$1) {\n    function JSXFragment() {\n      JSXElement$$1.apply(this, arguments);\n    }\n\n    if (JSXElement$$1) JSXFragment.__proto__ = JSXElement$$1;\n    JSXFragment.prototype = Object.create(JSXElement$$1 && JSXElement$$1.prototype);\n    JSXFragment.prototype.constructor = JSXFragment;\n    return JSXFragment;\n  }(JSXElement);\n\n  var JSXOpeningElement =\n  /*@__PURE__*/\n  function (Node) {\n    function JSXOpeningElement() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) JSXOpeningElement.__proto__ = Node;\n    JSXOpeningElement.prototype = Object.create(Node && Node.prototype);\n    JSXOpeningElement.prototype.constructor = JSXOpeningElement;\n\n    JSXOpeningElement.prototype.transpile = function transpile(code, transforms) {\n      Node.prototype.transpile.call(this, code, transforms);\n      code.overwrite(this.start, this.name.start, this.program.jsx + \"( \");\n      var html = this.name.type === 'JSXIdentifier' && this.name.name[0] === this.name.name[0].toLowerCase();\n\n      if (html) {\n        code.prependRight(this.name.start, \"'\");\n      }\n\n      var len = this.attributes.length;\n      var c = this.name.end;\n\n      if (len) {\n        var i;\n        var hasSpread = false;\n\n        for (i = 0; i < len; i += 1) {\n          if (this.attributes[i].type === 'JSXSpreadAttribute') {\n            hasSpread = true;\n            break;\n          }\n        }\n\n        c = this.attributes[0].end;\n\n        for (i = 0; i < len; i += 1) {\n          var attr = this.attributes[i];\n\n          if (i > 0) {\n            if (attr.start === c) {\n              code.prependRight(c, ', ');\n            } else {\n              code.overwrite(c, attr.start, ', ');\n            }\n          }\n\n          if (hasSpread && attr.type !== 'JSXSpreadAttribute') {\n            var lastAttr = this.attributes[i - 1];\n            var nextAttr = this.attributes[i + 1];\n\n            if (!lastAttr || lastAttr.type === 'JSXSpreadAttribute') {\n              code.prependRight(attr.start, '{ ');\n            }\n\n            if (!nextAttr || nextAttr.type === 'JSXSpreadAttribute') {\n              code.appendLeft(attr.end, ' }');\n            }\n          }\n\n          c = attr.end;\n        }\n\n        var after;\n        var before;\n\n        if (hasSpread) {\n          if (len === 1) {\n            before = html ? \"',\" : ',';\n          } else {\n            if (!this.program.options.objectAssign) {\n              throw new CompileError(\"Mixed JSX attributes ending in spread requires specified objectAssign option with 'Object.assign' or polyfill helper.\", this);\n            }\n\n            before = html ? \"', \" + this.program.options.objectAssign + \"({},\" : \", \" + this.program.options.objectAssign + \"({},\";\n            after = ')';\n          }\n        } else {\n          before = html ? \"', {\" : ', {';\n          after = ' }';\n        }\n\n        code.prependRight(this.name.end, before);\n\n        if (after) {\n          code.appendLeft(this.attributes[len - 1].end, after);\n        }\n      } else {\n        code.appendLeft(this.name.end, html ? \"', null\" : \", null\");\n        c = this.name.end;\n      }\n\n      if (this.selfClosing) {\n        code.overwrite(c, this.end, this.attributes.length ? \")\" : \" )\");\n      } else {\n        code.remove(c, this.end);\n      }\n    };\n\n    return JSXOpeningElement;\n  }(Node$1);\n\n  var JSXOpeningFragment =\n  /*@__PURE__*/\n  function (Node) {\n    function JSXOpeningFragment() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) JSXOpeningFragment.__proto__ = Node;\n    JSXOpeningFragment.prototype = Object.create(Node && Node.prototype);\n    JSXOpeningFragment.prototype.constructor = JSXOpeningFragment;\n\n    JSXOpeningFragment.prototype.transpile = function transpile(code) {\n      code.overwrite(this.start, this.end, this.program.jsx + \"( \" + this.program.jsxFragment + \", null\");\n    };\n\n    return JSXOpeningFragment;\n  }(Node$1);\n\n  var JSXSpreadAttribute =\n  /*@__PURE__*/\n  function (Node) {\n    function JSXSpreadAttribute() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) JSXSpreadAttribute.__proto__ = Node;\n    JSXSpreadAttribute.prototype = Object.create(Node && Node.prototype);\n    JSXSpreadAttribute.prototype.constructor = JSXSpreadAttribute;\n\n    JSXSpreadAttribute.prototype.transpile = function transpile(code, transforms) {\n      code.remove(this.start, this.argument.start);\n      code.remove(this.argument.end, this.end);\n      Node.prototype.transpile.call(this, code, transforms);\n    };\n\n    return JSXSpreadAttribute;\n  }(Node$1);\n\n  var regjsgen = createCommonjsModule(function (module, exports) {\n    (function () {\n      // Used to determine if values are of the language type `Object`.\n      var objectTypes = {\n        'function': true,\n        'object': true\n      }; // Used as a reference to the global object.\n\n      var root = objectTypes[typeof window] && window || this; // Detect free variable `exports`.\n\n      var freeExports = exports && !exports.nodeType && exports; // Detect free variable `module`.\n\n      var hasFreeModule = module && !module.nodeType; // Detect free variable `global` from Node.js or Browserified code and use it as `root`.\n\n      var freeGlobal = freeExports && hasFreeModule && typeof commonjsGlobal == 'object' && commonjsGlobal;\n\n      if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n        root = freeGlobal;\n      } // Used to check objects for own properties.\n\n\n      var hasOwnProperty = Object.prototype.hasOwnProperty;\n      /*--------------------------------------------------------------------------*/\n      // Generates a string based on the given code point.\n      // Based on https://mths.be/fromcodepoint by @mathias.\n\n      function fromCodePoint() {\n        var codePoint = Number(arguments[0]);\n\n        if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n        codePoint < 0 || // not a valid Unicode code point\n        codePoint > 0x10FFFF || // not a valid Unicode code point\n        Math.floor(codePoint) != codePoint // not an integer\n        ) {\n            throw RangeError('Invalid code point: ' + codePoint);\n          }\n\n        if (codePoint <= 0xFFFF) {\n          // BMP code point\n          return String.fromCharCode(codePoint);\n        } else {\n          // Astral code point; split in surrogate halves\n          // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n          codePoint -= 0x10000;\n          var highSurrogate = (codePoint >> 10) + 0xD800;\n          var lowSurrogate = codePoint % 0x400 + 0xDC00;\n          return String.fromCharCode(highSurrogate, lowSurrogate);\n        }\n      }\n      /*--------------------------------------------------------------------------*/\n      // Ensures that nodes have the correct types.\n\n\n      var assertTypeRegexMap = {};\n\n      function assertType(type, expected) {\n        if (expected.indexOf('|') == -1) {\n          if (type == expected) {\n            return;\n          }\n\n          throw Error('Invalid node type: ' + type + '; expected type: ' + expected);\n        }\n\n        expected = hasOwnProperty.call(assertTypeRegexMap, expected) ? assertTypeRegexMap[expected] : assertTypeRegexMap[expected] = RegExp('^(?:' + expected + ')$');\n\n        if (expected.test(type)) {\n          return;\n        }\n\n        throw Error('Invalid node type: ' + type + '; expected types: ' + expected);\n      }\n      /*--------------------------------------------------------------------------*/\n      // Generates a regular expression string based on an AST.\n\n\n      function generate(node) {\n        var type = node.type;\n\n        if (hasOwnProperty.call(generators, type)) {\n          return generators[type](node);\n        }\n\n        throw Error('Invalid node type: ' + type);\n      }\n      /*--------------------------------------------------------------------------*/\n\n\n      function generateAlternative(node) {\n        assertType(node.type, 'alternative');\n        var terms = node.body,\n            i = -1,\n            length = terms.length,\n            result = '';\n\n        while (++i < length) {\n          result += generateTerm(terms[i]);\n        }\n\n        return result;\n      }\n\n      function generateAnchor(node) {\n        assertType(node.type, 'anchor');\n\n        switch (node.kind) {\n          case 'start':\n            return '^';\n\n          case 'end':\n            return '$';\n\n          case 'boundary':\n            return '\\\\b';\n\n          case 'not-boundary':\n            return '\\\\B';\n\n          default:\n            throw Error('Invalid assertion');\n        }\n      }\n\n      function generateAtom(node) {\n        assertType(node.type, 'anchor|characterClass|characterClassEscape|dot|group|reference|value');\n        return generate(node);\n      }\n\n      function generateCharacterClass(node) {\n        assertType(node.type, 'characterClass');\n        var classRanges = node.body,\n            i = -1,\n            length = classRanges.length,\n            result = '';\n\n        if (node.negative) {\n          result += '^';\n        }\n\n        while (++i < length) {\n          result += generateClassAtom(classRanges[i]);\n        }\n\n        return '[' + result + ']';\n      }\n\n      function generateCharacterClassEscape(node) {\n        assertType(node.type, 'characterClassEscape');\n        return '\\\\' + node.value;\n      }\n\n      function generateUnicodePropertyEscape(node) {\n        assertType(node.type, 'unicodePropertyEscape');\n        return '\\\\' + (node.negative ? 'P' : 'p') + '{' + node.value + '}';\n      }\n\n      function generateCharacterClassRange(node) {\n        assertType(node.type, 'characterClassRange');\n        var min = node.min,\n            max = node.max;\n\n        if (min.type == 'characterClassRange' || max.type == 'characterClassRange') {\n          throw Error('Invalid character class range');\n        }\n\n        return generateClassAtom(min) + '-' + generateClassAtom(max);\n      }\n\n      function generateClassAtom(node) {\n        assertType(node.type, 'anchor|characterClassEscape|characterClassRange|dot|value');\n        return generate(node);\n      }\n\n      function generateDisjunction(node) {\n        assertType(node.type, 'disjunction');\n        var body = node.body,\n            i = -1,\n            length = body.length,\n            result = '';\n\n        while (++i < length) {\n          if (i != 0) {\n            result += '|';\n          }\n\n          result += generate(body[i]);\n        }\n\n        return result;\n      }\n\n      function generateDot(node) {\n        assertType(node.type, 'dot');\n        return '.';\n      }\n\n      function generateGroup(node) {\n        assertType(node.type, 'group');\n        var result = '';\n\n        switch (node.behavior) {\n          case 'normal':\n            if (node.name) {\n              result += '?<' + generateIdentifier(node.name) + '>';\n            }\n\n            break;\n\n          case 'ignore':\n            result += '?:';\n            break;\n\n          case 'lookahead':\n            result += '?=';\n            break;\n\n          case 'negativeLookahead':\n            result += '?!';\n            break;\n\n          case 'lookbehind':\n            result += '?<=';\n            break;\n\n          case 'negativeLookbehind':\n            result += '?<!';\n            break;\n\n          default:\n            throw Error('Invalid behaviour: ' + node.behaviour);\n        }\n\n        var body = node.body,\n            i = -1,\n            length = body.length;\n\n        while (++i < length) {\n          result += generate(body[i]);\n        }\n\n        return '(' + result + ')';\n      }\n\n      function generateIdentifier(node) {\n        assertType(node.type, 'identifier');\n        return node.value;\n      }\n\n      function generateQuantifier(node) {\n        assertType(node.type, 'quantifier');\n        var quantifier = '',\n            min = node.min,\n            max = node.max;\n\n        if (max == null) {\n          if (min == 0) {\n            quantifier = '*';\n          } else if (min == 1) {\n            quantifier = '+';\n          } else {\n            quantifier = '{' + min + ',}';\n          }\n        } else if (min == max) {\n          quantifier = '{' + min + '}';\n        } else if (min == 0 && max == 1) {\n          quantifier = '?';\n        } else {\n          quantifier = '{' + min + ',' + max + '}';\n        }\n\n        if (!node.greedy) {\n          quantifier += '?';\n        }\n\n        return generateAtom(node.body[0]) + quantifier;\n      }\n\n      function generateReference(node) {\n        assertType(node.type, 'reference');\n\n        if (node.matchIndex) {\n          return '\\\\' + node.matchIndex;\n        }\n\n        if (node.name) {\n          return '\\\\k<' + generateIdentifier(node.name) + '>';\n        }\n\n        throw new Error('Unknown reference type');\n      }\n\n      function generateTerm(node) {\n        assertType(node.type, 'anchor|characterClass|characterClassEscape|empty|group|quantifier|reference|unicodePropertyEscape|value');\n        return generate(node);\n      }\n\n      function generateValue(node) {\n        assertType(node.type, 'value');\n        var kind = node.kind,\n            codePoint = node.codePoint;\n\n        if (typeof codePoint != 'number') {\n          throw new Error('Invalid code point: ' + codePoint);\n        }\n\n        switch (kind) {\n          case 'controlLetter':\n            return '\\\\c' + fromCodePoint(codePoint + 64);\n\n          case 'hexadecimalEscape':\n            return '\\\\x' + ('00' + codePoint.toString(16).toUpperCase()).slice(-2);\n\n          case 'identifier':\n            return '\\\\' + fromCodePoint(codePoint);\n\n          case 'null':\n            return '\\\\' + codePoint;\n\n          case 'octal':\n            return '\\\\' + codePoint.toString(8);\n\n          case 'singleEscape':\n            switch (codePoint) {\n              case 0x0008:\n                return '\\\\b';\n\n              case 0x0009:\n                return '\\\\t';\n\n              case 0x000A:\n                return '\\\\n';\n\n              case 0x000B:\n                return '\\\\v';\n\n              case 0x000C:\n                return '\\\\f';\n\n              case 0x000D:\n                return '\\\\r';\n\n              default:\n                throw Error('Invalid code point: ' + codePoint);\n            }\n\n          case 'symbol':\n            return fromCodePoint(codePoint);\n\n          case 'unicodeEscape':\n            return \"\\\\u\" + ('0000' + codePoint.toString(16).toUpperCase()).slice(-4);\n\n          case 'unicodeCodePointEscape':\n            return \"\\\\u{\" + codePoint.toString(16).toUpperCase() + '}';\n\n          default:\n            throw Error('Unsupported node kind: ' + kind);\n        }\n      }\n      /*--------------------------------------------------------------------------*/\n      // Used to generate strings for each node type.\n\n\n      var generators = {\n        'alternative': generateAlternative,\n        'anchor': generateAnchor,\n        'characterClass': generateCharacterClass,\n        'characterClassEscape': generateCharacterClassEscape,\n        'characterClassRange': generateCharacterClassRange,\n        'unicodePropertyEscape': generateUnicodePropertyEscape,\n        'disjunction': generateDisjunction,\n        'dot': generateDot,\n        'group': generateGroup,\n        'quantifier': generateQuantifier,\n        'reference': generateReference,\n        'value': generateValue\n      };\n      /*--------------------------------------------------------------------------*/\n      // Export regjsgen.\n\n      var regjsgen = {\n        'generate': generate\n      }; // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n\n      if (freeExports && hasFreeModule) {\n        // Export for CommonJS support.\n        freeExports.generate = generate;\n      } else {\n        // Export to the global object.\n        root.regjsgen = regjsgen;\n      }\n    }).call(commonjsGlobal);\n  });\n  var parser = createCommonjsModule(function (module) {\n    // regjsparser\n    //\n    // ==================================================================\n    //\n    // See ECMA-262 Standard: 15.10.1\n    //\n    // NOTE: The ECMA-262 standard uses the term \"Assertion\" for /^/. Here the\n    //   term \"Anchor\" is used.\n    //\n    // Pattern ::\n    //      Disjunction\n    //\n    // Disjunction ::\n    //      Alternative\n    //      Alternative | Disjunction\n    //\n    // Alternative ::\n    //      [empty]\n    //      Alternative Term\n    //\n    // Term ::\n    //      Anchor\n    //      Atom\n    //      Atom Quantifier\n    //\n    // Anchor ::\n    //      ^\n    //      $\n    //      \\ b\n    //      \\ B\n    //      ( ? = Disjunction )\n    //      ( ? ! Disjunction )\n    //      ( ? < = Disjunction )\n    //      ( ? < ! Disjunction )\n    //\n    // Quantifier ::\n    //      QuantifierPrefix\n    //      QuantifierPrefix ?\n    //\n    // QuantifierPrefix ::\n    //      *\n    //      +\n    //      ?\n    //      { DecimalDigits }\n    //      { DecimalDigits , }\n    //      { DecimalDigits , DecimalDigits }\n    //\n    // Atom ::\n    //      PatternCharacter\n    //      .\n    //      \\ AtomEscape\n    //      CharacterClass\n    //      ( GroupSpecifier Disjunction )\n    //      ( ? : Disjunction )\n    //\n    // PatternCharacter ::\n    //      SourceCharacter but not any of: ^ $ \\ . * + ? ( ) [ ] { } |\n    //\n    // AtomEscape ::\n    //      DecimalEscape\n    //      CharacterEscape\n    //      CharacterClassEscape\n    //      k GroupName\n    //\n    // CharacterEscape[U] ::\n    //      ControlEscape\n    //      c ControlLetter\n    //      HexEscapeSequence\n    //      RegExpUnicodeEscapeSequence[?U] (ES6)\n    //      IdentityEscape[?U]\n    //\n    // ControlEscape ::\n    //      one of f n r t v\n    // ControlLetter ::\n    //      one of\n    //          a b c d e f g h i j k l m n o p q r s t u v w x y z\n    //          A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n    //\n    // IdentityEscape ::\n    //      SourceCharacter but not c\n    //\n    // DecimalEscape ::\n    //      DecimalIntegerLiteral [lookahead ∉ DecimalDigit]\n    //\n    // CharacterClassEscape ::\n    //      one of d D s S w W\n    //\n    // CharacterClass ::\n    //      [ [lookahead ∉ {^}] ClassRanges ]\n    //      [ ^ ClassRanges ]\n    //\n    // ClassRanges ::\n    //      [empty]\n    //      NonemptyClassRanges\n    //\n    // NonemptyClassRanges ::\n    //      ClassAtom\n    //      ClassAtom NonemptyClassRangesNoDash\n    //      ClassAtom - ClassAtom ClassRanges\n    //\n    // NonemptyClassRangesNoDash ::\n    //      ClassAtom\n    //      ClassAtomNoDash NonemptyClassRangesNoDash\n    //      ClassAtomNoDash - ClassAtom ClassRanges\n    //\n    // ClassAtom ::\n    //      -\n    //      ClassAtomNoDash\n    //\n    // ClassAtomNoDash ::\n    //      SourceCharacter but not one of \\ or ] or -\n    //      \\ ClassEscape\n    //\n    // ClassEscape ::\n    //      DecimalEscape\n    //      b\n    //      CharacterEscape\n    //      CharacterClassEscape\n    //\n    // GroupSpecifier ::\n    //      [empty]\n    //      ? GroupName\n    //\n    // GroupName ::\n    //      < RegExpIdentifierName >\n    //\n    // RegExpIdentifierName ::\n    //      RegExpIdentifierStart\n    //      RegExpIdentifierName RegExpIdentifierContinue\n    //\n    // RegExpIdentifierStart ::\n    //      UnicodeIDStart\n    //      $\n    //      _\n    //      \\ RegExpUnicodeEscapeSequence\n    //\n    // RegExpIdentifierContinue ::\n    //      UnicodeIDContinue\n    //      $\n    //      _\n    //      \\ RegExpUnicodeEscapeSequence\n    //      <ZWNJ>\n    //      <ZWJ>\n    (function () {\n      var fromCodePoint = String.fromCodePoint || function () {\n        // Implementation taken from\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint\n        var stringFromCharCode = String.fromCharCode;\n        var floor = Math.floor;\n        return function fromCodePoint() {\n          var MAX_SIZE = 0x4000;\n          var codeUnits = [];\n          var highSurrogate;\n          var lowSurrogate;\n          var index = -1;\n          var length = arguments.length;\n\n          if (!length) {\n            return '';\n          }\n\n          var result = '';\n\n          while (++index < length) {\n            var codePoint = Number(arguments[index]);\n\n            if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) != codePoint // not an integer\n            ) {\n                throw RangeError('Invalid code point: ' + codePoint);\n              }\n\n            if (codePoint <= 0xFFFF) {\n              // BMP code point\n              codeUnits.push(codePoint);\n            } else {\n              // Astral code point; split in surrogate halves\n              // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n              codePoint -= 0x10000;\n              highSurrogate = (codePoint >> 10) + 0xD800;\n              lowSurrogate = codePoint % 0x400 + 0xDC00;\n              codeUnits.push(highSurrogate, lowSurrogate);\n            }\n\n            if (index + 1 == length || codeUnits.length > MAX_SIZE) {\n              result += stringFromCharCode.apply(null, codeUnits);\n              codeUnits.length = 0;\n            }\n          }\n\n          return result;\n        };\n      }();\n\n      function parse(str, flags, features) {\n        if (!features) {\n          features = {};\n        }\n\n        function addRaw(node) {\n          node.raw = str.substring(node.range[0], node.range[1]);\n          return node;\n        }\n\n        function updateRawStart(node, start) {\n          node.range[0] = start;\n          return addRaw(node);\n        }\n\n        function createAnchor(kind, rawLength) {\n          return addRaw({\n            type: 'anchor',\n            kind: kind,\n            range: [pos - rawLength, pos]\n          });\n        }\n\n        function createValue(kind, codePoint, from, to) {\n          return addRaw({\n            type: 'value',\n            kind: kind,\n            codePoint: codePoint,\n            range: [from, to]\n          });\n        }\n\n        function createEscaped(kind, codePoint, value, fromOffset) {\n          fromOffset = fromOffset || 0;\n          return createValue(kind, codePoint, pos - (value.length + fromOffset), pos);\n        }\n\n        function createCharacter(matches) {\n          var _char = matches[0];\n\n          var first = _char.charCodeAt(0);\n\n          if (hasUnicodeFlag) {\n            var second;\n\n            if (_char.length === 1 && first >= 0xD800 && first <= 0xDBFF) {\n              second = lookahead().charCodeAt(0);\n\n              if (second >= 0xDC00 && second <= 0xDFFF) {\n                // Unicode surrogate pair\n                pos++;\n                return createValue('symbol', (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000, pos - 2, pos);\n              }\n            }\n          }\n\n          return createValue('symbol', first, pos - 1, pos);\n        }\n\n        function createDisjunction(alternatives, from, to) {\n          return addRaw({\n            type: 'disjunction',\n            body: alternatives,\n            range: [from, to]\n          });\n        }\n\n        function createDot() {\n          return addRaw({\n            type: 'dot',\n            range: [pos - 1, pos]\n          });\n        }\n\n        function createCharacterClassEscape(value) {\n          return addRaw({\n            type: 'characterClassEscape',\n            value: value,\n            range: [pos - 2, pos]\n          });\n        }\n\n        function createReference(matchIndex) {\n          return addRaw({\n            type: 'reference',\n            matchIndex: parseInt(matchIndex, 10),\n            range: [pos - 1 - matchIndex.length, pos]\n          });\n        }\n\n        function createNamedReference(name) {\n          return addRaw({\n            type: 'reference',\n            name: name,\n            range: [name.range[0] - 3, pos]\n          });\n        }\n\n        function createGroup(behavior, disjunction, from, to) {\n          return addRaw({\n            type: 'group',\n            behavior: behavior,\n            body: disjunction,\n            range: [from, to]\n          });\n        }\n\n        function createQuantifier(min, max, from, to) {\n          if (to == null) {\n            from = pos - 1;\n            to = pos;\n          }\n\n          return addRaw({\n            type: 'quantifier',\n            min: min,\n            max: max,\n            greedy: true,\n            body: null,\n            // set later on\n            range: [from, to]\n          });\n        }\n\n        function createAlternative(terms, from, to) {\n          return addRaw({\n            type: 'alternative',\n            body: terms,\n            range: [from, to]\n          });\n        }\n\n        function createCharacterClass(classRanges, negative, from, to) {\n          return addRaw({\n            type: 'characterClass',\n            body: classRanges,\n            negative: negative,\n            range: [from, to]\n          });\n        }\n\n        function createClassRange(min, max, from, to) {\n          // See 15.10.2.15:\n          if (min.codePoint > max.codePoint) {\n            bail('invalid range in character class', min.raw + '-' + max.raw, from, to);\n          }\n\n          return addRaw({\n            type: 'characterClassRange',\n            min: min,\n            max: max,\n            range: [from, to]\n          });\n        }\n\n        function flattenBody(body) {\n          if (body.type === 'alternative') {\n            return body.body;\n          } else {\n            return [body];\n          }\n        }\n\n        function incr(amount) {\n          amount = amount || 1;\n          var res = str.substring(pos, pos + amount);\n          pos += amount || 1;\n          return res;\n        }\n\n        function skip(value) {\n          if (!match(value)) {\n            bail('character', value);\n          }\n        }\n\n        function match(value) {\n          if (str.indexOf(value, pos) === pos) {\n            return incr(value.length);\n          }\n        }\n\n        function lookahead() {\n          return str[pos];\n        }\n\n        function current(value) {\n          return str.indexOf(value, pos) === pos;\n        }\n\n        function next(value) {\n          return str[pos + 1] === value;\n        }\n\n        function matchReg(regExp) {\n          var subStr = str.substring(pos);\n          var res = subStr.match(regExp);\n\n          if (res) {\n            res.range = [];\n            res.range[0] = pos;\n            incr(res[0].length);\n            res.range[1] = pos;\n          }\n\n          return res;\n        }\n\n        function parseDisjunction() {\n          // Disjunction ::\n          //      Alternative\n          //      Alternative | Disjunction\n          var res = [],\n              from = pos;\n          res.push(parseAlternative());\n\n          while (match('|')) {\n            res.push(parseAlternative());\n          }\n\n          if (res.length === 1) {\n            return res[0];\n          }\n\n          return createDisjunction(res, from, pos);\n        }\n\n        function parseAlternative() {\n          var res = [],\n              from = pos;\n          var term; // Alternative ::\n          //      [empty]\n          //      Alternative Term\n\n          while (term = parseTerm()) {\n            res.push(term);\n          }\n\n          if (res.length === 1) {\n            return res[0];\n          }\n\n          return createAlternative(res, from, pos);\n        }\n\n        function parseTerm() {\n          // Term ::\n          //      Anchor\n          //      Atom\n          //      Atom Quantifier\n          if (pos >= str.length || current('|') || current(')')) {\n            return null;\n            /* Means: The term is empty */\n          }\n\n          var anchor = parseAnchor();\n\n          if (anchor) {\n            return anchor;\n          }\n\n          var atom = parseAtom();\n\n          if (!atom) {\n            bail('Expected atom');\n          }\n\n          var quantifier = parseQuantifier() || false;\n\n          if (quantifier) {\n            quantifier.body = flattenBody(atom); // The quantifier contains the atom. Therefore, the beginning of the\n            // quantifier range is given by the beginning of the atom.\n\n            updateRawStart(quantifier, atom.range[0]);\n            return quantifier;\n          }\n\n          return atom;\n        }\n\n        function parseGroup(matchA, typeA, matchB, typeB) {\n          var type = null,\n              from = pos;\n\n          if (match(matchA)) {\n            type = typeA;\n          } else if (match(matchB)) {\n            type = typeB;\n          } else {\n            return false;\n          }\n\n          return finishGroup(type, from);\n        }\n\n        function finishGroup(type, from) {\n          var body = parseDisjunction();\n\n          if (!body) {\n            bail('Expected disjunction');\n          }\n\n          skip(')');\n          var group = createGroup(type, flattenBody(body), from, pos);\n\n          if (type == 'normal') {\n            // Keep track of the number of closed groups. This is required for\n            // parseDecimalEscape(). In case the string is parsed a second time the\n            // value already holds the total count and no incrementation is required.\n            if (firstIteration) {\n              closedCaptureCounter++;\n            }\n          }\n\n          return group;\n        }\n\n        function parseAnchor() {\n          if (match('^')) {\n            return createAnchor('start', 1\n            /* rawLength */\n            );\n          } else if (match('$')) {\n            return createAnchor('end', 1\n            /* rawLength */\n            );\n          } else if (match('\\\\b')) {\n            return createAnchor('boundary', 2\n            /* rawLength */\n            );\n          } else if (match('\\\\B')) {\n            return createAnchor('not-boundary', 2\n            /* rawLength */\n            );\n          } else {\n            return parseGroup('(?=', 'lookahead', '(?!', 'negativeLookahead');\n          }\n        }\n\n        function parseQuantifier() {\n          // Quantifier ::\n          //      QuantifierPrefix\n          //      QuantifierPrefix ?\n          //\n          // QuantifierPrefix ::\n          //      *\n          //      +\n          //      ?\n          //      { DecimalDigits }\n          //      { DecimalDigits , }\n          //      { DecimalDigits , DecimalDigits }\n          var res,\n              from = pos;\n          var quantifier;\n          var min, max;\n\n          if (match('*')) {\n            quantifier = createQuantifier(0);\n          } else if (match('+')) {\n            quantifier = createQuantifier(1);\n          } else if (match('?')) {\n            quantifier = createQuantifier(0, 1);\n          } else if (res = matchReg(/^\\{([0-9]+)\\}/)) {\n            min = parseInt(res[1], 10);\n            quantifier = createQuantifier(min, min, res.range[0], res.range[1]);\n          } else if (res = matchReg(/^\\{([0-9]+),\\}/)) {\n            min = parseInt(res[1], 10);\n            quantifier = createQuantifier(min, undefined, res.range[0], res.range[1]);\n          } else if (res = matchReg(/^\\{([0-9]+),([0-9]+)\\}/)) {\n            min = parseInt(res[1], 10);\n            max = parseInt(res[2], 10);\n\n            if (min > max) {\n              bail('numbers out of order in {} quantifier', '', from, pos);\n            }\n\n            quantifier = createQuantifier(min, max, res.range[0], res.range[1]);\n          }\n\n          if (quantifier) {\n            if (match('?')) {\n              quantifier.greedy = false;\n              quantifier.range[1] += 1;\n            }\n          }\n\n          return quantifier;\n        }\n\n        function parseAtom() {\n          // Atom ::\n          //      PatternCharacter\n          //      .\n          //      \\ AtomEscape\n          //      CharacterClass\n          //      ( GroupSpecifier Disjunction )\n          //      ( ? : Disjunction )\n          var res; // jviereck: allow ']', '}' here as well to be compatible with browser's\n          //   implementations: ']'.match(/]/);\n          // if (res = matchReg(/^[^^$\\\\.*+?()[\\]{}|]/)) {\n\n          if (res = matchReg(/^[^^$\\\\.*+?(){[|]/)) {\n            //      PatternCharacter\n            return createCharacter(res);\n          } else if (match('.')) {\n            //      .\n            return createDot();\n          } else if (match('\\\\')) {\n            //      \\ AtomEscape\n            res = parseAtomEscape();\n\n            if (!res) {\n              if (!hasUnicodeFlag && lookahead() == 'c') {\n                // B.1.4 ExtendedAtom\n                // \\[lookahead = c]\n                return createValue('symbol', 92, pos - 1, pos);\n              }\n\n              bail('atomEscape');\n            }\n\n            return res;\n          } else if (res = parseCharacterClass()) {\n            return res;\n          } else if (features.lookbehind && (res = parseGroup('(?<=', 'lookbehind', '(?<!', 'negativeLookbehind'))) {\n            return res;\n          } else if (features.namedGroups && match(\"(?<\")) {\n            var name = parseIdentifier();\n            skip(\">\");\n            var group = finishGroup(\"normal\", name.range[0] - 3);\n            group.name = name;\n            return group;\n          } else {\n            //      ( Disjunction )\n            //      ( ? : Disjunction )\n            return parseGroup('(?:', 'ignore', '(', 'normal');\n          }\n        }\n\n        function parseUnicodeSurrogatePairEscape(firstEscape) {\n          if (hasUnicodeFlag) {\n            var first, second;\n\n            if (firstEscape.kind == 'unicodeEscape' && (first = firstEscape.codePoint) >= 0xD800 && first <= 0xDBFF && current('\\\\') && next('u')) {\n              var prevPos = pos;\n              pos++;\n              var secondEscape = parseClassEscape();\n\n              if (secondEscape.kind == 'unicodeEscape' && (second = secondEscape.codePoint) >= 0xDC00 && second <= 0xDFFF) {\n                // Unicode surrogate pair\n                firstEscape.range[1] = secondEscape.range[1];\n                firstEscape.codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n                firstEscape.type = 'value';\n                firstEscape.kind = 'unicodeCodePointEscape';\n                addRaw(firstEscape);\n              } else {\n                pos = prevPos;\n              }\n            }\n          }\n\n          return firstEscape;\n        }\n\n        function parseClassEscape() {\n          return parseAtomEscape(true);\n        }\n\n        function parseAtomEscape(insideCharacterClass) {\n          // AtomEscape ::\n          //      DecimalEscape\n          //      CharacterEscape\n          //      CharacterClassEscape\n          //      k GroupName\n          var res,\n              from = pos;\n          res = parseDecimalEscape() || parseNamedReference();\n\n          if (res) {\n            return res;\n          } // For ClassEscape\n\n\n          if (insideCharacterClass) {\n            if (match('b')) {\n              // 15.10.2.19\n              // The production ClassEscape :: b evaluates by returning the\n              // CharSet containing the one character <BS> (Unicode value 0008).\n              return createEscaped('singleEscape', 0x0008, '\\\\b');\n            } else if (match('B')) {\n              bail('\\\\B not possible inside of CharacterClass', '', from);\n            } else if (!hasUnicodeFlag && (res = matchReg(/^c([0-9])/))) {\n              // B.1.4\n              // c ClassControlLetter\n              return createEscaped('controlLetter', res[1] + 16, res[1], 2);\n            }\n          }\n\n          res = parseCharacterEscape();\n          return res;\n        }\n\n        function parseDecimalEscape() {\n          // DecimalEscape ::\n          //      DecimalIntegerLiteral [lookahead ∉ DecimalDigit]\n          //      CharacterClassEscape :: one of d D s S w W\n          var res, match;\n\n          if (res = matchReg(/^(?!0)\\d+/)) {\n            match = res[0];\n            var refIdx = parseInt(res[0], 10);\n\n            if (refIdx <= closedCaptureCounter) {\n              // If the number is smaller than the normal-groups found so\n              // far, then it is a reference...\n              return createReference(res[0]);\n            } else {\n              // ... otherwise it needs to be interpreted as a octal (if the\n              // number is in an octal format). If it is NOT octal format,\n              // then the slash is ignored and the number is matched later\n              // as normal characters.\n              // Recall the negative decision to decide if the input must be parsed\n              // a second time with the total normal-groups.\n              backrefDenied.push(refIdx); // Reset the position again, as maybe only parts of the previous\n              // matched numbers are actual octal numbers. E.g. in '019' only\n              // the '01' should be matched.\n\n              incr(-res[0].length);\n\n              if (res = matchReg(/^[0-7]{1,3}/)) {\n                return createEscaped('octal', parseInt(res[0], 8), res[0], 1);\n              } else {\n                // If we end up here, we have a case like /\\91/. Then the\n                // first slash is to be ignored and the 9 & 1 to be treated\n                // like ordinary characters. Create a character for the\n                // first number only here - other number-characters\n                // (if available) will be matched later.\n                res = createCharacter(matchReg(/^[89]/));\n                return updateRawStart(res, res.range[0] - 1);\n              }\n            }\n          } // Only allow octal numbers in the following. All matched numbers start\n          // with a zero (if the do not, the previous if-branch is executed).\n          // If the number is not octal format and starts with zero (e.g. `091`)\n          // then only the zeros `0` is treated here and the `91` are ordinary\n          // characters.\n          // Example:\n          //   /\\091/.exec('\\091')[0].length === 3\n          else if (res = matchReg(/^[0-7]{1,3}/)) {\n              match = res[0];\n\n              if (/^0{1,3}$/.test(match)) {\n                // If they are all zeros, then only take the first one.\n                return createEscaped('null', 0x0000, '0', match.length + 1);\n              } else {\n                return createEscaped('octal', parseInt(match, 8), match, 1);\n              }\n            } else if (res = matchReg(/^[dDsSwW]/)) {\n              return createCharacterClassEscape(res[0]);\n            }\n\n          return false;\n        }\n\n        function parseNamedReference() {\n          if (features.namedGroups && matchReg(/^k<(?=.*?>)/)) {\n            var name = parseIdentifier();\n            skip('>');\n            return createNamedReference(name);\n          }\n        }\n\n        function parseRegExpUnicodeEscapeSequence() {\n          var res;\n\n          if (res = matchReg(/^u([0-9a-fA-F]{4})/)) {\n            // UnicodeEscapeSequence\n            return parseUnicodeSurrogatePairEscape(createEscaped('unicodeEscape', parseInt(res[1], 16), res[1], 2));\n          } else if (hasUnicodeFlag && (res = matchReg(/^u\\{([0-9a-fA-F]+)\\}/))) {\n            // RegExpUnicodeEscapeSequence (ES6 Unicode code point escape)\n            return createEscaped('unicodeCodePointEscape', parseInt(res[1], 16), res[1], 4);\n          }\n        }\n\n        function parseCharacterEscape() {\n          // CharacterEscape ::\n          //      ControlEscape\n          //      c ControlLetter\n          //      HexEscapeSequence\n          //      UnicodeEscapeSequence\n          //      IdentityEscape\n          var res;\n          var from = pos;\n\n          if (res = matchReg(/^[fnrtv]/)) {\n            // ControlEscape\n            var codePoint = 0;\n\n            switch (res[0]) {\n              case 't':\n                codePoint = 0x009;\n                break;\n\n              case 'n':\n                codePoint = 0x00A;\n                break;\n\n              case 'v':\n                codePoint = 0x00B;\n                break;\n\n              case 'f':\n                codePoint = 0x00C;\n                break;\n\n              case 'r':\n                codePoint = 0x00D;\n                break;\n            }\n\n            return createEscaped('singleEscape', codePoint, '\\\\' + res[0]);\n          } else if (res = matchReg(/^c([a-zA-Z])/)) {\n            // c ControlLetter\n            return createEscaped('controlLetter', res[1].charCodeAt(0) % 32, res[1], 2);\n          } else if (res = matchReg(/^x([0-9a-fA-F]{2})/)) {\n            // HexEscapeSequence\n            return createEscaped('hexadecimalEscape', parseInt(res[1], 16), res[1], 2);\n          } else if (res = parseRegExpUnicodeEscapeSequence()) {\n            if (!res || res.codePoint > 0x10FFFF) {\n              bail('Invalid escape sequence', null, from, pos);\n            }\n\n            return res;\n          } else if (features.unicodePropertyEscape && hasUnicodeFlag && (res = matchReg(/^([pP])\\{([^\\}]+)\\}/))) {\n            // https://github.com/jviereck/regjsparser/issues/77\n            return addRaw({\n              type: 'unicodePropertyEscape',\n              negative: res[1] === 'P',\n              value: res[2],\n              range: [res.range[0] - 1, res.range[1]],\n              raw: res[0]\n            });\n          } else {\n            // IdentityEscape\n            return parseIdentityEscape();\n          }\n        }\n\n        function parseIdentifierAtom(check) {\n          var ch = lookahead();\n          var from = pos;\n\n          if (ch === '\\\\') {\n            incr();\n            var esc = parseRegExpUnicodeEscapeSequence();\n\n            if (!esc || !check(esc.codePoint)) {\n              bail('Invalid escape sequence', null, from, pos);\n            }\n\n            return fromCodePoint(esc.codePoint);\n          }\n\n          var code = ch.charCodeAt(0);\n\n          if (code >= 0xD800 && code <= 0xDBFF) {\n            ch += str[pos + 1];\n            var second = ch.charCodeAt(1);\n\n            if (second >= 0xDC00 && second <= 0xDFFF) {\n              // Unicode surrogate pair\n              code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n            }\n          }\n\n          if (!check(code)) return;\n          incr();\n          if (code > 0xFFFF) incr();\n          return ch;\n        }\n\n        function parseIdentifier() {\n          // RegExpIdentifierName ::\n          //      RegExpIdentifierStart\n          //      RegExpIdentifierName RegExpIdentifierContinue\n          //\n          // RegExpIdentifierStart ::\n          //      UnicodeIDStart\n          //      $\n          //      _\n          //      \\ RegExpUnicodeEscapeSequence\n          //\n          // RegExpIdentifierContinue ::\n          //      UnicodeIDContinue\n          //      $\n          //      _\n          //      \\ RegExpUnicodeEscapeSequence\n          //      <ZWNJ>\n          //      <ZWJ>\n          var start = pos;\n          var res = parseIdentifierAtom(isIdentifierStart);\n\n          if (!res) {\n            bail('Invalid identifier');\n          }\n\n          var ch;\n\n          while (ch = parseIdentifierAtom(isIdentifierPart)) {\n            res += ch;\n          }\n\n          return addRaw({\n            type: 'identifier',\n            value: res,\n            range: [start, pos]\n          });\n        }\n\n        function isIdentifierStart(ch) {\n          // Generated by `tools/generate-identifier-regex.js`.\n          var NonAsciiIdentifierStart = /[\\$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7B9\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFF1]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/;\n          return ch === 36 || ch === 95 || // $ (dollar) and _ (underscore)\n          ch >= 65 && ch <= 90 || // A..Z\n          ch >= 97 && ch <= 122 || // a..z\n          ch >= 0x80 && NonAsciiIdentifierStart.test(fromCodePoint(ch));\n        } // Taken from the Esprima parser.\n\n\n        function isIdentifierPart(ch) {\n          // Generated by `tools/generate-identifier-regex.js`.\n          var NonAsciiIdentifierPartOnly = /[0-9_\\xB7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C04\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u200C\\u200D\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA8FF-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD801[\\uDCA0-\\uDCA9]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD803[\\uDD24-\\uDD27\\uDD30-\\uDD39\\uDF46-\\uDF50]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDCF0-\\uDCF9\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD36-\\uDD3F\\uDD45\\uDD46\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDDC9-\\uDDCC\\uDDD0-\\uDDD9\\uDE2C-\\uDE37\\uDE3E\\uDEDF-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF3B\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC35-\\uDC46\\uDC50-\\uDC59\\uDC5E\\uDCB0-\\uDCC3\\uDCD0-\\uDCD9\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDDDC\\uDDDD\\uDE30-\\uDE40\\uDE50-\\uDE59\\uDEAB-\\uDEB7\\uDEC0-\\uDEC9\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDC2C-\\uDC3A\\uDCE0-\\uDCE9\\uDE01-\\uDE0A\\uDE33-\\uDE39\\uDE3B-\\uDE3E\\uDE47\\uDE51-\\uDE5B\\uDE8A-\\uDE99]|\\uD807[\\uDC2F-\\uDC36\\uDC38-\\uDC3F\\uDC50-\\uDC59\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD31-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD45\\uDD47\\uDD50-\\uDD59\\uDD8A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD97\\uDDA0-\\uDDA9\\uDEF3-\\uDEF6]|\\uD81A[\\uDE60-\\uDE69\\uDEF0-\\uDEF4\\uDF30-\\uDF36\\uDF50-\\uDF59]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDCD0-\\uDCD6\\uDD44-\\uDD4A\\uDD50-\\uDD59]|\\uDB40[\\uDD00-\\uDDEF]/;\n          return isIdentifierStart(ch) || ch >= 48 && ch <= 57 || // 0..9\n          ch >= 0x80 && NonAsciiIdentifierPartOnly.test(fromCodePoint(ch));\n        }\n\n        function parseIdentityEscape() {\n          // IdentityEscape ::\n          //      SourceCharacter but not c\n          var tmp;\n\n          if (lookahead() !== 'c') {\n            tmp = incr();\n            return createEscaped('identifier', tmp.charCodeAt(0), tmp, 1);\n          }\n\n          return null;\n        }\n\n        function parseCharacterClass() {\n          // CharacterClass ::\n          //      [ [lookahead ∉ {^}] ClassRanges ]\n          //      [ ^ ClassRanges ]\n          var res,\n              from = pos;\n\n          if (res = matchReg(/^\\[\\^/)) {\n            res = parseClassRanges();\n            skip(']');\n            return createCharacterClass(res, true, from, pos);\n          } else if (match('[')) {\n            res = parseClassRanges();\n            skip(']');\n            return createCharacterClass(res, false, from, pos);\n          }\n\n          return null;\n        }\n\n        function parseClassRanges() {\n          // ClassRanges ::\n          //      [empty]\n          //      NonemptyClassRanges\n          var res;\n\n          if (current(']')) {\n            // Empty array means nothing insinde of the ClassRange.\n            return [];\n          } else {\n            res = parseNonemptyClassRanges();\n\n            if (!res) {\n              bail('nonEmptyClassRanges');\n            }\n\n            return res;\n          }\n        }\n\n        function parseHelperClassRanges(atom) {\n          var from, to, res;\n\n          if (current('-') && !next(']')) {\n            // ClassAtom - ClassAtom ClassRanges\n            skip('-');\n            res = parseClassAtom();\n\n            if (!res) {\n              bail('classAtom');\n            }\n\n            to = pos;\n            var classRanges = parseClassRanges();\n\n            if (!classRanges) {\n              bail('classRanges');\n            }\n\n            from = atom.range[0];\n\n            if (classRanges.type === 'empty') {\n              return [createClassRange(atom, res, from, to)];\n            }\n\n            return [createClassRange(atom, res, from, to)].concat(classRanges);\n          }\n\n          res = parseNonemptyClassRangesNoDash();\n\n          if (!res) {\n            bail('nonEmptyClassRangesNoDash');\n          }\n\n          return [atom].concat(res);\n        }\n\n        function parseNonemptyClassRanges() {\n          // NonemptyClassRanges ::\n          //      ClassAtom\n          //      ClassAtom NonemptyClassRangesNoDash\n          //      ClassAtom - ClassAtom ClassRanges\n          var atom = parseClassAtom();\n\n          if (!atom) {\n            bail('classAtom');\n          }\n\n          if (current(']')) {\n            // ClassAtom\n            return [atom];\n          } // ClassAtom NonemptyClassRangesNoDash\n          // ClassAtom - ClassAtom ClassRanges\n\n\n          return parseHelperClassRanges(atom);\n        }\n\n        function parseNonemptyClassRangesNoDash() {\n          // NonemptyClassRangesNoDash ::\n          //      ClassAtom\n          //      ClassAtomNoDash NonemptyClassRangesNoDash\n          //      ClassAtomNoDash - ClassAtom ClassRanges\n          var res = parseClassAtom();\n\n          if (!res) {\n            bail('classAtom');\n          }\n\n          if (current(']')) {\n            //      ClassAtom\n            return res;\n          } // ClassAtomNoDash NonemptyClassRangesNoDash\n          // ClassAtomNoDash - ClassAtom ClassRanges\n\n\n          return parseHelperClassRanges(res);\n        }\n\n        function parseClassAtom() {\n          // ClassAtom ::\n          //      -\n          //      ClassAtomNoDash\n          if (match('-')) {\n            return createCharacter('-');\n          } else {\n            return parseClassAtomNoDash();\n          }\n        }\n\n        function parseClassAtomNoDash() {\n          // ClassAtomNoDash ::\n          //      SourceCharacter but not one of \\ or ] or -\n          //      \\ ClassEscape\n          var res;\n\n          if (res = matchReg(/^[^\\\\\\]-]/)) {\n            return createCharacter(res[0]);\n          } else if (match('\\\\')) {\n            res = parseClassEscape();\n\n            if (!res) {\n              bail('classEscape');\n            }\n\n            return parseUnicodeSurrogatePairEscape(res);\n          }\n        }\n\n        function bail(message, details, from, to) {\n          from = from == null ? pos : from;\n          to = to == null ? from : to;\n          var contextStart = Math.max(0, from - 10);\n          var contextEnd = Math.min(to + 10, str.length); // Output a bit of context and a line pointing to where our error is.\n          //\n          // We are assuming that there are no actual newlines in the content as this is a regular expression.\n\n          var context = '    ' + str.substring(contextStart, contextEnd);\n          var pointer = '    ' + new Array(from - contextStart + 1).join(' ') + '^';\n          throw SyntaxError(message + ' at position ' + from + (details ? ': ' + details : '') + '\\n' + context + '\\n' + pointer);\n        }\n\n        var backrefDenied = [];\n        var closedCaptureCounter = 0;\n        var firstIteration = true;\n        var hasUnicodeFlag = (flags || \"\").indexOf(\"u\") !== -1;\n        var pos = 0; // Convert the input to a string and treat the empty string special.\n\n        str = String(str);\n\n        if (str === '') {\n          str = '(?:)';\n        }\n\n        var result = parseDisjunction();\n\n        if (result.range[1] !== str.length) {\n          bail('Could not parse entire input - got stuck', '', result.range[1]);\n        } // The spec requires to interpret the `\\2` in `/\\2()()/` as backreference.\n        // As the parser collects the number of capture groups as the string is\n        // parsed it is impossible to make these decisions at the point when the\n        // `\\2` is handled. In case the local decision turns out to be wrong after\n        // the parsing has finished, the input string is parsed a second time with\n        // the total number of capture groups set.\n        //\n        // SEE: https://github.com/jviereck/regjsparser/issues/70\n\n\n        for (var i = 0; i < backrefDenied.length; i++) {\n          if (backrefDenied[i] <= closedCaptureCounter) {\n            // Parse the input a second time.\n            pos = 0;\n            firstIteration = false;\n            return parseDisjunction();\n          }\n        }\n\n        return result;\n      }\n\n      var regjsparser = {\n        parse: parse\n      };\n\n      if (module.exports) {\n        module.exports = regjsparser;\n      } else {\n        window.regjsparser = regjsparser;\n      }\n    })();\n  });\n  var regenerate = createCommonjsModule(function (module, exports) {\n    (function (root) {\n      // Detect free variables `exports`.\n      var freeExports = exports; // Detect free variable `module`.\n\n      var freeModule = module && module.exports == freeExports && module; // Detect free variable `global`, from Node.js/io.js or Browserified code,\n      // and use it as `root`.\n\n      var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal;\n\n      if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n        root = freeGlobal;\n      }\n      /*--------------------------------------------------------------------------*/\n\n\n      var ERRORS = {\n        'rangeOrder': \"A range\\u2019s `stop` value must be greater than or equal \" + 'to the `start` value.',\n        'codePointRange': 'Invalid code point value. Code points range from ' + 'U+000000 to U+10FFFF.'\n      }; // https://mathiasbynens.be/notes/javascript-encoding#surrogate-pairs\n\n      var HIGH_SURROGATE_MIN = 0xD800;\n      var HIGH_SURROGATE_MAX = 0xDBFF;\n      var LOW_SURROGATE_MIN = 0xDC00;\n      var LOW_SURROGATE_MAX = 0xDFFF; // In Regenerate output, `\\0` is never preceded by `\\` because we sort by\n      // code point value, so let’s keep this regular expression simple.\n\n      var regexNull = /\\\\x00([^0123456789]|$)/g;\n      var object = {};\n      var hasOwnProperty = object.hasOwnProperty;\n\n      var extend = function extend(destination, source) {\n        var key;\n\n        for (key in source) {\n          if (hasOwnProperty.call(source, key)) {\n            destination[key] = source[key];\n          }\n        }\n\n        return destination;\n      };\n\n      var forEach = function forEach(array, callback) {\n        var index = -1;\n        var length = array.length;\n\n        while (++index < length) {\n          callback(array[index], index);\n        }\n      };\n\n      var toString = object.toString;\n\n      var isArray = function isArray(value) {\n        return toString.call(value) == '[object Array]';\n      };\n\n      var isNumber = function isNumber(value) {\n        return typeof value == 'number' || toString.call(value) == '[object Number]';\n      }; // This assumes that `number` is a positive integer that `toString()`s nicely\n      // (which is the case for all code point values).\n\n\n      var zeroes = '0000';\n\n      var pad = function pad(number, totalCharacters) {\n        var string = String(number);\n        return string.length < totalCharacters ? (zeroes + string).slice(-totalCharacters) : string;\n      };\n\n      var hex = function hex(number) {\n        return Number(number).toString(16).toUpperCase();\n      };\n\n      var slice = [].slice;\n      /*--------------------------------------------------------------------------*/\n\n      var dataFromCodePoints = function dataFromCodePoints(codePoints) {\n        var index = -1;\n        var length = codePoints.length;\n        var max = length - 1;\n        var result = [];\n        var isStart = true;\n        var tmp;\n        var previous = 0;\n\n        while (++index < length) {\n          tmp = codePoints[index];\n\n          if (isStart) {\n            result.push(tmp);\n            previous = tmp;\n            isStart = false;\n          } else {\n            if (tmp == previous + 1) {\n              if (index != max) {\n                previous = tmp;\n                continue;\n              } else {\n                isStart = true;\n                result.push(tmp + 1);\n              }\n            } else {\n              // End the previous range and start a new one.\n              result.push(previous + 1, tmp);\n              previous = tmp;\n            }\n          }\n        }\n\n        if (!isStart) {\n          result.push(tmp + 1);\n        }\n\n        return result;\n      };\n\n      var dataRemove = function dataRemove(data, codePoint) {\n        // Iterate over the data per `(start, end)` pair.\n        var index = 0;\n        var start;\n        var end;\n        var length = data.length;\n\n        while (index < length) {\n          start = data[index];\n          end = data[index + 1];\n\n          if (codePoint >= start && codePoint < end) {\n            // Modify this pair.\n            if (codePoint == start) {\n              if (end == start + 1) {\n                // Just remove `start` and `end`.\n                data.splice(index, 2);\n                return data;\n              } else {\n                // Just replace `start` with a new value.\n                data[index] = codePoint + 1;\n                return data;\n              }\n            } else if (codePoint == end - 1) {\n              // Just replace `end` with a new value.\n              data[index + 1] = codePoint;\n              return data;\n            } else {\n              // Replace `[start, end]` with `[startA, endA, startB, endB]`.\n              data.splice(index, 2, start, codePoint, codePoint + 1, end);\n              return data;\n            }\n          }\n\n          index += 2;\n        }\n\n        return data;\n      };\n\n      var dataRemoveRange = function dataRemoveRange(data, rangeStart, rangeEnd) {\n        if (rangeEnd < rangeStart) {\n          throw Error(ERRORS.rangeOrder);\n        } // Iterate over the data per `(start, end)` pair.\n\n\n        var index = 0;\n        var start;\n        var end;\n\n        while (index < data.length) {\n          start = data[index];\n          end = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n          // Exit as soon as no more matching pairs can be found.\n\n          if (start > rangeEnd) {\n            return data;\n          } // Check if this range pair is equal to, or forms a subset of, the range\n          // to be removed.\n          // E.g. we have `[0, 11, 40, 51]` and want to remove 0-10 → `[40, 51]`.\n          // E.g. we have `[40, 51]` and want to remove 0-100 → `[]`.\n\n\n          if (rangeStart <= start && rangeEnd >= end) {\n            // Remove this pair.\n            data.splice(index, 2);\n            continue;\n          } // Check if both `rangeStart` and `rangeEnd` are within the bounds of\n          // this pair.\n          // E.g. we have `[0, 11]` and want to remove 4-6 → `[0, 4, 7, 11]`.\n\n\n          if (rangeStart >= start && rangeEnd < end) {\n            if (rangeStart == start) {\n              // Replace `[start, end]` with `[startB, endB]`.\n              data[index] = rangeEnd + 1;\n              data[index + 1] = end + 1;\n              return data;\n            } // Replace `[start, end]` with `[startA, endA, startB, endB]`.\n\n\n            data.splice(index, 2, start, rangeStart, rangeEnd + 1, end + 1);\n            return data;\n          } // Check if only `rangeStart` is within the bounds of this pair.\n          // E.g. we have `[0, 11]` and want to remove 4-20 → `[0, 4]`.\n\n\n          if (rangeStart >= start && rangeStart <= end) {\n            // Replace `end` with `rangeStart`.\n            data[index + 1] = rangeStart; // Note: we cannot `return` just yet, in case any following pairs still\n            // contain matching code points.\n            // E.g. we have `[0, 11, 14, 31]` and want to remove 4-20\n            // → `[0, 4, 21, 31]`.\n          } // Check if only `rangeEnd` is within the bounds of this pair.\n          // E.g. we have `[14, 31]` and want to remove 4-20 → `[21, 31]`.\n          else if (rangeEnd >= start && rangeEnd <= end) {\n              // Just replace `start`.\n              data[index] = rangeEnd + 1;\n              return data;\n            }\n\n          index += 2;\n        }\n\n        return data;\n      };\n\n      var dataAdd = function dataAdd(data, codePoint) {\n        // Iterate over the data per `(start, end)` pair.\n        var index = 0;\n        var start;\n        var end;\n        var lastIndex = null;\n        var length = data.length;\n\n        if (codePoint < 0x0 || codePoint > 0x10FFFF) {\n          throw RangeError(ERRORS.codePointRange);\n        }\n\n        while (index < length) {\n          start = data[index];\n          end = data[index + 1]; // Check if the code point is already in the set.\n\n          if (codePoint >= start && codePoint < end) {\n            return data;\n          }\n\n          if (codePoint == start - 1) {\n            // Just replace `start` with a new value.\n            data[index] = codePoint;\n            return data;\n          } // At this point, if `start` is `greater` than `codePoint`, insert a new\n          // `[start, end]` pair before the current pair, or after the current pair\n          // if there is a known `lastIndex`.\n\n\n          if (start > codePoint) {\n            data.splice(lastIndex != null ? lastIndex + 2 : 0, 0, codePoint, codePoint + 1);\n            return data;\n          }\n\n          if (codePoint == end) {\n            // Check if adding this code point causes two separate ranges to become\n            // a single range, e.g. `dataAdd([0, 4, 5, 10], 4)` → `[0, 10]`.\n            if (codePoint + 1 == data[index + 2]) {\n              data.splice(index, 4, start, data[index + 3]);\n              return data;\n            } // Else, just replace `end` with a new value.\n\n\n            data[index + 1] = codePoint + 1;\n            return data;\n          }\n\n          lastIndex = index;\n          index += 2;\n        } // The loop has finished; add the new pair to the end of the data set.\n\n\n        data.push(codePoint, codePoint + 1);\n        return data;\n      };\n\n      var dataAddData = function dataAddData(dataA, dataB) {\n        // Iterate over the data per `(start, end)` pair.\n        var index = 0;\n        var start;\n        var end;\n        var data = dataA.slice();\n        var length = dataB.length;\n\n        while (index < length) {\n          start = dataB[index];\n          end = dataB[index + 1] - 1;\n\n          if (start == end) {\n            data = dataAdd(data, start);\n          } else {\n            data = dataAddRange(data, start, end);\n          }\n\n          index += 2;\n        }\n\n        return data;\n      };\n\n      var dataRemoveData = function dataRemoveData(dataA, dataB) {\n        // Iterate over the data per `(start, end)` pair.\n        var index = 0;\n        var start;\n        var end;\n        var data = dataA.slice();\n        var length = dataB.length;\n\n        while (index < length) {\n          start = dataB[index];\n          end = dataB[index + 1] - 1;\n\n          if (start == end) {\n            data = dataRemove(data, start);\n          } else {\n            data = dataRemoveRange(data, start, end);\n          }\n\n          index += 2;\n        }\n\n        return data;\n      };\n\n      var dataAddRange = function dataAddRange(data, rangeStart, rangeEnd) {\n        if (rangeEnd < rangeStart) {\n          throw Error(ERRORS.rangeOrder);\n        }\n\n        if (rangeStart < 0x0 || rangeStart > 0x10FFFF || rangeEnd < 0x0 || rangeEnd > 0x10FFFF) {\n          throw RangeError(ERRORS.codePointRange);\n        } // Iterate over the data per `(start, end)` pair.\n\n\n        var index = 0;\n        var start;\n        var end;\n        var added = false;\n        var length = data.length;\n\n        while (index < length) {\n          start = data[index];\n          end = data[index + 1];\n\n          if (added) {\n            // The range has already been added to the set; at this point, we just\n            // need to get rid of the following ranges in case they overlap.\n            // Check if this range can be combined with the previous range.\n            if (start == rangeEnd + 1) {\n              data.splice(index - 1, 2);\n              return data;\n            } // Exit as soon as no more possibly overlapping pairs can be found.\n\n\n            if (start > rangeEnd) {\n              return data;\n            } // E.g. `[0, 11, 12, 16]` and we’ve added 5-15, so we now have\n            // `[0, 16, 12, 16]`. Remove the `12,16` part, as it lies within the\n            // `0,16` range that was previously added.\n\n\n            if (start >= rangeStart && start <= rangeEnd) {\n              // `start` lies within the range that was previously added.\n              if (end > rangeStart && end - 1 <= rangeEnd) {\n                // `end` lies within the range that was previously added as well,\n                // so remove this pair.\n                data.splice(index, 2);\n                index -= 2; // Note: we cannot `return` just yet, as there may still be other\n                // overlapping pairs.\n              } else {\n                // `start` lies within the range that was previously added, but\n                // `end` doesn’t. E.g. `[0, 11, 12, 31]` and we’ve added 5-15, so\n                // now we have `[0, 16, 12, 31]`. This must be written as `[0, 31]`.\n                // Remove the previously added `end` and the current `start`.\n                data.splice(index - 1, 2);\n                index -= 2;\n              } // Note: we cannot return yet.\n\n            }\n          } else if (start == rangeEnd + 1) {\n            data[index] = rangeStart;\n            return data;\n          } // Check if a new pair must be inserted *before* the current one.\n          else if (start > rangeEnd) {\n              data.splice(index, 0, rangeStart, rangeEnd + 1);\n              return data;\n            } else if (rangeStart >= start && rangeStart < end && rangeEnd + 1 <= end) {\n              // The new range lies entirely within an existing range pair. No action\n              // needed.\n              return data;\n            } else if ( // E.g. `[0, 11]` and you add 5-15 → `[0, 16]`.\n            rangeStart >= start && rangeStart < end || // E.g. `[0, 3]` and you add 3-6 → `[0, 7]`.\n            end == rangeStart) {\n              // Replace `end` with the new value.\n              data[index + 1] = rangeEnd + 1; // Make sure the next range pair doesn’t overlap, e.g. `[0, 11, 12, 14]`\n              // and you add 5-15 → `[0, 16]`, i.e. remove the `12,14` part.\n\n              added = true; // Note: we cannot `return` just yet.\n            } else if (rangeStart <= start && rangeEnd + 1 >= end) {\n              // The new range is a superset of the old range.\n              data[index] = rangeStart;\n              data[index + 1] = rangeEnd + 1;\n              added = true;\n            }\n\n          index += 2;\n        } // The loop has finished without doing anything; add the new pair to the end\n        // of the data set.\n\n\n        if (!added) {\n          data.push(rangeStart, rangeEnd + 1);\n        }\n\n        return data;\n      };\n\n      var dataContains = function dataContains(data, codePoint) {\n        var index = 0;\n        var length = data.length; // Exit early if `codePoint` is not within `data`’s overall range.\n\n        var start = data[index];\n        var end = data[length - 1];\n\n        if (length >= 2) {\n          if (codePoint < start || codePoint > end) {\n            return false;\n          }\n        } // Iterate over the data per `(start, end)` pair.\n\n\n        while (index < length) {\n          start = data[index];\n          end = data[index + 1];\n\n          if (codePoint >= start && codePoint < end) {\n            return true;\n          }\n\n          index += 2;\n        }\n\n        return false;\n      };\n\n      var dataIntersection = function dataIntersection(data, codePoints) {\n        var index = 0;\n        var length = codePoints.length;\n        var codePoint;\n        var result = [];\n\n        while (index < length) {\n          codePoint = codePoints[index];\n\n          if (dataContains(data, codePoint)) {\n            result.push(codePoint);\n          }\n\n          ++index;\n        }\n\n        return dataFromCodePoints(result);\n      };\n\n      var dataIsEmpty = function dataIsEmpty(data) {\n        return !data.length;\n      };\n\n      var dataIsSingleton = function dataIsSingleton(data) {\n        // Check if the set only represents a single code point.\n        return data.length == 2 && data[0] + 1 == data[1];\n      };\n\n      var dataToArray = function dataToArray(data) {\n        // Iterate over the data per `(start, end)` pair.\n        var index = 0;\n        var start;\n        var end;\n        var result = [];\n        var length = data.length;\n\n        while (index < length) {\n          start = data[index];\n          end = data[index + 1];\n\n          while (start < end) {\n            result.push(start);\n            ++start;\n          }\n\n          index += 2;\n        }\n\n        return result;\n      };\n      /*--------------------------------------------------------------------------*/\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\n\n      var floor = Math.floor;\n\n      var highSurrogate = function highSurrogate(codePoint) {\n        return parseInt(floor((codePoint - 0x10000) / 0x400) + HIGH_SURROGATE_MIN, 10);\n      };\n\n      var lowSurrogate = function lowSurrogate(codePoint) {\n        return parseInt((codePoint - 0x10000) % 0x400 + LOW_SURROGATE_MIN, 10);\n      };\n\n      var stringFromCharCode = String.fromCharCode;\n\n      var codePointToString = function codePointToString(codePoint) {\n        var string; // https://mathiasbynens.be/notes/javascript-escapes#single\n        // Note: the `\\b` escape sequence for U+0008 BACKSPACE in strings has a\n        // different meaning in regular expressions (word boundary), so it cannot\n        // be used here.\n\n        if (codePoint == 0x09) {\n          string = '\\\\t';\n        } // Note: IE < 9 treats `'\\v'` as `'v'`, so avoid using it.\n        // else if (codePoint == 0x0B) {\n        // \tstring = '\\\\v';\n        // }\n        else if (codePoint == 0x0A) {\n            string = '\\\\n';\n          } else if (codePoint == 0x0C) {\n            string = '\\\\f';\n          } else if (codePoint == 0x0D) {\n            string = '\\\\r';\n          } else if (codePoint == 0x2D) {\n            // https://mathiasbynens.be/notes/javascript-escapes#hexadecimal\n            // Note: `-` (U+002D HYPHEN-MINUS) is escaped in this way rather\n            // than by backslash-escaping, in case the output is used outside\n            // of a character class in a `u` RegExp. /\\-/u throws, but\n            // /\\x2D/u is fine.\n            string = '\\\\x2D';\n          } else if (codePoint == 0x5C) {\n            string = '\\\\\\\\';\n          } else if (codePoint == 0x24 || codePoint >= 0x28 && codePoint <= 0x2B || codePoint == 0x2E || codePoint == 0x2F || codePoint == 0x3F || codePoint >= 0x5B && codePoint <= 0x5E || codePoint >= 0x7B && codePoint <= 0x7D) {\n            // The code point maps to an unsafe printable ASCII character;\n            // backslash-escape it. Here’s the list of those symbols:\n            //\n            //     $()*+./?[\\]^{|}\n            //\n            // This matches SyntaxCharacters as well as `/` (U+002F SOLIDUS).\n            // https://tc39.github.io/ecma262/#prod-SyntaxCharacter\n            string = '\\\\' + stringFromCharCode(codePoint);\n          } else if (codePoint >= 0x20 && codePoint <= 0x7E) {\n            // The code point maps to one of these printable ASCII symbols\n            // (including the space character):\n            //\n            //      !\"#%&',/0123456789:;<=>@ABCDEFGHIJKLMNO\n            //     PQRSTUVWXYZ_`abcdefghijklmnopqrstuvwxyz~\n            //\n            // These can safely be used directly.\n            string = stringFromCharCode(codePoint);\n          } else if (codePoint <= 0xFF) {\n            string = '\\\\x' + pad(hex(codePoint), 2);\n          } else {\n            // `codePoint <= 0xFFFF` holds true.\n            // https://mathiasbynens.be/notes/javascript-escapes#unicode\n            string = \"\\\\u\" + pad(hex(codePoint), 4);\n          } // There’s no need to account for astral symbols / surrogate pairs here,\n        // since `codePointToString` is private and only used for BMP code points.\n        // But if that’s what you need, just add an `else` block with this code:\n        //\n        //     string = '\\\\u' + pad(hex(highSurrogate(codePoint)), 4)\n        //     \t+ '\\\\u' + pad(hex(lowSurrogate(codePoint)), 4);\n\n\n        return string;\n      };\n\n      var codePointToStringUnicode = function codePointToStringUnicode(codePoint) {\n        if (codePoint <= 0xFFFF) {\n          return codePointToString(codePoint);\n        }\n\n        return \"\\\\u{\" + codePoint.toString(16).toUpperCase() + '}';\n      };\n\n      var symbolToCodePoint = function symbolToCodePoint(symbol) {\n        var length = symbol.length;\n        var first = symbol.charCodeAt(0);\n        var second;\n\n        if (first >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX && length > 1 // There is a next code unit.\n        ) {\n            // `first` is a high surrogate, and there is a next character. Assume\n            // it’s a low surrogate (else it’s invalid usage of Regenerate anyway).\n            second = symbol.charCodeAt(1); // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\n            return (first - HIGH_SURROGATE_MIN) * 0x400 + second - LOW_SURROGATE_MIN + 0x10000;\n          }\n\n        return first;\n      };\n\n      var createBMPCharacterClasses = function createBMPCharacterClasses(data) {\n        // Iterate over the data per `(start, end)` pair.\n        var result = '';\n        var index = 0;\n        var start;\n        var end;\n        var length = data.length;\n\n        if (dataIsSingleton(data)) {\n          return codePointToString(data[0]);\n        }\n\n        while (index < length) {\n          start = data[index];\n          end = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\n          if (start == end) {\n            result += codePointToString(start);\n          } else if (start + 1 == end) {\n            result += codePointToString(start) + codePointToString(end);\n          } else {\n            result += codePointToString(start) + '-' + codePointToString(end);\n          }\n\n          index += 2;\n        }\n\n        return '[' + result + ']';\n      };\n\n      var createUnicodeCharacterClasses = function createUnicodeCharacterClasses(data) {\n        // Iterate over the data per `(start, end)` pair.\n        var result = '';\n        var index = 0;\n        var start;\n        var end;\n        var length = data.length;\n\n        if (dataIsSingleton(data)) {\n          return codePointToStringUnicode(data[0]);\n        }\n\n        while (index < length) {\n          start = data[index];\n          end = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\n          if (start == end) {\n            result += codePointToStringUnicode(start);\n          } else if (start + 1 == end) {\n            result += codePointToStringUnicode(start) + codePointToStringUnicode(end);\n          } else {\n            result += codePointToStringUnicode(start) + '-' + codePointToStringUnicode(end);\n          }\n\n          index += 2;\n        }\n\n        return '[' + result + ']';\n      };\n\n      var splitAtBMP = function splitAtBMP(data) {\n        // Iterate over the data per `(start, end)` pair.\n        var loneHighSurrogates = [];\n        var loneLowSurrogates = [];\n        var bmp = [];\n        var astral = [];\n        var index = 0;\n        var start;\n        var end;\n        var length = data.length;\n\n        while (index < length) {\n          start = data[index];\n          end = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\n          if (start < HIGH_SURROGATE_MIN) {\n            // The range starts and ends before the high surrogate range.\n            // E.g. (0, 0x10).\n            if (end < HIGH_SURROGATE_MIN) {\n              bmp.push(start, end + 1);\n            } // The range starts before the high surrogate range and ends within it.\n            // E.g. (0, 0xD855).\n\n\n            if (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {\n              bmp.push(start, HIGH_SURROGATE_MIN);\n              loneHighSurrogates.push(HIGH_SURROGATE_MIN, end + 1);\n            } // The range starts before the high surrogate range and ends in the low\n            // surrogate range. E.g. (0, 0xDCFF).\n\n\n            if (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n              bmp.push(start, HIGH_SURROGATE_MIN);\n              loneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);\n              loneLowSurrogates.push(LOW_SURROGATE_MIN, end + 1);\n            } // The range starts before the high surrogate range and ends after the\n            // low surrogate range. E.g. (0, 0x10FFFF).\n\n\n            if (end > LOW_SURROGATE_MAX) {\n              bmp.push(start, HIGH_SURROGATE_MIN);\n              loneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);\n              loneLowSurrogates.push(LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1);\n\n              if (end <= 0xFFFF) {\n                bmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n              } else {\n                bmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n                astral.push(0xFFFF + 1, end + 1);\n              }\n            }\n          } else if (start >= HIGH_SURROGATE_MIN && start <= HIGH_SURROGATE_MAX) {\n            // The range starts and ends in the high surrogate range.\n            // E.g. (0xD855, 0xD866).\n            if (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {\n              loneHighSurrogates.push(start, end + 1);\n            } // The range starts in the high surrogate range and ends in the low\n            // surrogate range. E.g. (0xD855, 0xDCFF).\n\n\n            if (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n              loneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);\n              loneLowSurrogates.push(LOW_SURROGATE_MIN, end + 1);\n            } // The range starts in the high surrogate range and ends after the low\n            // surrogate range. E.g. (0xD855, 0x10FFFF).\n\n\n            if (end > LOW_SURROGATE_MAX) {\n              loneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);\n              loneLowSurrogates.push(LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1);\n\n              if (end <= 0xFFFF) {\n                bmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n              } else {\n                bmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n                astral.push(0xFFFF + 1, end + 1);\n              }\n            }\n          } else if (start >= LOW_SURROGATE_MIN && start <= LOW_SURROGATE_MAX) {\n            // The range starts and ends in the low surrogate range.\n            // E.g. (0xDCFF, 0xDDFF).\n            if (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n              loneLowSurrogates.push(start, end + 1);\n            } // The range starts in the low surrogate range and ends after the low\n            // surrogate range. E.g. (0xDCFF, 0x10FFFF).\n\n\n            if (end > LOW_SURROGATE_MAX) {\n              loneLowSurrogates.push(start, LOW_SURROGATE_MAX + 1);\n\n              if (end <= 0xFFFF) {\n                bmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n              } else {\n                bmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n                astral.push(0xFFFF + 1, end + 1);\n              }\n            }\n          } else if (start > LOW_SURROGATE_MAX && start <= 0xFFFF) {\n            // The range starts and ends after the low surrogate range.\n            // E.g. (0xFFAA, 0x10FFFF).\n            if (end <= 0xFFFF) {\n              bmp.push(start, end + 1);\n            } else {\n              bmp.push(start, 0xFFFF + 1);\n              astral.push(0xFFFF + 1, end + 1);\n            }\n          } else {\n            // The range starts and ends in the astral range.\n            astral.push(start, end + 1);\n          }\n\n          index += 2;\n        }\n\n        return {\n          'loneHighSurrogates': loneHighSurrogates,\n          'loneLowSurrogates': loneLowSurrogates,\n          'bmp': bmp,\n          'astral': astral\n        };\n      };\n\n      var optimizeSurrogateMappings = function optimizeSurrogateMappings(surrogateMappings) {\n        var result = [];\n        var tmpLow = [];\n        var addLow = false;\n        var mapping;\n        var nextMapping;\n        var highSurrogates;\n        var lowSurrogates;\n        var nextHighSurrogates;\n        var nextLowSurrogates;\n        var index = -1;\n        var length = surrogateMappings.length;\n\n        while (++index < length) {\n          mapping = surrogateMappings[index];\n          nextMapping = surrogateMappings[index + 1];\n\n          if (!nextMapping) {\n            result.push(mapping);\n            continue;\n          }\n\n          highSurrogates = mapping[0];\n          lowSurrogates = mapping[1];\n          nextHighSurrogates = nextMapping[0];\n          nextLowSurrogates = nextMapping[1]; // Check for identical high surrogate ranges.\n\n          tmpLow = lowSurrogates;\n\n          while (nextHighSurrogates && highSurrogates[0] == nextHighSurrogates[0] && highSurrogates[1] == nextHighSurrogates[1]) {\n            // Merge with the next item.\n            if (dataIsSingleton(nextLowSurrogates)) {\n              tmpLow = dataAdd(tmpLow, nextLowSurrogates[0]);\n            } else {\n              tmpLow = dataAddRange(tmpLow, nextLowSurrogates[0], nextLowSurrogates[1] - 1);\n            }\n\n            ++index;\n            mapping = surrogateMappings[index];\n            highSurrogates = mapping[0];\n            lowSurrogates = mapping[1];\n            nextMapping = surrogateMappings[index + 1];\n            nextHighSurrogates = nextMapping && nextMapping[0];\n            nextLowSurrogates = nextMapping && nextMapping[1];\n            addLow = true;\n          }\n\n          result.push([highSurrogates, addLow ? tmpLow : lowSurrogates]);\n          addLow = false;\n        }\n\n        return optimizeByLowSurrogates(result);\n      };\n\n      var optimizeByLowSurrogates = function optimizeByLowSurrogates(surrogateMappings) {\n        if (surrogateMappings.length == 1) {\n          return surrogateMappings;\n        }\n\n        var index = -1;\n        var innerIndex = -1;\n\n        while (++index < surrogateMappings.length) {\n          var mapping = surrogateMappings[index];\n          var lowSurrogates = mapping[1];\n          var lowSurrogateStart = lowSurrogates[0];\n          var lowSurrogateEnd = lowSurrogates[1];\n          innerIndex = index; // Note: the loop starts at the next index.\n\n          while (++innerIndex < surrogateMappings.length) {\n            var otherMapping = surrogateMappings[innerIndex];\n            var otherLowSurrogates = otherMapping[1];\n            var otherLowSurrogateStart = otherLowSurrogates[0];\n            var otherLowSurrogateEnd = otherLowSurrogates[1];\n\n            if (lowSurrogateStart == otherLowSurrogateStart && lowSurrogateEnd == otherLowSurrogateEnd) {\n              // Add the code points in the other item to this one.\n              if (dataIsSingleton(otherMapping[0])) {\n                mapping[0] = dataAdd(mapping[0], otherMapping[0][0]);\n              } else {\n                mapping[0] = dataAddRange(mapping[0], otherMapping[0][0], otherMapping[0][1] - 1);\n              } // Remove the other, now redundant, item.\n\n\n              surrogateMappings.splice(innerIndex, 1);\n              --innerIndex;\n            }\n          }\n        }\n\n        return surrogateMappings;\n      };\n\n      var surrogateSet = function surrogateSet(data) {\n        // Exit early if `data` is an empty set.\n        if (!data.length) {\n          return [];\n        } // Iterate over the data per `(start, end)` pair.\n\n\n        var index = 0;\n        var start;\n        var end;\n        var startHigh;\n        var startLow;\n        var endHigh;\n        var endLow;\n        var surrogateMappings = [];\n        var length = data.length;\n\n        while (index < length) {\n          start = data[index];\n          end = data[index + 1] - 1;\n          startHigh = highSurrogate(start);\n          startLow = lowSurrogate(start);\n          endHigh = highSurrogate(end);\n          endLow = lowSurrogate(end);\n          var startsWithLowestLowSurrogate = startLow == LOW_SURROGATE_MIN;\n          var endsWithHighestLowSurrogate = endLow == LOW_SURROGATE_MAX;\n          var complete = false; // Append the previous high-surrogate-to-low-surrogate mappings.\n          // Step 1: `(startHigh, startLow)` to `(startHigh, LOW_SURROGATE_MAX)`.\n\n          if (startHigh == endHigh || startsWithLowestLowSurrogate && endsWithHighestLowSurrogate) {\n            surrogateMappings.push([[startHigh, endHigh + 1], [startLow, endLow + 1]]);\n            complete = true;\n          } else {\n            surrogateMappings.push([[startHigh, startHigh + 1], [startLow, LOW_SURROGATE_MAX + 1]]);\n          } // Step 2: `(startHigh + 1, LOW_SURROGATE_MIN)` to\n          // `(endHigh - 1, LOW_SURROGATE_MAX)`.\n\n\n          if (!complete && startHigh + 1 < endHigh) {\n            if (endsWithHighestLowSurrogate) {\n              // Combine step 2 and step 3.\n              surrogateMappings.push([[startHigh + 1, endHigh + 1], [LOW_SURROGATE_MIN, endLow + 1]]);\n              complete = true;\n            } else {\n              surrogateMappings.push([[startHigh + 1, endHigh], [LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1]]);\n            }\n          } // Step 3. `(endHigh, LOW_SURROGATE_MIN)` to `(endHigh, endLow)`.\n\n\n          if (!complete) {\n            surrogateMappings.push([[endHigh, endHigh + 1], [LOW_SURROGATE_MIN, endLow + 1]]);\n          }\n\n          index += 2;\n        } // The format of `surrogateMappings` is as follows:\n        //\n        //     [ surrogateMapping1, surrogateMapping2 ]\n        //\n        // i.e.:\n        //\n        //     [\n        //       [ highSurrogates1, lowSurrogates1 ],\n        //       [ highSurrogates2, lowSurrogates2 ]\n        //     ]\n\n\n        return optimizeSurrogateMappings(surrogateMappings);\n      };\n\n      var createSurrogateCharacterClasses = function createSurrogateCharacterClasses(surrogateMappings) {\n        var result = [];\n        forEach(surrogateMappings, function (surrogateMapping) {\n          var highSurrogates = surrogateMapping[0];\n          var lowSurrogates = surrogateMapping[1];\n          result.push(createBMPCharacterClasses(highSurrogates) + createBMPCharacterClasses(lowSurrogates));\n        });\n        return result.join('|');\n      };\n\n      var createCharacterClassesFromData = function createCharacterClassesFromData(data, bmpOnly, hasUnicodeFlag) {\n        if (hasUnicodeFlag) {\n          return createUnicodeCharacterClasses(data);\n        }\n\n        var result = [];\n        var parts = splitAtBMP(data);\n        var loneHighSurrogates = parts.loneHighSurrogates;\n        var loneLowSurrogates = parts.loneLowSurrogates;\n        var bmp = parts.bmp;\n        var astral = parts.astral;\n        var hasLoneHighSurrogates = !dataIsEmpty(loneHighSurrogates);\n        var hasLoneLowSurrogates = !dataIsEmpty(loneLowSurrogates);\n        var surrogateMappings = surrogateSet(astral);\n\n        if (bmpOnly) {\n          bmp = dataAddData(bmp, loneHighSurrogates);\n          hasLoneHighSurrogates = false;\n          bmp = dataAddData(bmp, loneLowSurrogates);\n          hasLoneLowSurrogates = false;\n        }\n\n        if (!dataIsEmpty(bmp)) {\n          // The data set contains BMP code points that are not high surrogates\n          // needed for astral code points in the set.\n          result.push(createBMPCharacterClasses(bmp));\n        }\n\n        if (surrogateMappings.length) {\n          // The data set contains astral code points; append character classes\n          // based on their surrogate pairs.\n          result.push(createSurrogateCharacterClasses(surrogateMappings));\n        } // https://gist.github.com/mathiasbynens/bbe7f870208abcfec860\n\n\n        if (hasLoneHighSurrogates) {\n          result.push(createBMPCharacterClasses(loneHighSurrogates) + // Make sure the high surrogates aren’t part of a surrogate pair.\n          \"(?![\\\\uDC00-\\\\uDFFF])\");\n        }\n\n        if (hasLoneLowSurrogates) {\n          result.push( // It is not possible to accurately assert the low surrogates aren’t\n          // part of a surrogate pair, since JavaScript regular expressions do\n          // not support lookbehind.\n          \"(?:[^\\\\uD800-\\\\uDBFF]|^)\" + createBMPCharacterClasses(loneLowSurrogates));\n        }\n\n        return result.join('|');\n      };\n      /*--------------------------------------------------------------------------*/\n      // `regenerate` can be used as a constructor (and new methods can be added to\n      // its prototype) but also as a regular function, the latter of which is the\n      // documented and most common usage. For that reason, it’s not capitalized.\n\n\n      var regenerate = function regenerate(value) {\n        if (arguments.length > 1) {\n          value = slice.call(arguments);\n        }\n\n        if (this instanceof regenerate) {\n          this.data = [];\n          return value ? this.add(value) : this;\n        }\n\n        return new regenerate().add(value);\n      };\n\n      regenerate.version = '1.3.3';\n      var proto = regenerate.prototype;\n      extend(proto, {\n        'add': function add(value) {\n          var $this = this;\n\n          if (value == null) {\n            return $this;\n          }\n\n          if (value instanceof regenerate) {\n            // Allow passing other Regenerate instances.\n            $this.data = dataAddData($this.data, value.data);\n            return $this;\n          }\n\n          if (arguments.length > 1) {\n            value = slice.call(arguments);\n          }\n\n          if (isArray(value)) {\n            forEach(value, function (item) {\n              $this.add(item);\n            });\n            return $this;\n          }\n\n          $this.data = dataAdd($this.data, isNumber(value) ? value : symbolToCodePoint(value));\n          return $this;\n        },\n        'remove': function remove(value) {\n          var $this = this;\n\n          if (value == null) {\n            return $this;\n          }\n\n          if (value instanceof regenerate) {\n            // Allow passing other Regenerate instances.\n            $this.data = dataRemoveData($this.data, value.data);\n            return $this;\n          }\n\n          if (arguments.length > 1) {\n            value = slice.call(arguments);\n          }\n\n          if (isArray(value)) {\n            forEach(value, function (item) {\n              $this.remove(item);\n            });\n            return $this;\n          }\n\n          $this.data = dataRemove($this.data, isNumber(value) ? value : symbolToCodePoint(value));\n          return $this;\n        },\n        'addRange': function addRange(start, end) {\n          var $this = this;\n          $this.data = dataAddRange($this.data, isNumber(start) ? start : symbolToCodePoint(start), isNumber(end) ? end : symbolToCodePoint(end));\n          return $this;\n        },\n        'removeRange': function removeRange(start, end) {\n          var $this = this;\n          var startCodePoint = isNumber(start) ? start : symbolToCodePoint(start);\n          var endCodePoint = isNumber(end) ? end : symbolToCodePoint(end);\n          $this.data = dataRemoveRange($this.data, startCodePoint, endCodePoint);\n          return $this;\n        },\n        'intersection': function intersection(argument) {\n          var $this = this; // Allow passing other Regenerate instances.\n          // TODO: Optimize this by writing and using `dataIntersectionData()`.\n\n          var array = argument instanceof regenerate ? dataToArray(argument.data) : argument;\n          $this.data = dataIntersection($this.data, array);\n          return $this;\n        },\n        'contains': function contains(codePoint) {\n          return dataContains(this.data, isNumber(codePoint) ? codePoint : symbolToCodePoint(codePoint));\n        },\n        'clone': function clone() {\n          var set = new regenerate();\n          set.data = this.data.slice(0);\n          return set;\n        },\n        'toString': function toString(options) {\n          var result = createCharacterClassesFromData(this.data, options ? options.bmpOnly : false, options ? options.hasUnicodeFlag : false);\n\n          if (!result) {\n            // For an empty set, return something that can be inserted `/here/` to\n            // form a valid regular expression. Avoid `(?:)` since that matches the\n            // empty string.\n            return '[]';\n          } // Use `\\0` instead of `\\x00` where possible.\n\n\n          return result.replace(regexNull, '\\\\0$1');\n        },\n        'toRegExp': function toRegExp(flags) {\n          var pattern = this.toString(flags && flags.indexOf('u') != -1 ? {\n            'hasUnicodeFlag': true\n          } : null);\n          return RegExp(pattern, flags || '');\n        },\n        'valueOf': function valueOf() {\n          // Note: `valueOf` is aliased as `toArray`.\n          return dataToArray(this.data);\n        }\n      });\n      proto.toArray = proto.valueOf; // Some AMD build optimizers, like r.js, check for specific condition patterns\n      // like the following:\n\n      if (freeExports && !freeExports.nodeType) {\n        if (freeModule) {\n          // in Node.js, io.js, or RingoJS v0.8.0+\n          freeModule.exports = regenerate;\n        } else {\n          // in Narwhal or RingoJS v0.7.0-\n          freeExports.regenerate = regenerate;\n        }\n      } else {\n        // in Rhino or a web browser\n        root.regenerate = regenerate;\n      }\n    })(commonjsGlobal);\n  });\n  var unicodeCanonicalPropertyNamesEcmascript = new Set([// Non-binary properties:\n  'General_Category', 'Script', 'Script_Extensions', // Binary properties:\n  'Alphabetic', 'Any', 'ASCII', 'ASCII_Hex_Digit', 'Assigned', 'Bidi_Control', 'Bidi_Mirrored', 'Case_Ignorable', 'Cased', 'Changes_When_Casefolded', 'Changes_When_Casemapped', 'Changes_When_Lowercased', 'Changes_When_NFKC_Casefolded', 'Changes_When_Titlecased', 'Changes_When_Uppercased', 'Dash', 'Default_Ignorable_Code_Point', 'Deprecated', 'Diacritic', 'Emoji', 'Emoji_Component', 'Emoji_Modifier', 'Emoji_Modifier_Base', 'Emoji_Presentation', 'Extended_Pictographic', 'Extender', 'Grapheme_Base', 'Grapheme_Extend', 'Hex_Digit', 'ID_Continue', 'ID_Start', 'Ideographic', 'IDS_Binary_Operator', 'IDS_Trinary_Operator', 'Join_Control', 'Logical_Order_Exception', 'Lowercase', 'Math', 'Noncharacter_Code_Point', 'Pattern_Syntax', 'Pattern_White_Space', 'Quotation_Mark', 'Radical', 'Regional_Indicator', 'Sentence_Terminal', 'Soft_Dotted', 'Terminal_Punctuation', 'Unified_Ideograph', 'Uppercase', 'Variation_Selector', 'White_Space', 'XID_Continue', 'XID_Start']); // Generated using `npm run build`. Do not edit!\n\n  var unicodePropertyAliasesEcmascript = new Map([['scx', 'Script_Extensions'], ['sc', 'Script'], ['gc', 'General_Category'], ['AHex', 'ASCII_Hex_Digit'], ['Alpha', 'Alphabetic'], ['Bidi_C', 'Bidi_Control'], ['Bidi_M', 'Bidi_Mirrored'], ['Cased', 'Cased'], ['CI', 'Case_Ignorable'], ['CWCF', 'Changes_When_Casefolded'], ['CWCM', 'Changes_When_Casemapped'], ['CWKCF', 'Changes_When_NFKC_Casefolded'], ['CWL', 'Changes_When_Lowercased'], ['CWT', 'Changes_When_Titlecased'], ['CWU', 'Changes_When_Uppercased'], ['Dash', 'Dash'], ['Dep', 'Deprecated'], ['DI', 'Default_Ignorable_Code_Point'], ['Dia', 'Diacritic'], ['Ext', 'Extender'], ['Gr_Base', 'Grapheme_Base'], ['Gr_Ext', 'Grapheme_Extend'], ['Hex', 'Hex_Digit'], ['IDC', 'ID_Continue'], ['Ideo', 'Ideographic'], ['IDS', 'ID_Start'], ['IDSB', 'IDS_Binary_Operator'], ['IDST', 'IDS_Trinary_Operator'], ['Join_C', 'Join_Control'], ['LOE', 'Logical_Order_Exception'], ['Lower', 'Lowercase'], ['Math', 'Math'], ['NChar', 'Noncharacter_Code_Point'], ['Pat_Syn', 'Pattern_Syntax'], ['Pat_WS', 'Pattern_White_Space'], ['QMark', 'Quotation_Mark'], ['Radical', 'Radical'], ['RI', 'Regional_Indicator'], ['SD', 'Soft_Dotted'], ['STerm', 'Sentence_Terminal'], ['Term', 'Terminal_Punctuation'], ['UIdeo', 'Unified_Ideograph'], ['Upper', 'Uppercase'], ['VS', 'Variation_Selector'], ['WSpace', 'White_Space'], ['space', 'White_Space'], ['XIDC', 'XID_Continue'], ['XIDS', 'XID_Start']]);\n\n  var matchProperty = function matchProperty(property) {\n    if (unicodeCanonicalPropertyNamesEcmascript.has(property)) {\n      return property;\n    }\n\n    if (unicodePropertyAliasesEcmascript.has(property)) {\n      return unicodePropertyAliasesEcmascript.get(property);\n    }\n\n    throw new Error(\"Unknown property: \" + property);\n  };\n\n  var unicodeMatchPropertyEcmascript = matchProperty;\n  var mappings = new Map([['General_Category', new Map([['C', 'Other'], ['Cc', 'Control'], ['cntrl', 'Control'], ['Cf', 'Format'], ['Cn', 'Unassigned'], ['Co', 'Private_Use'], ['Cs', 'Surrogate'], ['L', 'Letter'], ['LC', 'Cased_Letter'], ['Ll', 'Lowercase_Letter'], ['Lm', 'Modifier_Letter'], ['Lo', 'Other_Letter'], ['Lt', 'Titlecase_Letter'], ['Lu', 'Uppercase_Letter'], ['M', 'Mark'], ['Combining_Mark', 'Mark'], ['Mc', 'Spacing_Mark'], ['Me', 'Enclosing_Mark'], ['Mn', 'Nonspacing_Mark'], ['N', 'Number'], ['Nd', 'Decimal_Number'], ['digit', 'Decimal_Number'], ['Nl', 'Letter_Number'], ['No', 'Other_Number'], ['P', 'Punctuation'], ['punct', 'Punctuation'], ['Pc', 'Connector_Punctuation'], ['Pd', 'Dash_Punctuation'], ['Pe', 'Close_Punctuation'], ['Pf', 'Final_Punctuation'], ['Pi', 'Initial_Punctuation'], ['Po', 'Other_Punctuation'], ['Ps', 'Open_Punctuation'], ['S', 'Symbol'], ['Sc', 'Currency_Symbol'], ['Sk', 'Modifier_Symbol'], ['Sm', 'Math_Symbol'], ['So', 'Other_Symbol'], ['Z', 'Separator'], ['Zl', 'Line_Separator'], ['Zp', 'Paragraph_Separator'], ['Zs', 'Space_Separator'], ['Other', 'Other'], ['Control', 'Control'], ['Format', 'Format'], ['Unassigned', 'Unassigned'], ['Private_Use', 'Private_Use'], ['Surrogate', 'Surrogate'], ['Letter', 'Letter'], ['Cased_Letter', 'Cased_Letter'], ['Lowercase_Letter', 'Lowercase_Letter'], ['Modifier_Letter', 'Modifier_Letter'], ['Other_Letter', 'Other_Letter'], ['Titlecase_Letter', 'Titlecase_Letter'], ['Uppercase_Letter', 'Uppercase_Letter'], ['Mark', 'Mark'], ['Spacing_Mark', 'Spacing_Mark'], ['Enclosing_Mark', 'Enclosing_Mark'], ['Nonspacing_Mark', 'Nonspacing_Mark'], ['Number', 'Number'], ['Decimal_Number', 'Decimal_Number'], ['Letter_Number', 'Letter_Number'], ['Other_Number', 'Other_Number'], ['Punctuation', 'Punctuation'], ['Connector_Punctuation', 'Connector_Punctuation'], ['Dash_Punctuation', 'Dash_Punctuation'], ['Close_Punctuation', 'Close_Punctuation'], ['Final_Punctuation', 'Final_Punctuation'], ['Initial_Punctuation', 'Initial_Punctuation'], ['Other_Punctuation', 'Other_Punctuation'], ['Open_Punctuation', 'Open_Punctuation'], ['Symbol', 'Symbol'], ['Currency_Symbol', 'Currency_Symbol'], ['Modifier_Symbol', 'Modifier_Symbol'], ['Math_Symbol', 'Math_Symbol'], ['Other_Symbol', 'Other_Symbol'], ['Separator', 'Separator'], ['Line_Separator', 'Line_Separator'], ['Paragraph_Separator', 'Paragraph_Separator'], ['Space_Separator', 'Space_Separator']])], ['Script', new Map([['Adlm', 'Adlam'], ['Aghb', 'Caucasian_Albanian'], ['Ahom', 'Ahom'], ['Arab', 'Arabic'], ['Armi', 'Imperial_Aramaic'], ['Armn', 'Armenian'], ['Avst', 'Avestan'], ['Bali', 'Balinese'], ['Bamu', 'Bamum'], ['Bass', 'Bassa_Vah'], ['Batk', 'Batak'], ['Beng', 'Bengali'], ['Bhks', 'Bhaiksuki'], ['Bopo', 'Bopomofo'], ['Brah', 'Brahmi'], ['Brai', 'Braille'], ['Bugi', 'Buginese'], ['Buhd', 'Buhid'], ['Cakm', 'Chakma'], ['Cans', 'Canadian_Aboriginal'], ['Cari', 'Carian'], ['Cham', 'Cham'], ['Cher', 'Cherokee'], ['Copt', 'Coptic'], ['Qaac', 'Coptic'], ['Cprt', 'Cypriot'], ['Cyrl', 'Cyrillic'], ['Deva', 'Devanagari'], ['Dogr', 'Dogra'], ['Dsrt', 'Deseret'], ['Dupl', 'Duployan'], ['Egyp', 'Egyptian_Hieroglyphs'], ['Elba', 'Elbasan'], ['Elym', 'Elymaic'], ['Ethi', 'Ethiopic'], ['Geor', 'Georgian'], ['Glag', 'Glagolitic'], ['Gong', 'Gunjala_Gondi'], ['Gonm', 'Masaram_Gondi'], ['Goth', 'Gothic'], ['Gran', 'Grantha'], ['Grek', 'Greek'], ['Gujr', 'Gujarati'], ['Guru', 'Gurmukhi'], ['Hang', 'Hangul'], ['Hani', 'Han'], ['Hano', 'Hanunoo'], ['Hatr', 'Hatran'], ['Hebr', 'Hebrew'], ['Hira', 'Hiragana'], ['Hluw', 'Anatolian_Hieroglyphs'], ['Hmng', 'Pahawh_Hmong'], ['Hmnp', 'Nyiakeng_Puachue_Hmong'], ['Hrkt', 'Katakana_Or_Hiragana'], ['Hung', 'Old_Hungarian'], ['Ital', 'Old_Italic'], ['Java', 'Javanese'], ['Kali', 'Kayah_Li'], ['Kana', 'Katakana'], ['Khar', 'Kharoshthi'], ['Khmr', 'Khmer'], ['Khoj', 'Khojki'], ['Knda', 'Kannada'], ['Kthi', 'Kaithi'], ['Lana', 'Tai_Tham'], ['Laoo', 'Lao'], ['Latn', 'Latin'], ['Lepc', 'Lepcha'], ['Limb', 'Limbu'], ['Lina', 'Linear_A'], ['Linb', 'Linear_B'], ['Lisu', 'Lisu'], ['Lyci', 'Lycian'], ['Lydi', 'Lydian'], ['Mahj', 'Mahajani'], ['Maka', 'Makasar'], ['Mand', 'Mandaic'], ['Mani', 'Manichaean'], ['Marc', 'Marchen'], ['Medf', 'Medefaidrin'], ['Mend', 'Mende_Kikakui'], ['Merc', 'Meroitic_Cursive'], ['Mero', 'Meroitic_Hieroglyphs'], ['Mlym', 'Malayalam'], ['Modi', 'Modi'], ['Mong', 'Mongolian'], ['Mroo', 'Mro'], ['Mtei', 'Meetei_Mayek'], ['Mult', 'Multani'], ['Mymr', 'Myanmar'], ['Nand', 'Nandinagari'], ['Narb', 'Old_North_Arabian'], ['Nbat', 'Nabataean'], ['Newa', 'Newa'], ['Nkoo', 'Nko'], ['Nshu', 'Nushu'], ['Ogam', 'Ogham'], ['Olck', 'Ol_Chiki'], ['Orkh', 'Old_Turkic'], ['Orya', 'Oriya'], ['Osge', 'Osage'], ['Osma', 'Osmanya'], ['Palm', 'Palmyrene'], ['Pauc', 'Pau_Cin_Hau'], ['Perm', 'Old_Permic'], ['Phag', 'Phags_Pa'], ['Phli', 'Inscriptional_Pahlavi'], ['Phlp', 'Psalter_Pahlavi'], ['Phnx', 'Phoenician'], ['Plrd', 'Miao'], ['Prti', 'Inscriptional_Parthian'], ['Rjng', 'Rejang'], ['Rohg', 'Hanifi_Rohingya'], ['Runr', 'Runic'], ['Samr', 'Samaritan'], ['Sarb', 'Old_South_Arabian'], ['Saur', 'Saurashtra'], ['Sgnw', 'SignWriting'], ['Shaw', 'Shavian'], ['Shrd', 'Sharada'], ['Sidd', 'Siddham'], ['Sind', 'Khudawadi'], ['Sinh', 'Sinhala'], ['Sogd', 'Sogdian'], ['Sogo', 'Old_Sogdian'], ['Sora', 'Sora_Sompeng'], ['Soyo', 'Soyombo'], ['Sund', 'Sundanese'], ['Sylo', 'Syloti_Nagri'], ['Syrc', 'Syriac'], ['Tagb', 'Tagbanwa'], ['Takr', 'Takri'], ['Tale', 'Tai_Le'], ['Talu', 'New_Tai_Lue'], ['Taml', 'Tamil'], ['Tang', 'Tangut'], ['Tavt', 'Tai_Viet'], ['Telu', 'Telugu'], ['Tfng', 'Tifinagh'], ['Tglg', 'Tagalog'], ['Thaa', 'Thaana'], ['Thai', 'Thai'], ['Tibt', 'Tibetan'], ['Tirh', 'Tirhuta'], ['Ugar', 'Ugaritic'], ['Vaii', 'Vai'], ['Wara', 'Warang_Citi'], ['Wcho', 'Wancho'], ['Xpeo', 'Old_Persian'], ['Xsux', 'Cuneiform'], ['Yiii', 'Yi'], ['Zanb', 'Zanabazar_Square'], ['Zinh', 'Inherited'], ['Qaai', 'Inherited'], ['Zyyy', 'Common'], ['Zzzz', 'Unknown'], ['Adlam', 'Adlam'], ['Caucasian_Albanian', 'Caucasian_Albanian'], ['Arabic', 'Arabic'], ['Imperial_Aramaic', 'Imperial_Aramaic'], ['Armenian', 'Armenian'], ['Avestan', 'Avestan'], ['Balinese', 'Balinese'], ['Bamum', 'Bamum'], ['Bassa_Vah', 'Bassa_Vah'], ['Batak', 'Batak'], ['Bengali', 'Bengali'], ['Bhaiksuki', 'Bhaiksuki'], ['Bopomofo', 'Bopomofo'], ['Brahmi', 'Brahmi'], ['Braille', 'Braille'], ['Buginese', 'Buginese'], ['Buhid', 'Buhid'], ['Chakma', 'Chakma'], ['Canadian_Aboriginal', 'Canadian_Aboriginal'], ['Carian', 'Carian'], ['Cherokee', 'Cherokee'], ['Coptic', 'Coptic'], ['Cypriot', 'Cypriot'], ['Cyrillic', 'Cyrillic'], ['Devanagari', 'Devanagari'], ['Dogra', 'Dogra'], ['Deseret', 'Deseret'], ['Duployan', 'Duployan'], ['Egyptian_Hieroglyphs', 'Egyptian_Hieroglyphs'], ['Elbasan', 'Elbasan'], ['Elymaic', 'Elymaic'], ['Ethiopic', 'Ethiopic'], ['Georgian', 'Georgian'], ['Glagolitic', 'Glagolitic'], ['Gunjala_Gondi', 'Gunjala_Gondi'], ['Masaram_Gondi', 'Masaram_Gondi'], ['Gothic', 'Gothic'], ['Grantha', 'Grantha'], ['Greek', 'Greek'], ['Gujarati', 'Gujarati'], ['Gurmukhi', 'Gurmukhi'], ['Hangul', 'Hangul'], ['Han', 'Han'], ['Hanunoo', 'Hanunoo'], ['Hatran', 'Hatran'], ['Hebrew', 'Hebrew'], ['Hiragana', 'Hiragana'], ['Anatolian_Hieroglyphs', 'Anatolian_Hieroglyphs'], ['Pahawh_Hmong', 'Pahawh_Hmong'], ['Nyiakeng_Puachue_Hmong', 'Nyiakeng_Puachue_Hmong'], ['Katakana_Or_Hiragana', 'Katakana_Or_Hiragana'], ['Old_Hungarian', 'Old_Hungarian'], ['Old_Italic', 'Old_Italic'], ['Javanese', 'Javanese'], ['Kayah_Li', 'Kayah_Li'], ['Katakana', 'Katakana'], ['Kharoshthi', 'Kharoshthi'], ['Khmer', 'Khmer'], ['Khojki', 'Khojki'], ['Kannada', 'Kannada'], ['Kaithi', 'Kaithi'], ['Tai_Tham', 'Tai_Tham'], ['Lao', 'Lao'], ['Latin', 'Latin'], ['Lepcha', 'Lepcha'], ['Limbu', 'Limbu'], ['Linear_A', 'Linear_A'], ['Linear_B', 'Linear_B'], ['Lycian', 'Lycian'], ['Lydian', 'Lydian'], ['Mahajani', 'Mahajani'], ['Makasar', 'Makasar'], ['Mandaic', 'Mandaic'], ['Manichaean', 'Manichaean'], ['Marchen', 'Marchen'], ['Medefaidrin', 'Medefaidrin'], ['Mende_Kikakui', 'Mende_Kikakui'], ['Meroitic_Cursive', 'Meroitic_Cursive'], ['Meroitic_Hieroglyphs', 'Meroitic_Hieroglyphs'], ['Malayalam', 'Malayalam'], ['Mongolian', 'Mongolian'], ['Mro', 'Mro'], ['Meetei_Mayek', 'Meetei_Mayek'], ['Multani', 'Multani'], ['Myanmar', 'Myanmar'], ['Nandinagari', 'Nandinagari'], ['Old_North_Arabian', 'Old_North_Arabian'], ['Nabataean', 'Nabataean'], ['Nko', 'Nko'], ['Nushu', 'Nushu'], ['Ogham', 'Ogham'], ['Ol_Chiki', 'Ol_Chiki'], ['Old_Turkic', 'Old_Turkic'], ['Oriya', 'Oriya'], ['Osage', 'Osage'], ['Osmanya', 'Osmanya'], ['Palmyrene', 'Palmyrene'], ['Pau_Cin_Hau', 'Pau_Cin_Hau'], ['Old_Permic', 'Old_Permic'], ['Phags_Pa', 'Phags_Pa'], ['Inscriptional_Pahlavi', 'Inscriptional_Pahlavi'], ['Psalter_Pahlavi', 'Psalter_Pahlavi'], ['Phoenician', 'Phoenician'], ['Miao', 'Miao'], ['Inscriptional_Parthian', 'Inscriptional_Parthian'], ['Rejang', 'Rejang'], ['Hanifi_Rohingya', 'Hanifi_Rohingya'], ['Runic', 'Runic'], ['Samaritan', 'Samaritan'], ['Old_South_Arabian', 'Old_South_Arabian'], ['Saurashtra', 'Saurashtra'], ['SignWriting', 'SignWriting'], ['Shavian', 'Shavian'], ['Sharada', 'Sharada'], ['Siddham', 'Siddham'], ['Khudawadi', 'Khudawadi'], ['Sinhala', 'Sinhala'], ['Sogdian', 'Sogdian'], ['Old_Sogdian', 'Old_Sogdian'], ['Sora_Sompeng', 'Sora_Sompeng'], ['Soyombo', 'Soyombo'], ['Sundanese', 'Sundanese'], ['Syloti_Nagri', 'Syloti_Nagri'], ['Syriac', 'Syriac'], ['Tagbanwa', 'Tagbanwa'], ['Takri', 'Takri'], ['Tai_Le', 'Tai_Le'], ['New_Tai_Lue', 'New_Tai_Lue'], ['Tamil', 'Tamil'], ['Tangut', 'Tangut'], ['Tai_Viet', 'Tai_Viet'], ['Telugu', 'Telugu'], ['Tifinagh', 'Tifinagh'], ['Tagalog', 'Tagalog'], ['Thaana', 'Thaana'], ['Tibetan', 'Tibetan'], ['Tirhuta', 'Tirhuta'], ['Ugaritic', 'Ugaritic'], ['Vai', 'Vai'], ['Warang_Citi', 'Warang_Citi'], ['Wancho', 'Wancho'], ['Old_Persian', 'Old_Persian'], ['Cuneiform', 'Cuneiform'], ['Yi', 'Yi'], ['Zanabazar_Square', 'Zanabazar_Square'], ['Inherited', 'Inherited'], ['Common', 'Common'], ['Unknown', 'Unknown']])], ['Script_Extensions', new Map([['Adlm', 'Adlam'], ['Aghb', 'Caucasian_Albanian'], ['Ahom', 'Ahom'], ['Arab', 'Arabic'], ['Armi', 'Imperial_Aramaic'], ['Armn', 'Armenian'], ['Avst', 'Avestan'], ['Bali', 'Balinese'], ['Bamu', 'Bamum'], ['Bass', 'Bassa_Vah'], ['Batk', 'Batak'], ['Beng', 'Bengali'], ['Bhks', 'Bhaiksuki'], ['Bopo', 'Bopomofo'], ['Brah', 'Brahmi'], ['Brai', 'Braille'], ['Bugi', 'Buginese'], ['Buhd', 'Buhid'], ['Cakm', 'Chakma'], ['Cans', 'Canadian_Aboriginal'], ['Cari', 'Carian'], ['Cham', 'Cham'], ['Cher', 'Cherokee'], ['Copt', 'Coptic'], ['Qaac', 'Coptic'], ['Cprt', 'Cypriot'], ['Cyrl', 'Cyrillic'], ['Deva', 'Devanagari'], ['Dogr', 'Dogra'], ['Dsrt', 'Deseret'], ['Dupl', 'Duployan'], ['Egyp', 'Egyptian_Hieroglyphs'], ['Elba', 'Elbasan'], ['Elym', 'Elymaic'], ['Ethi', 'Ethiopic'], ['Geor', 'Georgian'], ['Glag', 'Glagolitic'], ['Gong', 'Gunjala_Gondi'], ['Gonm', 'Masaram_Gondi'], ['Goth', 'Gothic'], ['Gran', 'Grantha'], ['Grek', 'Greek'], ['Gujr', 'Gujarati'], ['Guru', 'Gurmukhi'], ['Hang', 'Hangul'], ['Hani', 'Han'], ['Hano', 'Hanunoo'], ['Hatr', 'Hatran'], ['Hebr', 'Hebrew'], ['Hira', 'Hiragana'], ['Hluw', 'Anatolian_Hieroglyphs'], ['Hmng', 'Pahawh_Hmong'], ['Hmnp', 'Nyiakeng_Puachue_Hmong'], ['Hrkt', 'Katakana_Or_Hiragana'], ['Hung', 'Old_Hungarian'], ['Ital', 'Old_Italic'], ['Java', 'Javanese'], ['Kali', 'Kayah_Li'], ['Kana', 'Katakana'], ['Khar', 'Kharoshthi'], ['Khmr', 'Khmer'], ['Khoj', 'Khojki'], ['Knda', 'Kannada'], ['Kthi', 'Kaithi'], ['Lana', 'Tai_Tham'], ['Laoo', 'Lao'], ['Latn', 'Latin'], ['Lepc', 'Lepcha'], ['Limb', 'Limbu'], ['Lina', 'Linear_A'], ['Linb', 'Linear_B'], ['Lisu', 'Lisu'], ['Lyci', 'Lycian'], ['Lydi', 'Lydian'], ['Mahj', 'Mahajani'], ['Maka', 'Makasar'], ['Mand', 'Mandaic'], ['Mani', 'Manichaean'], ['Marc', 'Marchen'], ['Medf', 'Medefaidrin'], ['Mend', 'Mende_Kikakui'], ['Merc', 'Meroitic_Cursive'], ['Mero', 'Meroitic_Hieroglyphs'], ['Mlym', 'Malayalam'], ['Modi', 'Modi'], ['Mong', 'Mongolian'], ['Mroo', 'Mro'], ['Mtei', 'Meetei_Mayek'], ['Mult', 'Multani'], ['Mymr', 'Myanmar'], ['Nand', 'Nandinagari'], ['Narb', 'Old_North_Arabian'], ['Nbat', 'Nabataean'], ['Newa', 'Newa'], ['Nkoo', 'Nko'], ['Nshu', 'Nushu'], ['Ogam', 'Ogham'], ['Olck', 'Ol_Chiki'], ['Orkh', 'Old_Turkic'], ['Orya', 'Oriya'], ['Osge', 'Osage'], ['Osma', 'Osmanya'], ['Palm', 'Palmyrene'], ['Pauc', 'Pau_Cin_Hau'], ['Perm', 'Old_Permic'], ['Phag', 'Phags_Pa'], ['Phli', 'Inscriptional_Pahlavi'], ['Phlp', 'Psalter_Pahlavi'], ['Phnx', 'Phoenician'], ['Plrd', 'Miao'], ['Prti', 'Inscriptional_Parthian'], ['Rjng', 'Rejang'], ['Rohg', 'Hanifi_Rohingya'], ['Runr', 'Runic'], ['Samr', 'Samaritan'], ['Sarb', 'Old_South_Arabian'], ['Saur', 'Saurashtra'], ['Sgnw', 'SignWriting'], ['Shaw', 'Shavian'], ['Shrd', 'Sharada'], ['Sidd', 'Siddham'], ['Sind', 'Khudawadi'], ['Sinh', 'Sinhala'], ['Sogd', 'Sogdian'], ['Sogo', 'Old_Sogdian'], ['Sora', 'Sora_Sompeng'], ['Soyo', 'Soyombo'], ['Sund', 'Sundanese'], ['Sylo', 'Syloti_Nagri'], ['Syrc', 'Syriac'], ['Tagb', 'Tagbanwa'], ['Takr', 'Takri'], ['Tale', 'Tai_Le'], ['Talu', 'New_Tai_Lue'], ['Taml', 'Tamil'], ['Tang', 'Tangut'], ['Tavt', 'Tai_Viet'], ['Telu', 'Telugu'], ['Tfng', 'Tifinagh'], ['Tglg', 'Tagalog'], ['Thaa', 'Thaana'], ['Thai', 'Thai'], ['Tibt', 'Tibetan'], ['Tirh', 'Tirhuta'], ['Ugar', 'Ugaritic'], ['Vaii', 'Vai'], ['Wara', 'Warang_Citi'], ['Wcho', 'Wancho'], ['Xpeo', 'Old_Persian'], ['Xsux', 'Cuneiform'], ['Yiii', 'Yi'], ['Zanb', 'Zanabazar_Square'], ['Zinh', 'Inherited'], ['Qaai', 'Inherited'], ['Zyyy', 'Common'], ['Zzzz', 'Unknown'], ['Adlam', 'Adlam'], ['Caucasian_Albanian', 'Caucasian_Albanian'], ['Arabic', 'Arabic'], ['Imperial_Aramaic', 'Imperial_Aramaic'], ['Armenian', 'Armenian'], ['Avestan', 'Avestan'], ['Balinese', 'Balinese'], ['Bamum', 'Bamum'], ['Bassa_Vah', 'Bassa_Vah'], ['Batak', 'Batak'], ['Bengali', 'Bengali'], ['Bhaiksuki', 'Bhaiksuki'], ['Bopomofo', 'Bopomofo'], ['Brahmi', 'Brahmi'], ['Braille', 'Braille'], ['Buginese', 'Buginese'], ['Buhid', 'Buhid'], ['Chakma', 'Chakma'], ['Canadian_Aboriginal', 'Canadian_Aboriginal'], ['Carian', 'Carian'], ['Cherokee', 'Cherokee'], ['Coptic', 'Coptic'], ['Cypriot', 'Cypriot'], ['Cyrillic', 'Cyrillic'], ['Devanagari', 'Devanagari'], ['Dogra', 'Dogra'], ['Deseret', 'Deseret'], ['Duployan', 'Duployan'], ['Egyptian_Hieroglyphs', 'Egyptian_Hieroglyphs'], ['Elbasan', 'Elbasan'], ['Elymaic', 'Elymaic'], ['Ethiopic', 'Ethiopic'], ['Georgian', 'Georgian'], ['Glagolitic', 'Glagolitic'], ['Gunjala_Gondi', 'Gunjala_Gondi'], ['Masaram_Gondi', 'Masaram_Gondi'], ['Gothic', 'Gothic'], ['Grantha', 'Grantha'], ['Greek', 'Greek'], ['Gujarati', 'Gujarati'], ['Gurmukhi', 'Gurmukhi'], ['Hangul', 'Hangul'], ['Han', 'Han'], ['Hanunoo', 'Hanunoo'], ['Hatran', 'Hatran'], ['Hebrew', 'Hebrew'], ['Hiragana', 'Hiragana'], ['Anatolian_Hieroglyphs', 'Anatolian_Hieroglyphs'], ['Pahawh_Hmong', 'Pahawh_Hmong'], ['Nyiakeng_Puachue_Hmong', 'Nyiakeng_Puachue_Hmong'], ['Katakana_Or_Hiragana', 'Katakana_Or_Hiragana'], ['Old_Hungarian', 'Old_Hungarian'], ['Old_Italic', 'Old_Italic'], ['Javanese', 'Javanese'], ['Kayah_Li', 'Kayah_Li'], ['Katakana', 'Katakana'], ['Kharoshthi', 'Kharoshthi'], ['Khmer', 'Khmer'], ['Khojki', 'Khojki'], ['Kannada', 'Kannada'], ['Kaithi', 'Kaithi'], ['Tai_Tham', 'Tai_Tham'], ['Lao', 'Lao'], ['Latin', 'Latin'], ['Lepcha', 'Lepcha'], ['Limbu', 'Limbu'], ['Linear_A', 'Linear_A'], ['Linear_B', 'Linear_B'], ['Lycian', 'Lycian'], ['Lydian', 'Lydian'], ['Mahajani', 'Mahajani'], ['Makasar', 'Makasar'], ['Mandaic', 'Mandaic'], ['Manichaean', 'Manichaean'], ['Marchen', 'Marchen'], ['Medefaidrin', 'Medefaidrin'], ['Mende_Kikakui', 'Mende_Kikakui'], ['Meroitic_Cursive', 'Meroitic_Cursive'], ['Meroitic_Hieroglyphs', 'Meroitic_Hieroglyphs'], ['Malayalam', 'Malayalam'], ['Mongolian', 'Mongolian'], ['Mro', 'Mro'], ['Meetei_Mayek', 'Meetei_Mayek'], ['Multani', 'Multani'], ['Myanmar', 'Myanmar'], ['Nandinagari', 'Nandinagari'], ['Old_North_Arabian', 'Old_North_Arabian'], ['Nabataean', 'Nabataean'], ['Nko', 'Nko'], ['Nushu', 'Nushu'], ['Ogham', 'Ogham'], ['Ol_Chiki', 'Ol_Chiki'], ['Old_Turkic', 'Old_Turkic'], ['Oriya', 'Oriya'], ['Osage', 'Osage'], ['Osmanya', 'Osmanya'], ['Palmyrene', 'Palmyrene'], ['Pau_Cin_Hau', 'Pau_Cin_Hau'], ['Old_Permic', 'Old_Permic'], ['Phags_Pa', 'Phags_Pa'], ['Inscriptional_Pahlavi', 'Inscriptional_Pahlavi'], ['Psalter_Pahlavi', 'Psalter_Pahlavi'], ['Phoenician', 'Phoenician'], ['Miao', 'Miao'], ['Inscriptional_Parthian', 'Inscriptional_Parthian'], ['Rejang', 'Rejang'], ['Hanifi_Rohingya', 'Hanifi_Rohingya'], ['Runic', 'Runic'], ['Samaritan', 'Samaritan'], ['Old_South_Arabian', 'Old_South_Arabian'], ['Saurashtra', 'Saurashtra'], ['SignWriting', 'SignWriting'], ['Shavian', 'Shavian'], ['Sharada', 'Sharada'], ['Siddham', 'Siddham'], ['Khudawadi', 'Khudawadi'], ['Sinhala', 'Sinhala'], ['Sogdian', 'Sogdian'], ['Old_Sogdian', 'Old_Sogdian'], ['Sora_Sompeng', 'Sora_Sompeng'], ['Soyombo', 'Soyombo'], ['Sundanese', 'Sundanese'], ['Syloti_Nagri', 'Syloti_Nagri'], ['Syriac', 'Syriac'], ['Tagbanwa', 'Tagbanwa'], ['Takri', 'Takri'], ['Tai_Le', 'Tai_Le'], ['New_Tai_Lue', 'New_Tai_Lue'], ['Tamil', 'Tamil'], ['Tangut', 'Tangut'], ['Tai_Viet', 'Tai_Viet'], ['Telugu', 'Telugu'], ['Tifinagh', 'Tifinagh'], ['Tagalog', 'Tagalog'], ['Thaana', 'Thaana'], ['Tibetan', 'Tibetan'], ['Tirhuta', 'Tirhuta'], ['Ugaritic', 'Ugaritic'], ['Vai', 'Vai'], ['Warang_Citi', 'Warang_Citi'], ['Wancho', 'Wancho'], ['Old_Persian', 'Old_Persian'], ['Cuneiform', 'Cuneiform'], ['Yi', 'Yi'], ['Zanabazar_Square', 'Zanabazar_Square'], ['Inherited', 'Inherited'], ['Common', 'Common'], ['Unknown', 'Unknown']])]]);\n\n  var matchPropertyValue = function matchPropertyValue(property, value) {\n    var aliasToValue = mappings.get(property);\n\n    if (!aliasToValue) {\n      throw new Error(\"Unknown property `\" + property + \"`.\");\n    }\n\n    var canonicalValue = aliasToValue.get(value);\n\n    if (canonicalValue) {\n      return canonicalValue;\n    }\n\n    throw new Error(\"Unknown value `\" + value + \"` for property `\" + property + \"`.\");\n  };\n\n  var unicodeMatchPropertyValueEcmascript = matchPropertyValue;\n  var iuMappings = new Map([[0x4B, 0x212A], [0x53, 0x17F], [0x6B, 0x212A], [0x73, 0x17F], [0xB5, 0x39C], [0xC5, 0x212B], [0xDF, 0x1E9E], [0xE5, 0x212B], [0x17F, 0x53], [0x1C4, 0x1C5], [0x1C5, 0x1C4], [0x1C7, 0x1C8], [0x1C8, 0x1C7], [0x1CA, 0x1CB], [0x1CB, 0x1CA], [0x1F1, 0x1F2], [0x1F2, 0x1F1], [0x26A, 0xA7AE], [0x282, 0xA7C5], [0x29D, 0xA7B2], [0x345, 0x1FBE], [0x392, 0x3D0], [0x395, 0x3F5], [0x398, 0x3F4], [0x399, 0x1FBE], [0x39A, 0x3F0], [0x39C, 0xB5], [0x3A0, 0x3D6], [0x3A1, 0x3F1], [0x3A3, 0x3C2], [0x3A6, 0x3D5], [0x3A9, 0x2126], [0x3B8, 0x3F4], [0x3C2, 0x3A3], [0x3C9, 0x2126], [0x3D0, 0x392], [0x3D1, 0x3F4], [0x3D5, 0x3A6], [0x3D6, 0x3A0], [0x3F0, 0x39A], [0x3F1, 0x3A1], [0x3F4, [0x398, 0x3D1, 0x3B8]], [0x3F5, 0x395], [0x412, 0x1C80], [0x414, 0x1C81], [0x41E, 0x1C82], [0x421, 0x1C83], [0x422, 0x1C85], [0x42A, 0x1C86], [0x432, 0x1C80], [0x434, 0x1C81], [0x43E, 0x1C82], [0x441, 0x1C83], [0x442, [0x1C84, 0x1C85]], [0x44A, 0x1C86], [0x462, 0x1C87], [0x463, 0x1C87], [0x10D0, 0x1C90], [0x10D1, 0x1C91], [0x10D2, 0x1C92], [0x10D3, 0x1C93], [0x10D4, 0x1C94], [0x10D5, 0x1C95], [0x10D6, 0x1C96], [0x10D7, 0x1C97], [0x10D8, 0x1C98], [0x10D9, 0x1C99], [0x10DA, 0x1C9A], [0x10DB, 0x1C9B], [0x10DC, 0x1C9C], [0x10DD, 0x1C9D], [0x10DE, 0x1C9E], [0x10DF, 0x1C9F], [0x10E0, 0x1CA0], [0x10E1, 0x1CA1], [0x10E2, 0x1CA2], [0x10E3, 0x1CA3], [0x10E4, 0x1CA4], [0x10E5, 0x1CA5], [0x10E6, 0x1CA6], [0x10E7, 0x1CA7], [0x10E8, 0x1CA8], [0x10E9, 0x1CA9], [0x10EA, 0x1CAA], [0x10EB, 0x1CAB], [0x10EC, 0x1CAC], [0x10ED, 0x1CAD], [0x10EE, 0x1CAE], [0x10EF, 0x1CAF], [0x10F0, 0x1CB0], [0x10F1, 0x1CB1], [0x10F2, 0x1CB2], [0x10F3, 0x1CB3], [0x10F4, 0x1CB4], [0x10F5, 0x1CB5], [0x10F6, 0x1CB6], [0x10F7, 0x1CB7], [0x10F8, 0x1CB8], [0x10F9, 0x1CB9], [0x10FA, 0x1CBA], [0x10FD, 0x1CBD], [0x10FE, 0x1CBE], [0x10FF, 0x1CBF], [0x13A0, 0xAB70], [0x13A1, 0xAB71], [0x13A2, 0xAB72], [0x13A3, 0xAB73], [0x13A4, 0xAB74], [0x13A5, 0xAB75], [0x13A6, 0xAB76], [0x13A7, 0xAB77], [0x13A8, 0xAB78], [0x13A9, 0xAB79], [0x13AA, 0xAB7A], [0x13AB, 0xAB7B], [0x13AC, 0xAB7C], [0x13AD, 0xAB7D], [0x13AE, 0xAB7E], [0x13AF, 0xAB7F], [0x13B0, 0xAB80], [0x13B1, 0xAB81], [0x13B2, 0xAB82], [0x13B3, 0xAB83], [0x13B4, 0xAB84], [0x13B5, 0xAB85], [0x13B6, 0xAB86], [0x13B7, 0xAB87], [0x13B8, 0xAB88], [0x13B9, 0xAB89], [0x13BA, 0xAB8A], [0x13BB, 0xAB8B], [0x13BC, 0xAB8C], [0x13BD, 0xAB8D], [0x13BE, 0xAB8E], [0x13BF, 0xAB8F], [0x13C0, 0xAB90], [0x13C1, 0xAB91], [0x13C2, 0xAB92], [0x13C3, 0xAB93], [0x13C4, 0xAB94], [0x13C5, 0xAB95], [0x13C6, 0xAB96], [0x13C7, 0xAB97], [0x13C8, 0xAB98], [0x13C9, 0xAB99], [0x13CA, 0xAB9A], [0x13CB, 0xAB9B], [0x13CC, 0xAB9C], [0x13CD, 0xAB9D], [0x13CE, 0xAB9E], [0x13CF, 0xAB9F], [0x13D0, 0xABA0], [0x13D1, 0xABA1], [0x13D2, 0xABA2], [0x13D3, 0xABA3], [0x13D4, 0xABA4], [0x13D5, 0xABA5], [0x13D6, 0xABA6], [0x13D7, 0xABA7], [0x13D8, 0xABA8], [0x13D9, 0xABA9], [0x13DA, 0xABAA], [0x13DB, 0xABAB], [0x13DC, 0xABAC], [0x13DD, 0xABAD], [0x13DE, 0xABAE], [0x13DF, 0xABAF], [0x13E0, 0xABB0], [0x13E1, 0xABB1], [0x13E2, 0xABB2], [0x13E3, 0xABB3], [0x13E4, 0xABB4], [0x13E5, 0xABB5], [0x13E6, 0xABB6], [0x13E7, 0xABB7], [0x13E8, 0xABB8], [0x13E9, 0xABB9], [0x13EA, 0xABBA], [0x13EB, 0xABBB], [0x13EC, 0xABBC], [0x13ED, 0xABBD], [0x13EE, 0xABBE], [0x13EF, 0xABBF], [0x13F0, 0x13F8], [0x13F1, 0x13F9], [0x13F2, 0x13FA], [0x13F3, 0x13FB], [0x13F4, 0x13FC], [0x13F5, 0x13FD], [0x13F8, 0x13F0], [0x13F9, 0x13F1], [0x13FA, 0x13F2], [0x13FB, 0x13F3], [0x13FC, 0x13F4], [0x13FD, 0x13F5], [0x1C80, [0x412, 0x432]], [0x1C81, [0x414, 0x434]], [0x1C82, [0x41E, 0x43E]], [0x1C83, [0x421, 0x441]], [0x1C84, [0x1C85, 0x442]], [0x1C85, [0x422, 0x1C84, 0x442]], [0x1C86, [0x42A, 0x44A]], [0x1C87, [0x462, 0x463]], [0x1C88, [0xA64A, 0xA64B]], [0x1C90, 0x10D0], [0x1C91, 0x10D1], [0x1C92, 0x10D2], [0x1C93, 0x10D3], [0x1C94, 0x10D4], [0x1C95, 0x10D5], [0x1C96, 0x10D6], [0x1C97, 0x10D7], [0x1C98, 0x10D8], [0x1C99, 0x10D9], [0x1C9A, 0x10DA], [0x1C9B, 0x10DB], [0x1C9C, 0x10DC], [0x1C9D, 0x10DD], [0x1C9E, 0x10DE], [0x1C9F, 0x10DF], [0x1CA0, 0x10E0], [0x1CA1, 0x10E1], [0x1CA2, 0x10E2], [0x1CA3, 0x10E3], [0x1CA4, 0x10E4], [0x1CA5, 0x10E5], [0x1CA6, 0x10E6], [0x1CA7, 0x10E7], [0x1CA8, 0x10E8], [0x1CA9, 0x10E9], [0x1CAA, 0x10EA], [0x1CAB, 0x10EB], [0x1CAC, 0x10EC], [0x1CAD, 0x10ED], [0x1CAE, 0x10EE], [0x1CAF, 0x10EF], [0x1CB0, 0x10F0], [0x1CB1, 0x10F1], [0x1CB2, 0x10F2], [0x1CB3, 0x10F3], [0x1CB4, 0x10F4], [0x1CB5, 0x10F5], [0x1CB6, 0x10F6], [0x1CB7, 0x10F7], [0x1CB8, 0x10F8], [0x1CB9, 0x10F9], [0x1CBA, 0x10FA], [0x1CBD, 0x10FD], [0x1CBE, 0x10FE], [0x1CBF, 0x10FF], [0x1D8E, 0xA7C6], [0x1E60, 0x1E9B], [0x1E9B, 0x1E60], [0x1E9E, 0xDF], [0x1F80, 0x1F88], [0x1F81, 0x1F89], [0x1F82, 0x1F8A], [0x1F83, 0x1F8B], [0x1F84, 0x1F8C], [0x1F85, 0x1F8D], [0x1F86, 0x1F8E], [0x1F87, 0x1F8F], [0x1F88, 0x1F80], [0x1F89, 0x1F81], [0x1F8A, 0x1F82], [0x1F8B, 0x1F83], [0x1F8C, 0x1F84], [0x1F8D, 0x1F85], [0x1F8E, 0x1F86], [0x1F8F, 0x1F87], [0x1F90, 0x1F98], [0x1F91, 0x1F99], [0x1F92, 0x1F9A], [0x1F93, 0x1F9B], [0x1F94, 0x1F9C], [0x1F95, 0x1F9D], [0x1F96, 0x1F9E], [0x1F97, 0x1F9F], [0x1F98, 0x1F90], [0x1F99, 0x1F91], [0x1F9A, 0x1F92], [0x1F9B, 0x1F93], [0x1F9C, 0x1F94], [0x1F9D, 0x1F95], [0x1F9E, 0x1F96], [0x1F9F, 0x1F97], [0x1FA0, 0x1FA8], [0x1FA1, 0x1FA9], [0x1FA2, 0x1FAA], [0x1FA3, 0x1FAB], [0x1FA4, 0x1FAC], [0x1FA5, 0x1FAD], [0x1FA6, 0x1FAE], [0x1FA7, 0x1FAF], [0x1FA8, 0x1FA0], [0x1FA9, 0x1FA1], [0x1FAA, 0x1FA2], [0x1FAB, 0x1FA3], [0x1FAC, 0x1FA4], [0x1FAD, 0x1FA5], [0x1FAE, 0x1FA6], [0x1FAF, 0x1FA7], [0x1FB3, 0x1FBC], [0x1FBC, 0x1FB3], [0x1FBE, [0x345, 0x399]], [0x1FC3, 0x1FCC], [0x1FCC, 0x1FC3], [0x1FF3, 0x1FFC], [0x1FFC, 0x1FF3], [0x2126, [0x3A9, 0x3C9]], [0x212A, 0x4B], [0x212B, [0xC5, 0xE5]], [0xA64A, 0x1C88], [0xA64B, 0x1C88], [0xA794, 0xA7C4], [0xA7AE, 0x26A], [0xA7B2, 0x29D], [0xA7B3, 0xAB53], [0xA7B4, 0xA7B5], [0xA7B5, 0xA7B4], [0xA7B6, 0xA7B7], [0xA7B7, 0xA7B6], [0xA7B8, 0xA7B9], [0xA7B9, 0xA7B8], [0xA7BA, 0xA7BB], [0xA7BB, 0xA7BA], [0xA7BC, 0xA7BD], [0xA7BD, 0xA7BC], [0xA7BE, 0xA7BF], [0xA7BF, 0xA7BE], [0xA7C2, 0xA7C3], [0xA7C3, 0xA7C2], [0xA7C4, 0xA794], [0xA7C5, 0x282], [0xA7C6, 0x1D8E], [0xAB53, 0xA7B3], [0xAB70, 0x13A0], [0xAB71, 0x13A1], [0xAB72, 0x13A2], [0xAB73, 0x13A3], [0xAB74, 0x13A4], [0xAB75, 0x13A5], [0xAB76, 0x13A6], [0xAB77, 0x13A7], [0xAB78, 0x13A8], [0xAB79, 0x13A9], [0xAB7A, 0x13AA], [0xAB7B, 0x13AB], [0xAB7C, 0x13AC], [0xAB7D, 0x13AD], [0xAB7E, 0x13AE], [0xAB7F, 0x13AF], [0xAB80, 0x13B0], [0xAB81, 0x13B1], [0xAB82, 0x13B2], [0xAB83, 0x13B3], [0xAB84, 0x13B4], [0xAB85, 0x13B5], [0xAB86, 0x13B6], [0xAB87, 0x13B7], [0xAB88, 0x13B8], [0xAB89, 0x13B9], [0xAB8A, 0x13BA], [0xAB8B, 0x13BB], [0xAB8C, 0x13BC], [0xAB8D, 0x13BD], [0xAB8E, 0x13BE], [0xAB8F, 0x13BF], [0xAB90, 0x13C0], [0xAB91, 0x13C1], [0xAB92, 0x13C2], [0xAB93, 0x13C3], [0xAB94, 0x13C4], [0xAB95, 0x13C5], [0xAB96, 0x13C6], [0xAB97, 0x13C7], [0xAB98, 0x13C8], [0xAB99, 0x13C9], [0xAB9A, 0x13CA], [0xAB9B, 0x13CB], [0xAB9C, 0x13CC], [0xAB9D, 0x13CD], [0xAB9E, 0x13CE], [0xAB9F, 0x13CF], [0xABA0, 0x13D0], [0xABA1, 0x13D1], [0xABA2, 0x13D2], [0xABA3, 0x13D3], [0xABA4, 0x13D4], [0xABA5, 0x13D5], [0xABA6, 0x13D6], [0xABA7, 0x13D7], [0xABA8, 0x13D8], [0xABA9, 0x13D9], [0xABAA, 0x13DA], [0xABAB, 0x13DB], [0xABAC, 0x13DC], [0xABAD, 0x13DD], [0xABAE, 0x13DE], [0xABAF, 0x13DF], [0xABB0, 0x13E0], [0xABB1, 0x13E1], [0xABB2, 0x13E2], [0xABB3, 0x13E3], [0xABB4, 0x13E4], [0xABB5, 0x13E5], [0xABB6, 0x13E6], [0xABB7, 0x13E7], [0xABB8, 0x13E8], [0xABB9, 0x13E9], [0xABBA, 0x13EA], [0xABBB, 0x13EB], [0xABBC, 0x13EC], [0xABBD, 0x13ED], [0xABBE, 0x13EE], [0xABBF, 0x13EF], [0x10400, 0x10428], [0x10401, 0x10429], [0x10402, 0x1042A], [0x10403, 0x1042B], [0x10404, 0x1042C], [0x10405, 0x1042D], [0x10406, 0x1042E], [0x10407, 0x1042F], [0x10408, 0x10430], [0x10409, 0x10431], [0x1040A, 0x10432], [0x1040B, 0x10433], [0x1040C, 0x10434], [0x1040D, 0x10435], [0x1040E, 0x10436], [0x1040F, 0x10437], [0x10410, 0x10438], [0x10411, 0x10439], [0x10412, 0x1043A], [0x10413, 0x1043B], [0x10414, 0x1043C], [0x10415, 0x1043D], [0x10416, 0x1043E], [0x10417, 0x1043F], [0x10418, 0x10440], [0x10419, 0x10441], [0x1041A, 0x10442], [0x1041B, 0x10443], [0x1041C, 0x10444], [0x1041D, 0x10445], [0x1041E, 0x10446], [0x1041F, 0x10447], [0x10420, 0x10448], [0x10421, 0x10449], [0x10422, 0x1044A], [0x10423, 0x1044B], [0x10424, 0x1044C], [0x10425, 0x1044D], [0x10426, 0x1044E], [0x10427, 0x1044F], [0x10428, 0x10400], [0x10429, 0x10401], [0x1042A, 0x10402], [0x1042B, 0x10403], [0x1042C, 0x10404], [0x1042D, 0x10405], [0x1042E, 0x10406], [0x1042F, 0x10407], [0x10430, 0x10408], [0x10431, 0x10409], [0x10432, 0x1040A], [0x10433, 0x1040B], [0x10434, 0x1040C], [0x10435, 0x1040D], [0x10436, 0x1040E], [0x10437, 0x1040F], [0x10438, 0x10410], [0x10439, 0x10411], [0x1043A, 0x10412], [0x1043B, 0x10413], [0x1043C, 0x10414], [0x1043D, 0x10415], [0x1043E, 0x10416], [0x1043F, 0x10417], [0x10440, 0x10418], [0x10441, 0x10419], [0x10442, 0x1041A], [0x10443, 0x1041B], [0x10444, 0x1041C], [0x10445, 0x1041D], [0x10446, 0x1041E], [0x10447, 0x1041F], [0x10448, 0x10420], [0x10449, 0x10421], [0x1044A, 0x10422], [0x1044B, 0x10423], [0x1044C, 0x10424], [0x1044D, 0x10425], [0x1044E, 0x10426], [0x1044F, 0x10427], [0x104B0, 0x104D8], [0x104B1, 0x104D9], [0x104B2, 0x104DA], [0x104B3, 0x104DB], [0x104B4, 0x104DC], [0x104B5, 0x104DD], [0x104B6, 0x104DE], [0x104B7, 0x104DF], [0x104B8, 0x104E0], [0x104B9, 0x104E1], [0x104BA, 0x104E2], [0x104BB, 0x104E3], [0x104BC, 0x104E4], [0x104BD, 0x104E5], [0x104BE, 0x104E6], [0x104BF, 0x104E7], [0x104C0, 0x104E8], [0x104C1, 0x104E9], [0x104C2, 0x104EA], [0x104C3, 0x104EB], [0x104C4, 0x104EC], [0x104C5, 0x104ED], [0x104C6, 0x104EE], [0x104C7, 0x104EF], [0x104C8, 0x104F0], [0x104C9, 0x104F1], [0x104CA, 0x104F2], [0x104CB, 0x104F3], [0x104CC, 0x104F4], [0x104CD, 0x104F5], [0x104CE, 0x104F6], [0x104CF, 0x104F7], [0x104D0, 0x104F8], [0x104D1, 0x104F9], [0x104D2, 0x104FA], [0x104D3, 0x104FB], [0x104D8, 0x104B0], [0x104D9, 0x104B1], [0x104DA, 0x104B2], [0x104DB, 0x104B3], [0x104DC, 0x104B4], [0x104DD, 0x104B5], [0x104DE, 0x104B6], [0x104DF, 0x104B7], [0x104E0, 0x104B8], [0x104E1, 0x104B9], [0x104E2, 0x104BA], [0x104E3, 0x104BB], [0x104E4, 0x104BC], [0x104E5, 0x104BD], [0x104E6, 0x104BE], [0x104E7, 0x104BF], [0x104E8, 0x104C0], [0x104E9, 0x104C1], [0x104EA, 0x104C2], [0x104EB, 0x104C3], [0x104EC, 0x104C4], [0x104ED, 0x104C5], [0x104EE, 0x104C6], [0x104EF, 0x104C7], [0x104F0, 0x104C8], [0x104F1, 0x104C9], [0x104F2, 0x104CA], [0x104F3, 0x104CB], [0x104F4, 0x104CC], [0x104F5, 0x104CD], [0x104F6, 0x104CE], [0x104F7, 0x104CF], [0x104F8, 0x104D0], [0x104F9, 0x104D1], [0x104FA, 0x104D2], [0x104FB, 0x104D3], [0x10C80, 0x10CC0], [0x10C81, 0x10CC1], [0x10C82, 0x10CC2], [0x10C83, 0x10CC3], [0x10C84, 0x10CC4], [0x10C85, 0x10CC5], [0x10C86, 0x10CC6], [0x10C87, 0x10CC7], [0x10C88, 0x10CC8], [0x10C89, 0x10CC9], [0x10C8A, 0x10CCA], [0x10C8B, 0x10CCB], [0x10C8C, 0x10CCC], [0x10C8D, 0x10CCD], [0x10C8E, 0x10CCE], [0x10C8F, 0x10CCF], [0x10C90, 0x10CD0], [0x10C91, 0x10CD1], [0x10C92, 0x10CD2], [0x10C93, 0x10CD3], [0x10C94, 0x10CD4], [0x10C95, 0x10CD5], [0x10C96, 0x10CD6], [0x10C97, 0x10CD7], [0x10C98, 0x10CD8], [0x10C99, 0x10CD9], [0x10C9A, 0x10CDA], [0x10C9B, 0x10CDB], [0x10C9C, 0x10CDC], [0x10C9D, 0x10CDD], [0x10C9E, 0x10CDE], [0x10C9F, 0x10CDF], [0x10CA0, 0x10CE0], [0x10CA1, 0x10CE1], [0x10CA2, 0x10CE2], [0x10CA3, 0x10CE3], [0x10CA4, 0x10CE4], [0x10CA5, 0x10CE5], [0x10CA6, 0x10CE6], [0x10CA7, 0x10CE7], [0x10CA8, 0x10CE8], [0x10CA9, 0x10CE9], [0x10CAA, 0x10CEA], [0x10CAB, 0x10CEB], [0x10CAC, 0x10CEC], [0x10CAD, 0x10CED], [0x10CAE, 0x10CEE], [0x10CAF, 0x10CEF], [0x10CB0, 0x10CF0], [0x10CB1, 0x10CF1], [0x10CB2, 0x10CF2], [0x10CC0, 0x10C80], [0x10CC1, 0x10C81], [0x10CC2, 0x10C82], [0x10CC3, 0x10C83], [0x10CC4, 0x10C84], [0x10CC5, 0x10C85], [0x10CC6, 0x10C86], [0x10CC7, 0x10C87], [0x10CC8, 0x10C88], [0x10CC9, 0x10C89], [0x10CCA, 0x10C8A], [0x10CCB, 0x10C8B], [0x10CCC, 0x10C8C], [0x10CCD, 0x10C8D], [0x10CCE, 0x10C8E], [0x10CCF, 0x10C8F], [0x10CD0, 0x10C90], [0x10CD1, 0x10C91], [0x10CD2, 0x10C92], [0x10CD3, 0x10C93], [0x10CD4, 0x10C94], [0x10CD5, 0x10C95], [0x10CD6, 0x10C96], [0x10CD7, 0x10C97], [0x10CD8, 0x10C98], [0x10CD9, 0x10C99], [0x10CDA, 0x10C9A], [0x10CDB, 0x10C9B], [0x10CDC, 0x10C9C], [0x10CDD, 0x10C9D], [0x10CDE, 0x10C9E], [0x10CDF, 0x10C9F], [0x10CE0, 0x10CA0], [0x10CE1, 0x10CA1], [0x10CE2, 0x10CA2], [0x10CE3, 0x10CA3], [0x10CE4, 0x10CA4], [0x10CE5, 0x10CA5], [0x10CE6, 0x10CA6], [0x10CE7, 0x10CA7], [0x10CE8, 0x10CA8], [0x10CE9, 0x10CA9], [0x10CEA, 0x10CAA], [0x10CEB, 0x10CAB], [0x10CEC, 0x10CAC], [0x10CED, 0x10CAD], [0x10CEE, 0x10CAE], [0x10CEF, 0x10CAF], [0x10CF0, 0x10CB0], [0x10CF1, 0x10CB1], [0x10CF2, 0x10CB2], [0x118A0, 0x118C0], [0x118A1, 0x118C1], [0x118A2, 0x118C2], [0x118A3, 0x118C3], [0x118A4, 0x118C4], [0x118A5, 0x118C5], [0x118A6, 0x118C6], [0x118A7, 0x118C7], [0x118A8, 0x118C8], [0x118A9, 0x118C9], [0x118AA, 0x118CA], [0x118AB, 0x118CB], [0x118AC, 0x118CC], [0x118AD, 0x118CD], [0x118AE, 0x118CE], [0x118AF, 0x118CF], [0x118B0, 0x118D0], [0x118B1, 0x118D1], [0x118B2, 0x118D2], [0x118B3, 0x118D3], [0x118B4, 0x118D4], [0x118B5, 0x118D5], [0x118B6, 0x118D6], [0x118B7, 0x118D7], [0x118B8, 0x118D8], [0x118B9, 0x118D9], [0x118BA, 0x118DA], [0x118BB, 0x118DB], [0x118BC, 0x118DC], [0x118BD, 0x118DD], [0x118BE, 0x118DE], [0x118BF, 0x118DF], [0x118C0, 0x118A0], [0x118C1, 0x118A1], [0x118C2, 0x118A2], [0x118C3, 0x118A3], [0x118C4, 0x118A4], [0x118C5, 0x118A5], [0x118C6, 0x118A6], [0x118C7, 0x118A7], [0x118C8, 0x118A8], [0x118C9, 0x118A9], [0x118CA, 0x118AA], [0x118CB, 0x118AB], [0x118CC, 0x118AC], [0x118CD, 0x118AD], [0x118CE, 0x118AE], [0x118CF, 0x118AF], [0x118D0, 0x118B0], [0x118D1, 0x118B1], [0x118D2, 0x118B2], [0x118D3, 0x118B3], [0x118D4, 0x118B4], [0x118D5, 0x118B5], [0x118D6, 0x118B6], [0x118D7, 0x118B7], [0x118D8, 0x118B8], [0x118D9, 0x118B9], [0x118DA, 0x118BA], [0x118DB, 0x118BB], [0x118DC, 0x118BC], [0x118DD, 0x118BD], [0x118DE, 0x118BE], [0x118DF, 0x118BF], [0x16E40, 0x16E60], [0x16E41, 0x16E61], [0x16E42, 0x16E62], [0x16E43, 0x16E63], [0x16E44, 0x16E64], [0x16E45, 0x16E65], [0x16E46, 0x16E66], [0x16E47, 0x16E67], [0x16E48, 0x16E68], [0x16E49, 0x16E69], [0x16E4A, 0x16E6A], [0x16E4B, 0x16E6B], [0x16E4C, 0x16E6C], [0x16E4D, 0x16E6D], [0x16E4E, 0x16E6E], [0x16E4F, 0x16E6F], [0x16E50, 0x16E70], [0x16E51, 0x16E71], [0x16E52, 0x16E72], [0x16E53, 0x16E73], [0x16E54, 0x16E74], [0x16E55, 0x16E75], [0x16E56, 0x16E76], [0x16E57, 0x16E77], [0x16E58, 0x16E78], [0x16E59, 0x16E79], [0x16E5A, 0x16E7A], [0x16E5B, 0x16E7B], [0x16E5C, 0x16E7C], [0x16E5D, 0x16E7D], [0x16E5E, 0x16E7E], [0x16E5F, 0x16E7F], [0x16E60, 0x16E40], [0x16E61, 0x16E41], [0x16E62, 0x16E42], [0x16E63, 0x16E43], [0x16E64, 0x16E44], [0x16E65, 0x16E45], [0x16E66, 0x16E46], [0x16E67, 0x16E47], [0x16E68, 0x16E48], [0x16E69, 0x16E49], [0x16E6A, 0x16E4A], [0x16E6B, 0x16E4B], [0x16E6C, 0x16E4C], [0x16E6D, 0x16E4D], [0x16E6E, 0x16E4E], [0x16E6F, 0x16E4F], [0x16E70, 0x16E50], [0x16E71, 0x16E51], [0x16E72, 0x16E52], [0x16E73, 0x16E53], [0x16E74, 0x16E54], [0x16E75, 0x16E55], [0x16E76, 0x16E56], [0x16E77, 0x16E57], [0x16E78, 0x16E58], [0x16E79, 0x16E59], [0x16E7A, 0x16E5A], [0x16E7B, 0x16E5B], [0x16E7C, 0x16E5C], [0x16E7D, 0x16E5D], [0x16E7E, 0x16E5E], [0x16E7F, 0x16E5F], [0x1E900, 0x1E922], [0x1E901, 0x1E923], [0x1E902, 0x1E924], [0x1E903, 0x1E925], [0x1E904, 0x1E926], [0x1E905, 0x1E927], [0x1E906, 0x1E928], [0x1E907, 0x1E929], [0x1E908, 0x1E92A], [0x1E909, 0x1E92B], [0x1E90A, 0x1E92C], [0x1E90B, 0x1E92D], [0x1E90C, 0x1E92E], [0x1E90D, 0x1E92F], [0x1E90E, 0x1E930], [0x1E90F, 0x1E931], [0x1E910, 0x1E932], [0x1E911, 0x1E933], [0x1E912, 0x1E934], [0x1E913, 0x1E935], [0x1E914, 0x1E936], [0x1E915, 0x1E937], [0x1E916, 0x1E938], [0x1E917, 0x1E939], [0x1E918, 0x1E93A], [0x1E919, 0x1E93B], [0x1E91A, 0x1E93C], [0x1E91B, 0x1E93D], [0x1E91C, 0x1E93E], [0x1E91D, 0x1E93F], [0x1E91E, 0x1E940], [0x1E91F, 0x1E941], [0x1E920, 0x1E942], [0x1E921, 0x1E943], [0x1E922, 0x1E900], [0x1E923, 0x1E901], [0x1E924, 0x1E902], [0x1E925, 0x1E903], [0x1E926, 0x1E904], [0x1E927, 0x1E905], [0x1E928, 0x1E906], [0x1E929, 0x1E907], [0x1E92A, 0x1E908], [0x1E92B, 0x1E909], [0x1E92C, 0x1E90A], [0x1E92D, 0x1E90B], [0x1E92E, 0x1E90C], [0x1E92F, 0x1E90D], [0x1E930, 0x1E90E], [0x1E931, 0x1E90F], [0x1E932, 0x1E910], [0x1E933, 0x1E911], [0x1E934, 0x1E912], [0x1E935, 0x1E913], [0x1E936, 0x1E914], [0x1E937, 0x1E915], [0x1E938, 0x1E916], [0x1E939, 0x1E917], [0x1E93A, 0x1E918], [0x1E93B, 0x1E919], [0x1E93C, 0x1E91A], [0x1E93D, 0x1E91B], [0x1E93E, 0x1E91C], [0x1E93F, 0x1E91D], [0x1E940, 0x1E91E], [0x1E941, 0x1E91F], [0x1E942, 0x1E920], [0x1E943, 0x1E921]]);\n  var REGULAR = new Map([['d', regenerate().addRange(0x30, 0x39)], ['D', regenerate().addRange(0x0, 0x2F).addRange(0x3A, 0xFFFF)], ['s', regenerate(0x20, 0xA0, 0x1680, 0x202F, 0x205F, 0x3000, 0xFEFF).addRange(0x9, 0xD).addRange(0x2000, 0x200A).addRange(0x2028, 0x2029)], ['S', regenerate().addRange(0x0, 0x8).addRange(0xE, 0x1F).addRange(0x21, 0x9F).addRange(0xA1, 0x167F).addRange(0x1681, 0x1FFF).addRange(0x200B, 0x2027).addRange(0x202A, 0x202E).addRange(0x2030, 0x205E).addRange(0x2060, 0x2FFF).addRange(0x3001, 0xFEFE).addRange(0xFF00, 0xFFFF)], ['w', regenerate(0x5F).addRange(0x30, 0x39).addRange(0x41, 0x5A).addRange(0x61, 0x7A)], ['W', regenerate(0x60).addRange(0x0, 0x2F).addRange(0x3A, 0x40).addRange(0x5B, 0x5E).addRange(0x7B, 0xFFFF)]]);\n  var UNICODE = new Map([['d', regenerate().addRange(0x30, 0x39)], ['D', regenerate().addRange(0x0, 0x2F).addRange(0x3A, 0x10FFFF)], ['s', regenerate(0x20, 0xA0, 0x1680, 0x202F, 0x205F, 0x3000, 0xFEFF).addRange(0x9, 0xD).addRange(0x2000, 0x200A).addRange(0x2028, 0x2029)], ['S', regenerate().addRange(0x0, 0x8).addRange(0xE, 0x1F).addRange(0x21, 0x9F).addRange(0xA1, 0x167F).addRange(0x1681, 0x1FFF).addRange(0x200B, 0x2027).addRange(0x202A, 0x202E).addRange(0x2030, 0x205E).addRange(0x2060, 0x2FFF).addRange(0x3001, 0xFEFE).addRange(0xFF00, 0x10FFFF)], ['w', regenerate(0x5F).addRange(0x30, 0x39).addRange(0x41, 0x5A).addRange(0x61, 0x7A)], ['W', regenerate(0x60).addRange(0x0, 0x2F).addRange(0x3A, 0x40).addRange(0x5B, 0x5E).addRange(0x7B, 0x10FFFF)]]);\n  var UNICODE_IGNORE_CASE = new Map([['d', regenerate().addRange(0x30, 0x39)], ['D', regenerate().addRange(0x0, 0x2F).addRange(0x3A, 0x10FFFF)], ['s', regenerate(0x20, 0xA0, 0x1680, 0x202F, 0x205F, 0x3000, 0xFEFF).addRange(0x9, 0xD).addRange(0x2000, 0x200A).addRange(0x2028, 0x2029)], ['S', regenerate().addRange(0x0, 0x8).addRange(0xE, 0x1F).addRange(0x21, 0x9F).addRange(0xA1, 0x167F).addRange(0x1681, 0x1FFF).addRange(0x200B, 0x2027).addRange(0x202A, 0x202E).addRange(0x2030, 0x205E).addRange(0x2060, 0x2FFF).addRange(0x3001, 0xFEFE).addRange(0xFF00, 0x10FFFF)], ['w', regenerate(0x5F, 0x17F, 0x212A).addRange(0x30, 0x39).addRange(0x41, 0x5A).addRange(0x61, 0x7A)], ['W', regenerate(0x60).addRange(0x0, 0x2F).addRange(0x3A, 0x40).addRange(0x5B, 0x5E).addRange(0x7B, 0x17E).addRange(0x180, 0x2129).addRange(0x212B, 0x10FFFF)]]);\n  var characterClassEscapeSets = {\n    REGULAR: REGULAR,\n    UNICODE: UNICODE,\n    UNICODE_IGNORE_CASE: UNICODE_IGNORE_CASE\n  };\n  var generate = regjsgen.generate;\n  var parse$1 = parser.parse; // Prepare a Regenerate set containing all code points, used for negative\n  // character classes (if any).\n\n  var UNICODE_SET = regenerate().addRange(0x0, 0x10FFFF); // Without the `u` flag, the range stops at 0xFFFF.\n  // https://mths.be/es6#sec-pattern-semantics\n\n  var BMP_SET = regenerate().addRange(0x0, 0xFFFF); // Prepare a Regenerate set containing all code points that are supposed to be\n  // matched by `/./u`. https://mths.be/es6#sec-atom\n\n  var DOT_SET_UNICODE = UNICODE_SET.clone() // all Unicode code points\n  .remove( // minus `LineTerminator`s (https://mths.be/es6#sec-line-terminators):\n  0x000A, // Line Feed <LF>\n  0x000D, // Carriage Return <CR>\n  0x2028, // Line Separator <LS>\n  0x2029 // Paragraph Separator <PS>\n  ); // Prepare a Regenerate set containing all code points that are supposed to be\n  // matched by `/./` (only BMP code points).\n\n  var DOT_SET = DOT_SET_UNICODE.clone().intersection(BMP_SET);\n\n  var getCharacterClassEscapeSet = function getCharacterClassEscapeSet(character, unicode, ignoreCase) {\n    if (unicode) {\n      if (ignoreCase) {\n        return characterClassEscapeSets.UNICODE_IGNORE_CASE.get(character);\n      }\n\n      return characterClassEscapeSets.UNICODE.get(character);\n    }\n\n    return characterClassEscapeSets.REGULAR.get(character);\n  };\n\n  var getDotSet = function getDotSet(unicode, dotAll) {\n    if (dotAll) {\n      return unicode ? UNICODE_SET : BMP_SET;\n    }\n\n    return unicode ? DOT_SET_UNICODE : DOT_SET;\n  };\n\n  var getUnicodePropertyValueSet = function getUnicodePropertyValueSet(property, value) {\n    var path = value ? property + \"/\" + value : \"Binary_Property/\" + property;\n\n    try {\n      return commonjsRequire(\"regenerate-unicode-properties/\" + path + \".js\");\n    } catch (exception) {\n      throw new Error(\"Failed to recognize value `\" + value + \"` for property \" + \"`\" + property + \"`.\");\n    }\n  };\n\n  var handleLoneUnicodePropertyNameOrValue = function handleLoneUnicodePropertyNameOrValue(value) {\n    // It could be a `General_Category` value or a binary property.\n    // Note: `unicodeMatchPropertyValue` throws on invalid values.\n    try {\n      var property$1 = 'General_Category';\n      var category = unicodeMatchPropertyValueEcmascript(property$1, value);\n      return getUnicodePropertyValueSet(property$1, category);\n    } catch (exception) {} // It’s not a `General_Category` value, so check if it’s a binary\n    // property. Note: `unicodeMatchProperty` throws on invalid properties.\n\n\n    var property = unicodeMatchPropertyEcmascript(value);\n    return getUnicodePropertyValueSet(property);\n  };\n\n  var getUnicodePropertyEscapeSet = function getUnicodePropertyEscapeSet(value, isNegative) {\n    var parts = value.split('=');\n    var firstPart = parts[0];\n    var set;\n\n    if (parts.length == 1) {\n      set = handleLoneUnicodePropertyNameOrValue(firstPart);\n    } else {\n      // The pattern consists of two parts, i.e. `Property=Value`.\n      var property = unicodeMatchPropertyEcmascript(firstPart);\n      var value$1 = unicodeMatchPropertyValueEcmascript(property, parts[1]);\n      set = getUnicodePropertyValueSet(property, value$1);\n    }\n\n    if (isNegative) {\n      return UNICODE_SET.clone().remove(set);\n    }\n\n    return set.clone();\n  }; // Given a range of code points, add any case-folded code points in that range\n  // to a set.\n\n\n  regenerate.prototype.iuAddRange = function (min, max) {\n    var $this = this;\n\n    do {\n      var folded = caseFold(min);\n\n      if (folded) {\n        $this.add(folded);\n      }\n    } while (++min <= max);\n\n    return $this;\n  };\n\n  var update = function update(item, pattern) {\n    var tree = parse$1(pattern, config.useUnicodeFlag ? 'u' : '');\n\n    switch (tree.type) {\n      case 'characterClass':\n      case 'group':\n      case 'value':\n        // No wrapping needed.\n        break;\n\n      default:\n        // Wrap the pattern in a non-capturing group.\n        tree = wrap(tree, pattern);\n    }\n\n    Object.assign(item, tree);\n  };\n\n  var wrap = function wrap(tree, pattern) {\n    // Wrap the pattern in a non-capturing group.\n    return {\n      'type': 'group',\n      'behavior': 'ignore',\n      'body': [tree],\n      'raw': \"(?:\" + pattern + \")\"\n    };\n  };\n\n  var caseFold = function caseFold(codePoint) {\n    return iuMappings.get(codePoint) || false;\n  };\n\n  var processCharacterClass = function processCharacterClass(characterClassItem, regenerateOptions) {\n    var set = regenerate();\n\n    for (var i = 0, list = characterClassItem.body; i < list.length; i += 1) {\n      var item = list[i];\n\n      switch (item.type) {\n        case 'value':\n          set.add(item.codePoint);\n\n          if (config.ignoreCase && config.unicode && !config.useUnicodeFlag) {\n            var folded = caseFold(item.codePoint);\n\n            if (folded) {\n              set.add(folded);\n            }\n          }\n\n          break;\n\n        case 'characterClassRange':\n          var min = item.min.codePoint;\n          var max = item.max.codePoint;\n          set.addRange(min, max);\n\n          if (config.ignoreCase && config.unicode && !config.useUnicodeFlag) {\n            set.iuAddRange(min, max);\n          }\n\n          break;\n\n        case 'characterClassEscape':\n          set.add(getCharacterClassEscapeSet(item.value, config.unicode, config.ignoreCase));\n          break;\n\n        case 'unicodePropertyEscape':\n          set.add(getUnicodePropertyEscapeSet(item.value, item.negative));\n          break;\n        // The `default` clause is only here as a safeguard; it should never be\n        // reached. Code coverage tools should ignore it.\n\n        /* istanbul ignore next */\n\n        default:\n          throw new Error(\"Unknown term type: \" + item.type);\n      }\n    }\n\n    if (characterClassItem.negative) {\n      set = (config.unicode ? UNICODE_SET : BMP_SET).clone().remove(set);\n    }\n\n    update(characterClassItem, set.toString(regenerateOptions));\n    return characterClassItem;\n  };\n\n  var updateNamedReference = function updateNamedReference(item, index) {\n    delete item.name;\n    item.matchIndex = index;\n  };\n\n  var assertNoUnmatchedReferences = function assertNoUnmatchedReferences(groups) {\n    var unmatchedReferencesNames = Object.keys(groups.unmatchedReferences);\n\n    if (unmatchedReferencesNames.length > 0) {\n      throw new Error(\"Unknown group names: \" + unmatchedReferencesNames);\n    }\n  };\n\n  var processTerm = function processTerm(item, regenerateOptions, groups) {\n    switch (item.type) {\n      case 'dot':\n        update(item, getDotSet(config.unicode, config.dotAll).toString(regenerateOptions));\n        break;\n\n      case 'characterClass':\n        item = processCharacterClass(item, regenerateOptions);\n        break;\n\n      case 'unicodePropertyEscape':\n        update(item, getUnicodePropertyEscapeSet(item.value, item.negative).toString(regenerateOptions));\n        break;\n\n      case 'characterClassEscape':\n        update(item, getCharacterClassEscapeSet(item.value, config.unicode, config.ignoreCase).toString(regenerateOptions));\n        break;\n\n      case 'group':\n        groups.lastIndex++;\n\n        if (item.name) {\n          var name = item.name.value;\n\n          if (groups.names[name]) {\n            throw new Error(\"Multiple groups with the same name (\" + name + \") are not allowed.\");\n          }\n\n          var index = groups.lastIndex;\n          delete item.name;\n          groups.names[name] = index;\n\n          if (groups.onNamedGroup) {\n            groups.onNamedGroup.call(null, name, index);\n          }\n\n          if (groups.unmatchedReferences[name]) {\n            groups.unmatchedReferences[name].forEach(function (reference) {\n              updateNamedReference(reference, index);\n            });\n            delete groups.unmatchedReferences[name];\n          }\n        }\n\n      /* falls through */\n\n      case 'alternative':\n      case 'disjunction':\n      case 'quantifier':\n        item.body = item.body.map(function (term) {\n          return processTerm(term, regenerateOptions, groups);\n        });\n        break;\n\n      case 'value':\n        var codePoint = item.codePoint;\n        var set = regenerate(codePoint);\n\n        if (config.ignoreCase && config.unicode && !config.useUnicodeFlag) {\n          var folded = caseFold(codePoint);\n\n          if (folded) {\n            set.add(folded);\n          }\n        }\n\n        update(item, set.toString(regenerateOptions));\n        break;\n\n      case 'reference':\n        if (item.name) {\n          var name$1 = item.name.value;\n          var index$1 = groups.names[name$1];\n\n          if (index$1) {\n            updateNamedReference(item, index$1);\n            break;\n          }\n\n          if (!groups.unmatchedReferences[name$1]) {\n            groups.unmatchedReferences[name$1] = [];\n          } // Keep track of references used before the corresponding group.\n\n\n          groups.unmatchedReferences[name$1].push(item);\n        }\n\n        break;\n\n      case 'anchor':\n      case 'empty':\n      case 'group':\n        // Nothing to do here.\n        break;\n      // The `default` clause is only here as a safeguard; it should never be\n      // reached. Code coverage tools should ignore it.\n\n      /* istanbul ignore next */\n\n      default:\n        throw new Error(\"Unknown term type: \" + item.type);\n    }\n\n    return item;\n  };\n\n  var config = {\n    'ignoreCase': false,\n    'unicode': false,\n    'dotAll': false,\n    'useUnicodeFlag': false\n  };\n\n  var rewritePattern = function rewritePattern(pattern, flags, options) {\n    var regjsparserFeatures = {\n      'unicodePropertyEscape': options && options.unicodePropertyEscape,\n      'namedGroups': options && options.namedGroup,\n      'lookbehind': options && options.lookbehind\n    };\n    config.ignoreCase = flags && flags.includes('i');\n    config.unicode = flags && flags.includes('u');\n    var supportDotAllFlag = options && options.dotAllFlag;\n    config.dotAll = supportDotAllFlag && flags && flags.includes('s');\n    config.useUnicodeFlag = options && options.useUnicodeFlag;\n    var regenerateOptions = {\n      'hasUnicodeFlag': config.useUnicodeFlag,\n      'bmpOnly': !config.unicode\n    };\n    var groups = {\n      'onNamedGroup': options && options.onNamedGroup,\n      'lastIndex': 0,\n      'names': Object.create(null),\n      // { [name]: index }\n      'unmatchedReferences': Object.create(null) // { [name]: Array<reference> }\n\n    };\n    var tree = parse$1(pattern, flags, regjsparserFeatures); // Note: `processTerm` mutates `tree` and `groups`.\n\n    processTerm(tree, regenerateOptions, groups);\n    assertNoUnmatchedReferences(groups);\n    return generate(tree);\n  };\n\n  var rewritePattern_1 = rewritePattern;\n  var nonAsciiLsOrPs = /[\\u2028-\\u2029]/g;\n\n  var Literal =\n  /*@__PURE__*/\n  function (Node) {\n    function Literal() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) Literal.__proto__ = Node;\n    Literal.prototype = Object.create(Node && Node.prototype);\n    Literal.prototype.constructor = Literal;\n\n    Literal.prototype.initialise = function initialise() {\n      if (typeof this.value === 'string') {\n        this.program.indentExclusionElements.push(this);\n      }\n    };\n\n    Literal.prototype.transpile = function transpile(code, transforms) {\n      if (transforms.numericLiteral) {\n        if (this.raw.match(/^0[bo]/i)) {\n          code.overwrite(this.start, this.end, String(this.value), {\n            storeName: true,\n            contentOnly: true\n          });\n        }\n      }\n\n      if (this.regex) {\n        var ref = this.regex;\n        var pattern = ref.pattern;\n        var flags = ref.flags;\n\n        if (transforms.stickyRegExp && /y/.test(flags)) {\n          CompileError.missingTransform('the regular expression sticky flag', 'stickyRegExp', this);\n        }\n\n        if (transforms.unicodeRegExp && /u/.test(flags)) {\n          code.overwrite(this.start, this.end, \"/\" + rewritePattern_1(pattern, flags) + \"/\" + flags.replace('u', ''), {\n            contentOnly: true\n          });\n        }\n      } else if (typeof this.value === \"string\" && this.value.match(nonAsciiLsOrPs)) {\n        code.overwrite(this.start, this.end, this.raw.replace(nonAsciiLsOrPs, function (m) {\n          return m == \"\\u2028\" ? \"\\\\u2028\" : \"\\\\u2029\";\n        }), {\n          contentOnly: true\n        });\n      }\n    };\n\n    return Literal;\n  }(Node$1);\n\n  var MemberExpression =\n  /*@__PURE__*/\n  function (Node) {\n    function MemberExpression() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) MemberExpression.__proto__ = Node;\n    MemberExpression.prototype = Object.create(Node && Node.prototype);\n    MemberExpression.prototype.constructor = MemberExpression;\n\n    MemberExpression.prototype.transpile = function transpile(code, transforms) {\n      if (transforms.reservedProperties && reserved[this.property.name]) {\n        code.overwrite(this.object.end, this.property.start, \"['\");\n        code.appendLeft(this.property.end, \"']\");\n      }\n\n      Node.prototype.transpile.call(this, code, transforms);\n    };\n\n    return MemberExpression;\n  }(Node$1);\n\n  var NewExpression =\n  /*@__PURE__*/\n  function (Node) {\n    function NewExpression() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) NewExpression.__proto__ = Node;\n    NewExpression.prototype = Object.create(Node && Node.prototype);\n    NewExpression.prototype.constructor = NewExpression;\n\n    NewExpression.prototype.initialise = function initialise(transforms) {\n      if (transforms.spreadRest && this.arguments.length) {\n        var lexicalBoundary = this.findLexicalBoundary();\n        var i = this.arguments.length;\n\n        while (i--) {\n          var arg = this.arguments[i];\n\n          if (arg.type === 'SpreadElement' && isArguments(arg.argument)) {\n            this.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();\n            break;\n          }\n        }\n      }\n\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    NewExpression.prototype.transpile = function transpile(code, transforms) {\n      Node.prototype.transpile.call(this, code, transforms);\n\n      if (transforms.spreadRest && this.arguments.length) {\n        inlineSpreads(code, this, this.arguments); // this.arguments.length may have changed, must retest.\n      }\n\n      if (transforms.spreadRest && this.arguments.length) {\n        var firstArgument = this.arguments[0];\n        var isNew = true;\n        var hasSpreadElements = spread(code, this.arguments, firstArgument.start, this.argumentsArrayAlias, isNew);\n\n        if (hasSpreadElements) {\n          code.prependRight(this.start + 'new'.length, ' (Function.prototype.bind.apply(');\n          code.overwrite(this.callee.end, firstArgument.start, ', [ null ].concat( ');\n          code.appendLeft(this.end, ' ))');\n        }\n      }\n\n      if (this.arguments.length) {\n        removeTrailingComma(code, this.arguments[this.arguments.length - 1].end);\n      }\n    };\n\n    return NewExpression;\n  }(Node$1);\n\n  var ObjectExpression =\n  /*@__PURE__*/\n  function (Node) {\n    function ObjectExpression() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) ObjectExpression.__proto__ = Node;\n    ObjectExpression.prototype = Object.create(Node && Node.prototype);\n    ObjectExpression.prototype.constructor = ObjectExpression;\n\n    ObjectExpression.prototype.transpile = function transpile(code, transforms) {\n      var ref;\n      Node.prototype.transpile.call(this, code, transforms);\n      var firstPropertyStart = this.start + 1;\n      var spreadPropertyCount = 0;\n      var computedPropertyCount = 0;\n      var firstSpreadProperty = null;\n      var firstComputedProperty = null;\n\n      for (var i = 0; i < this.properties.length; ++i) {\n        var prop = this.properties[i];\n\n        if (prop.type === 'SpreadElement') {\n          // First see if we can inline the spread, to save needing objectAssign.\n          var argument = prop.argument;\n\n          if (argument.type === 'ObjectExpression' || argument.type === 'Literal' && typeof argument.value !== 'string') {\n            if (argument.type === 'ObjectExpression' && argument.properties.length > 0) {\n              // Strip the `...{` and the `}` with a possible trailing comma before it,\n              // leaving just the possible trailing comma after it.\n              code.remove(prop.start, argument.properties[0].start);\n              code.remove(argument.properties[argument.properties.length - 1].end, prop.end);\n              (ref = this.properties).splice.apply(ref, [i, 1].concat(argument.properties));\n              i--;\n            } else {\n              // An empty object, boolean, null, undefined, number or regexp (but NOT\n              // string) will spread to nothing, so just remove the element altogether,\n              // including a possible trailing comma.\n              code.remove(prop.start, i === this.properties.length - 1 ? prop.end : this.properties[i + 1].start);\n              this.properties.splice(i, 1);\n              i--;\n            }\n          } else {\n            spreadPropertyCount += 1;\n\n            if (firstSpreadProperty === null) {\n              firstSpreadProperty = i;\n            }\n          }\n        } else if (prop.computed && transforms.computedProperty) {\n          computedPropertyCount += 1;\n\n          if (firstComputedProperty === null) {\n            firstComputedProperty = i;\n          }\n        }\n      }\n\n      if (spreadPropertyCount && !transforms.objectRestSpread && !(computedPropertyCount && transforms.computedProperty)) {\n        spreadPropertyCount = 0;\n        firstSpreadProperty = null;\n      } else if (spreadPropertyCount) {\n        if (!this.program.options.objectAssign) {\n          throw new CompileError(\"Object spread operator requires specified objectAssign option with 'Object.assign' or polyfill helper.\", this);\n        }\n\n        var i$1 = this.properties.length;\n\n        while (i$1--) {\n          var prop$1 = this.properties[i$1]; // enclose run of non-spread properties in curlies\n\n          if (prop$1.type === 'Property' && !computedPropertyCount) {\n            var lastProp = this.properties[i$1 - 1];\n            var nextProp = this.properties[i$1 + 1];\n\n            if (!lastProp || lastProp.type !== 'Property') {\n              code.prependRight(prop$1.start, '{');\n            }\n\n            if (!nextProp || nextProp.type !== 'Property') {\n              code.appendLeft(prop$1.end, '}');\n            }\n          } // Remove ellipsis on spread property\n\n\n          if (prop$1.type === 'SpreadElement') {\n            code.remove(prop$1.start, prop$1.argument.start);\n            code.remove(prop$1.argument.end, prop$1.end);\n          }\n        } // wrap the whole thing in Object.assign\n\n\n        firstPropertyStart = this.properties[0].start;\n\n        if (!computedPropertyCount) {\n          code.overwrite(this.start, firstPropertyStart, this.program.options.objectAssign + \"({}, \");\n          code.overwrite(this.properties[this.properties.length - 1].end, this.end, ')');\n        } else if (this.properties[0].type === 'SpreadElement') {\n          code.overwrite(this.start, firstPropertyStart, this.program.options.objectAssign + \"({}, \");\n          code.remove(this.end - 1, this.end);\n          code.appendRight(this.end, ')');\n        } else {\n          code.prependLeft(this.start, this.program.options.objectAssign + \"(\");\n          code.appendRight(this.end, ')');\n        }\n      }\n\n      if (computedPropertyCount && transforms.computedProperty) {\n        var i0 = this.getIndentation();\n        var isSimpleAssignment;\n        var name;\n\n        if (this.parent.type === 'VariableDeclarator' && this.parent.parent.declarations.length === 1 && this.parent.id.type === 'Identifier') {\n          isSimpleAssignment = true;\n          name = this.parent.id.alias || this.parent.id.name; // TODO is this right?\n        } else if (this.parent.type === 'AssignmentExpression' && this.parent.parent.type === 'ExpressionStatement' && this.parent.left.type === 'Identifier') {\n          isSimpleAssignment = true;\n          name = this.parent.left.alias || this.parent.left.name; // TODO is this right?\n        } else if (this.parent.type === 'AssignmentPattern' && this.parent.left.type === 'Identifier') {\n          isSimpleAssignment = true;\n          name = this.parent.left.alias || this.parent.left.name; // TODO is this right?\n        }\n\n        if (spreadPropertyCount) {\n          isSimpleAssignment = false;\n        } // handle block scoping\n\n\n        name = this.findScope(false).resolveName(name);\n        var start = firstPropertyStart;\n        var end = this.end;\n        if (isSimpleAssignment) ;else {\n          if (firstSpreadProperty === null || firstComputedProperty < firstSpreadProperty) {\n            name = this.findScope(true).createDeclaration('obj');\n            code.prependRight(this.start, \"( \" + name + \" = \");\n          } else {\n            name = null;\n          } // We don't actually need this variable\n\n        }\n        var len = this.properties.length;\n        var lastComputedProp;\n        var sawNonComputedProperty = false;\n        var isFirst = true;\n\n        for (var i$2 = 0; i$2 < len; i$2 += 1) {\n          var prop$2 = this.properties[i$2];\n          var moveStart = i$2 > 0 ? this.properties[i$2 - 1].end : start;\n\n          if (prop$2.type === 'Property' && (prop$2.computed || lastComputedProp && !spreadPropertyCount)) {\n            if (i$2 === 0) {\n              moveStart = this.start + 1;\n            } // Trim leading whitespace\n\n\n            lastComputedProp = prop$2;\n\n            if (!name) {\n              name = this.findScope(true).createDeclaration('obj');\n              var propId = name + (prop$2.computed ? '' : '.');\n              code.appendRight(prop$2.start, \"( \" + name + \" = {}, \" + propId);\n            } else {\n              var propId$1 = (isSimpleAssignment ? \";\\n\" + i0 + name : \", \" + name) + (prop$2.key.type === 'Literal' || prop$2.computed ? '' : '.');\n\n              if (moveStart < prop$2.start) {\n                code.overwrite(moveStart, prop$2.start, propId$1);\n              } else {\n                code.prependRight(prop$2.start, propId$1);\n              }\n            }\n\n            var c = prop$2.key.end;\n\n            if (prop$2.computed) {\n              while (code.original[c] !== ']') {\n                c += 1;\n              }\n\n              c += 1;\n            }\n\n            if (prop$2.key.type === 'Literal' && !prop$2.computed) {\n              code.overwrite(prop$2.start, prop$2.value.start, '[' + code.slice(prop$2.start, prop$2.key.end) + '] = ');\n            } else if (prop$2.shorthand || prop$2.method && !prop$2.computed && transforms.conciseMethodProperty) {\n              // Replace : with = if Property::transpile inserted the :\n              code.overwrite(prop$2.key.start, prop$2.key.end, code.slice(prop$2.key.start, prop$2.key.end).replace(/:/, ' ='));\n            } else {\n              if (prop$2.value.start > c) {\n                code.remove(c, prop$2.value.start);\n              }\n\n              code.prependLeft(c, ' = ');\n            } // This duplicates behavior from Property::transpile which is disabled\n            // for computed properties or if conciseMethodProperty is false\n\n\n            if (prop$2.method && (prop$2.computed || !transforms.conciseMethodProperty)) {\n              if (prop$2.value.generator) {\n                code.remove(prop$2.start, prop$2.key.start);\n              }\n\n              code.prependRight(prop$2.value.start, \"function\" + (prop$2.value.generator ? '*' : '') + \" \");\n            }\n          } else if (prop$2.type === 'SpreadElement') {\n            if (name && i$2 > 0) {\n              if (!lastComputedProp) {\n                lastComputedProp = this.properties[i$2 - 1];\n              }\n\n              code.appendLeft(lastComputedProp.end, \", \" + name + \" )\");\n              lastComputedProp = null;\n              name = null;\n            }\n          } else {\n            if (!isFirst && spreadPropertyCount) {\n              // We are in an Object.assign context, so we need to wrap regular properties\n              code.prependRight(prop$2.start, '{');\n              code.appendLeft(prop$2.end, '}');\n            }\n\n            sawNonComputedProperty = true;\n          }\n\n          if (isFirst && (prop$2.type === 'SpreadElement' || prop$2.computed)) {\n            var beginEnd = sawNonComputedProperty ? this.properties[this.properties.length - 1].end : this.end - 1; // Trim trailing comma because it can easily become a leading comma which is illegal\n\n            if (code.original[beginEnd] == ',') {\n              ++beginEnd;\n            }\n\n            var closing = code.slice(beginEnd, end);\n            code.prependLeft(moveStart, closing);\n            code.remove(beginEnd, end);\n            isFirst = false;\n          } // Clean up some extranous whitespace\n\n\n          var c$1 = prop$2.end;\n\n          if (i$2 < len - 1 && !sawNonComputedProperty) {\n            while (code.original[c$1] !== ',') {\n              c$1 += 1;\n            }\n          } else if (i$2 == len - 1) {\n            c$1 = this.end;\n          }\n\n          if (prop$2.end != c$1) {\n            code.overwrite(prop$2.end, c$1, '', {\n              contentOnly: true\n            });\n          }\n        }\n\n        if (!isSimpleAssignment && name) {\n          code.appendLeft(lastComputedProp.end, \", \" + name + \" )\");\n        }\n      }\n    };\n\n    return ObjectExpression;\n  }(Node$1);\n\n  var Property =\n  /*@__PURE__*/\n  function (Node) {\n    function Property() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) Property.__proto__ = Node;\n    Property.prototype = Object.create(Node && Node.prototype);\n    Property.prototype.constructor = Property;\n\n    Property.prototype.initialise = function initialise(transforms) {\n      if ((this.kind === 'get' || this.kind === 'set') && transforms.getterSetter) {\n        CompileError.missingTransform(\"getters and setters\", \"getterSetter\", this);\n      }\n\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    Property.prototype.transpile = function transpile(code, transforms) {\n      Node.prototype.transpile.call(this, code, transforms);\n\n      if (transforms.conciseMethodProperty && !this.computed && this.parent.type !== 'ObjectPattern') {\n        if (this.shorthand) {\n          code.prependRight(this.start, this.key.name + \": \");\n        } else if (this.method) {\n          var name = '';\n\n          if (this.program.options.namedFunctionExpressions !== false) {\n            if (this.key.type === 'Literal' && typeof this.key.value === 'number') {\n              name = '';\n            } else if (this.key.type === 'Identifier') {\n              if (reserved[this.key.name] || !/^[a-z_$][a-z0-9_$]*$/i.test(this.key.name) || this.value.body.scope.references[this.key.name]) {\n                name = this.findScope(true).createIdentifier(this.key.name);\n              } else {\n                name = this.key.name;\n              }\n            } else {\n              name = this.findScope(true).createIdentifier(this.key.value);\n            }\n\n            name = ' ' + name;\n          }\n\n          if (this.start < this.key.start) {\n            code.remove(this.start, this.key.start);\n          }\n\n          code.appendLeft(this.key.end, \": \" + (this.value.async ? 'async ' : '') + \"function\" + (this.value.generator ? '*' : '') + name);\n        }\n      }\n\n      if (transforms.reservedProperties && reserved[this.key.name]) {\n        code.prependRight(this.key.start, \"'\");\n        code.appendLeft(this.key.end, \"'\");\n      }\n    };\n\n    return Property;\n  }(Node$1);\n\n  var ReturnStatement =\n  /*@__PURE__*/\n  function (Node) {\n    function ReturnStatement() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) ReturnStatement.__proto__ = Node;\n    ReturnStatement.prototype = Object.create(Node && Node.prototype);\n    ReturnStatement.prototype.constructor = ReturnStatement;\n\n    ReturnStatement.prototype.initialise = function initialise(transforms) {\n      this.loop = this.findNearest(loopStatement);\n      this.nearestFunction = this.findNearest(/Function/);\n\n      if (this.loop && (!this.nearestFunction || this.loop.depth > this.nearestFunction.depth)) {\n        this.loop.canReturn = true;\n        this.shouldWrap = true;\n      }\n\n      if (this.argument) {\n        this.argument.initialise(transforms);\n      }\n    };\n\n    ReturnStatement.prototype.transpile = function transpile(code, transforms) {\n      var shouldWrap = this.shouldWrap && this.loop && this.loop.shouldRewriteAsFunction;\n\n      if (this.argument) {\n        if (shouldWrap) {\n          code.prependRight(this.argument.start, \"{ v: \");\n        }\n\n        this.argument.transpile(code, transforms);\n\n        if (shouldWrap) {\n          code.appendLeft(this.argument.end, \" }\");\n        }\n      } else if (shouldWrap) {\n        code.appendLeft(this.start + 6, ' {}');\n      }\n    };\n\n    return ReturnStatement;\n  }(Node$1);\n\n  var Super =\n  /*@__PURE__*/\n  function (Node) {\n    function Super() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) Super.__proto__ = Node;\n    Super.prototype = Object.create(Node && Node.prototype);\n    Super.prototype.constructor = Super;\n\n    Super.prototype.initialise = function initialise(transforms) {\n      if (transforms.classes) {\n        this.method = this.findNearest('MethodDefinition');\n\n        if (!this.method) {\n          throw new CompileError('use of super outside class method', this);\n        }\n\n        var parentClass = this.findNearest('ClassBody').parent;\n        this.superClassName = parentClass.superClass && (parentClass.superClass.name || 'superclass');\n\n        if (!this.superClassName) {\n          throw new CompileError('super used in base class', this);\n        }\n\n        this.isCalled = this.parent.type === 'CallExpression' && this === this.parent.callee;\n\n        if (this.method.kind !== 'constructor' && this.isCalled) {\n          throw new CompileError('super() not allowed outside class constructor', this);\n        }\n\n        this.isMember = this.parent.type === 'MemberExpression';\n\n        if (!this.isCalled && !this.isMember) {\n          throw new CompileError('Unexpected use of `super` (expected `super(...)` or `super.*`)', this);\n        }\n      }\n\n      if (transforms.arrow) {\n        var lexicalBoundary = this.findLexicalBoundary();\n        var arrowFunction = this.findNearest('ArrowFunctionExpression');\n        var loop = this.findNearest(loopStatement);\n\n        if (arrowFunction && arrowFunction.depth > lexicalBoundary.depth) {\n          this.thisAlias = lexicalBoundary.getThisAlias();\n        }\n\n        if (loop && loop.body.contains(this) && loop.depth > lexicalBoundary.depth) {\n          this.thisAlias = lexicalBoundary.getThisAlias();\n        }\n      }\n    };\n\n    Super.prototype.transpile = function transpile(code, transforms) {\n      if (transforms.classes) {\n        var expression = this.isCalled || this.method[\"static\"] ? this.superClassName : this.superClassName + \".prototype\";\n        code.overwrite(this.start, this.end, expression, {\n          storeName: true,\n          contentOnly: true\n        });\n        var callExpression = this.isCalled ? this.parent : this.parent.parent;\n\n        if (callExpression && callExpression.type === 'CallExpression') {\n          if (!this.noCall) {\n            // special case – `super( ...args )`\n            code.appendLeft(callExpression.callee.end, '.call');\n          }\n\n          var thisAlias = this.thisAlias || 'this';\n\n          if (callExpression.arguments.length) {\n            code.appendLeft(callExpression.arguments[0].start, thisAlias + \", \");\n          } else {\n            code.appendLeft(callExpression.end - 1, \"\" + thisAlias);\n          }\n        }\n      }\n    };\n\n    return Super;\n  }(Node$1);\n\n  var TaggedTemplateExpression =\n  /*@__PURE__*/\n  function (Node) {\n    function TaggedTemplateExpression() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) TaggedTemplateExpression.__proto__ = Node;\n    TaggedTemplateExpression.prototype = Object.create(Node && Node.prototype);\n    TaggedTemplateExpression.prototype.constructor = TaggedTemplateExpression;\n\n    TaggedTemplateExpression.prototype.initialise = function initialise(transforms) {\n      if (transforms.templateString && !transforms.dangerousTaggedTemplateString) {\n        CompileError.missingTransform(\"tagged template strings\", \"templateString\", this, \"dangerousTaggedTemplateString\");\n      }\n\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    TaggedTemplateExpression.prototype.transpile = function transpile(code, transforms) {\n      if (transforms.templateString && transforms.dangerousTaggedTemplateString) {\n        var ordered = this.quasi.expressions.concat(this.quasi.quasis).sort(function (a, b) {\n          return a.start - b.start;\n        });\n        var program = this.program;\n        var rootScope = program.body.scope; // insert strings at start\n\n        var templateStrings = this.quasi.quasis.map(function (quasi) {\n          return JSON.stringify(quasi.value.cooked);\n        }).join(', ');\n        var templateObject = this.program.templateLiteralQuasis[templateStrings];\n\n        if (!templateObject) {\n          templateObject = rootScope.createIdentifier('templateObject');\n          code.prependLeft(this.program.prependAt, \"var \" + templateObject + \" = Object.freeze([\" + templateStrings + \"]);\\n\");\n          this.program.templateLiteralQuasis[templateStrings] = templateObject;\n        }\n\n        code.overwrite(this.tag.end, ordered[0].start, \"(\" + templateObject);\n        var lastIndex = ordered[0].start;\n        ordered.forEach(function (node) {\n          if (node.type === 'TemplateElement') {\n            code.remove(lastIndex, node.end);\n          } else {\n            code.overwrite(lastIndex, node.start, ', ');\n          }\n\n          lastIndex = node.end;\n        });\n        code.overwrite(lastIndex, this.end, ')');\n      }\n\n      Node.prototype.transpile.call(this, code, transforms);\n    };\n\n    return TaggedTemplateExpression;\n  }(Node$1);\n\n  var TemplateElement =\n  /*@__PURE__*/\n  function (Node) {\n    function TemplateElement() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) TemplateElement.__proto__ = Node;\n    TemplateElement.prototype = Object.create(Node && Node.prototype);\n    TemplateElement.prototype.constructor = TemplateElement;\n\n    TemplateElement.prototype.initialise = function initialise() {\n      this.program.indentExclusionElements.push(this);\n    };\n\n    return TemplateElement;\n  }(Node$1);\n\n  var TemplateLiteral =\n  /*@__PURE__*/\n  function (Node) {\n    function TemplateLiteral() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) TemplateLiteral.__proto__ = Node;\n    TemplateLiteral.prototype = Object.create(Node && Node.prototype);\n    TemplateLiteral.prototype.constructor = TemplateLiteral;\n\n    TemplateLiteral.prototype.transpile = function transpile(code, transforms) {\n      Node.prototype.transpile.call(this, code, transforms);\n\n      if (transforms.templateString && this.parent.type !== 'TaggedTemplateExpression') {\n        var ordered = this.expressions.concat(this.quasis).sort(function (a, b) {\n          return a.start - b.start || a.end - b.end;\n        }).filter(function (node, i) {\n          // include all expressions\n          if (node.type !== 'TemplateElement') {\n            return true;\n          } // include all non-empty strings\n\n\n          if (node.value.raw) {\n            return true;\n          } // exclude all empty strings not at the head\n\n\n          return !i;\n        }); // special case – we may be able to skip the first element,\n        // if it's the empty string, but only if the second and\n        // third elements aren't both expressions (since they maybe\n        // be numeric, and `1 + 2 + '3' === '33'`)\n\n        if (ordered.length >= 3) {\n          var first = ordered[0];\n          var third = ordered[2];\n\n          if (first.type === 'TemplateElement' && first.value.raw === '' && third.type === 'TemplateElement') {\n            ordered.shift();\n          }\n        }\n\n        var parenthesise = (this.quasis.length !== 1 || this.expressions.length !== 0) && this.parent.type !== 'TemplateLiteral' && this.parent.type !== 'AssignmentExpression' && this.parent.type !== 'AssignmentPattern' && this.parent.type !== 'VariableDeclarator' && (this.parent.type !== 'BinaryExpression' || this.parent.operator !== '+');\n\n        if (parenthesise) {\n          code.appendRight(this.start, '(');\n        }\n\n        var lastIndex = this.start;\n        ordered.forEach(function (node, i) {\n          var prefix = i === 0 ? parenthesise ? '(' : '' : ' + ';\n\n          if (node.type === 'TemplateElement') {\n            code.overwrite(lastIndex, node.end, prefix + JSON.stringify(node.value.cooked));\n          } else {\n            var parenthesise$1 = node.type !== 'Identifier'; // TODO other cases where it's safe\n\n            if (parenthesise$1) {\n              prefix += '(';\n            }\n\n            code.remove(lastIndex, node.start);\n\n            if (prefix) {\n              code.prependRight(node.start, prefix);\n            }\n\n            if (parenthesise$1) {\n              code.appendLeft(node.end, ')');\n            }\n          }\n\n          lastIndex = node.end;\n        });\n\n        if (parenthesise) {\n          code.appendLeft(lastIndex, ')');\n        }\n\n        code.overwrite(lastIndex, this.end, \"\", {\n          contentOnly: true\n        });\n      }\n    };\n\n    return TemplateLiteral;\n  }(Node$1);\n\n  var ThisExpression =\n  /*@__PURE__*/\n  function (Node) {\n    function ThisExpression() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) ThisExpression.__proto__ = Node;\n    ThisExpression.prototype = Object.create(Node && Node.prototype);\n    ThisExpression.prototype.constructor = ThisExpression;\n\n    ThisExpression.prototype.initialise = function initialise(transforms) {\n      var lexicalBoundary = this.findLexicalBoundary();\n\n      if (transforms.letConst) {\n        // save all loops up to the lexical boundary in case we need\n        // to alias them later for block-scoped declarations\n        var node = this.findNearest(loopStatement);\n\n        while (node && node.depth > lexicalBoundary.depth) {\n          node.thisRefs.push(this);\n          node = node.parent.findNearest(loopStatement);\n        }\n      }\n\n      if (transforms.arrow) {\n        var arrowFunction = this.findNearest('ArrowFunctionExpression');\n\n        if (arrowFunction && arrowFunction.depth > lexicalBoundary.depth) {\n          this.alias = lexicalBoundary.getThisAlias();\n        }\n      }\n    };\n\n    ThisExpression.prototype.transpile = function transpile(code) {\n      if (this.alias) {\n        code.overwrite(this.start, this.end, this.alias, {\n          storeName: true,\n          contentOnly: true\n        });\n      }\n    };\n\n    return ThisExpression;\n  }(Node$1);\n\n  var UpdateExpression =\n  /*@__PURE__*/\n  function (Node) {\n    function UpdateExpression() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) UpdateExpression.__proto__ = Node;\n    UpdateExpression.prototype = Object.create(Node && Node.prototype);\n    UpdateExpression.prototype.constructor = UpdateExpression;\n\n    UpdateExpression.prototype.initialise = function initialise(transforms) {\n      if (this.argument.type === 'Identifier') {\n        var declaration = this.findScope(false).findDeclaration(this.argument.name); // special case – https://gitlab.com/Rich-Harris/buble/issues/150\n\n        var statement = declaration && declaration.node.ancestor(3);\n\n        if (statement && statement.type === 'ForStatement' && statement.body.contains(this)) {\n          statement.reassigned[this.argument.name] = true;\n        }\n      }\n\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    UpdateExpression.prototype.transpile = function transpile(code, transforms) {\n      if (this.argument.type === 'Identifier') {\n        // Do this check after everything has been initialized to find\n        // shadowing declarations after this expression\n        checkConst(this.argument, this.findScope(false));\n      }\n\n      Node.prototype.transpile.call(this, code, transforms);\n    };\n\n    return UpdateExpression;\n  }(Node$1);\n\n  var VariableDeclaration =\n  /*@__PURE__*/\n  function (Node) {\n    function VariableDeclaration() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) VariableDeclaration.__proto__ = Node;\n    VariableDeclaration.prototype = Object.create(Node && Node.prototype);\n    VariableDeclaration.prototype.constructor = VariableDeclaration;\n\n    VariableDeclaration.prototype.initialise = function initialise(transforms) {\n      this.scope = this.findScope(this.kind === 'var');\n      this.declarations.forEach(function (declarator) {\n        return declarator.initialise(transforms);\n      });\n    };\n\n    VariableDeclaration.prototype.transpile = function transpile(code, transforms) {\n      var this$1 = this;\n      var i0 = this.getIndentation();\n      var kind = this.kind;\n\n      if (transforms.letConst && kind !== 'var') {\n        kind = 'var';\n        code.overwrite(this.start, this.start + this.kind.length, kind, {\n          contentOnly: true,\n          storeName: true\n        });\n      }\n\n      if (transforms.destructuring && this.parent.type !== 'ForOfStatement' && this.parent.type !== 'ForInStatement') {\n        var c = this.start;\n        var lastDeclaratorIsPattern;\n        this.declarations.forEach(function (declarator, i) {\n          declarator.transpile(code, transforms);\n\n          if (declarator.id.type === 'Identifier') {\n            if (i > 0 && this$1.declarations[i - 1].id.type !== 'Identifier') {\n              code.overwrite(c, declarator.id.start, \"var \");\n            }\n          } else {\n            var inline = loopStatement.test(this$1.parent.type);\n\n            if (i === 0) {\n              code.remove(c, declarator.id.start);\n            } else {\n              code.overwrite(c, declarator.id.start, \";\\n\" + i0);\n            }\n\n            var simple = declarator.init.type === 'Identifier' && !declarator.init.rewritten;\n            var name = simple ? declarator.init.alias || declarator.init.name : declarator.findScope(true).createIdentifier('ref');\n            c = declarator.start;\n            var statementGenerators = [];\n\n            if (simple) {\n              code.remove(declarator.id.end, declarator.end);\n            } else {\n              statementGenerators.push(function (start, prefix, suffix) {\n                code.prependRight(declarator.id.end, \"var \" + name);\n                code.appendLeft(declarator.init.end, \"\" + suffix);\n                code.move(declarator.id.end, declarator.end, start);\n              });\n            }\n\n            var scope = declarator.findScope(false);\n            destructure(code, function (id) {\n              return scope.createIdentifier(id);\n            }, function (ref) {\n              var name = ref.name;\n              return scope.resolveName(name);\n            }, declarator.id, name, inline, statementGenerators);\n            var prefix = inline ? 'var ' : '';\n            var suffix = inline ? \", \" : \";\\n\" + i0;\n            statementGenerators.forEach(function (fn, j) {\n              if (i === this$1.declarations.length - 1 && j === statementGenerators.length - 1) {\n                suffix = inline ? '' : ';';\n              }\n\n              fn(declarator.start, j === 0 ? prefix : '', suffix);\n            });\n          }\n\n          c = declarator.end;\n          lastDeclaratorIsPattern = declarator.id.type !== 'Identifier';\n        });\n\n        if (lastDeclaratorIsPattern && this.end > c) {\n          code.overwrite(c, this.end, '', {\n            contentOnly: true\n          });\n        }\n      } else {\n        this.declarations.forEach(function (declarator) {\n          declarator.transpile(code, transforms);\n        });\n      }\n    };\n\n    return VariableDeclaration;\n  }(Node$1);\n\n  var VariableDeclarator =\n  /*@__PURE__*/\n  function (Node) {\n    function VariableDeclarator() {\n      Node.apply(this, arguments);\n    }\n\n    if (Node) VariableDeclarator.__proto__ = Node;\n    VariableDeclarator.prototype = Object.create(Node && Node.prototype);\n    VariableDeclarator.prototype.constructor = VariableDeclarator;\n\n    VariableDeclarator.prototype.initialise = function initialise(transforms) {\n      var kind = this.parent.kind;\n\n      if (kind === 'let' && this.parent.parent.type === 'ForStatement') {\n        kind = 'for.let'; // special case...\n      }\n\n      this.parent.scope.addDeclaration(this.id, kind);\n      Node.prototype.initialise.call(this, transforms);\n    };\n\n    VariableDeclarator.prototype.transpile = function transpile(code, transforms) {\n      if (!this.init && transforms.letConst && this.parent.kind !== 'var') {\n        var inLoop = this.findNearest(/Function|^For(In|Of)?Statement|^(?:Do)?WhileStatement/);\n\n        if (inLoop && !/Function/.test(inLoop.type) && !this.isLeftDeclaratorOfLoop()) {\n          code.appendLeft(this.id.end, ' = (void 0)');\n        }\n      }\n\n      if (this.id) {\n        this.id.transpile(code, transforms);\n      }\n\n      if (this.init) {\n        this.init.transpile(code, transforms);\n      }\n    };\n\n    VariableDeclarator.prototype.isLeftDeclaratorOfLoop = function isLeftDeclaratorOfLoop() {\n      return this.parent && this.parent.type === 'VariableDeclaration' && this.parent.parent && (this.parent.parent.type === 'ForInStatement' || this.parent.parent.type === 'ForOfStatement') && this.parent.parent.left && this.parent.parent.left.declarations[0] === this;\n    };\n\n    return VariableDeclarator;\n  }(Node$1);\n\n  var types$2 = {\n    ArrayExpression: ArrayExpression,\n    ArrowFunctionExpression: ArrowFunctionExpression,\n    AssignmentExpression: AssignmentExpression,\n    AwaitExpression: AwaitExpression,\n    BinaryExpression: BinaryExpression,\n    BreakStatement: BreakStatement,\n    CallExpression: CallExpression,\n    ClassBody: ClassBody,\n    ClassDeclaration: ClassDeclaration,\n    ClassExpression: ClassExpression,\n    ContinueStatement: ContinueStatement,\n    DoWhileStatement: LoopStatement,\n    ExportNamedDeclaration: ExportNamedDeclaration,\n    ExportDefaultDeclaration: ExportDefaultDeclaration,\n    ForStatement: ForStatement,\n    ForInStatement: ForInStatement,\n    ForOfStatement: ForOfStatement,\n    FunctionDeclaration: FunctionDeclaration,\n    FunctionExpression: FunctionExpression,\n    Identifier: Identifier,\n    IfStatement: IfStatement,\n    Import: Import,\n    ImportDeclaration: ImportDeclaration,\n    ImportDefaultSpecifier: ImportDefaultSpecifier,\n    ImportSpecifier: ImportSpecifier,\n    JSXAttribute: JSXAttribute,\n    JSXClosingElement: JSXClosingElement,\n    JSXClosingFragment: JSXClosingFragment,\n    JSXElement: JSXElement,\n    JSXExpressionContainer: JSXExpressionContainer,\n    JSXFragment: JSXFragment,\n    JSXOpeningElement: JSXOpeningElement,\n    JSXOpeningFragment: JSXOpeningFragment,\n    JSXSpreadAttribute: JSXSpreadAttribute,\n    Literal: Literal,\n    MemberExpression: MemberExpression,\n    NewExpression: NewExpression,\n    ObjectExpression: ObjectExpression,\n    Property: Property,\n    ReturnStatement: ReturnStatement,\n    Super: Super,\n    TaggedTemplateExpression: TaggedTemplateExpression,\n    TemplateElement: TemplateElement,\n    TemplateLiteral: TemplateLiteral,\n    ThisExpression: ThisExpression,\n    UpdateExpression: UpdateExpression,\n    VariableDeclaration: VariableDeclaration,\n    VariableDeclarator: VariableDeclarator,\n    WhileStatement: LoopStatement\n  };\n  var keys = {\n    Program: ['body'],\n    Literal: []\n  };\n  var statementsWithBlocks = {\n    IfStatement: 'consequent',\n    ForStatement: 'body',\n    ForInStatement: 'body',\n    ForOfStatement: 'body',\n    WhileStatement: 'body',\n    DoWhileStatement: 'body',\n    ArrowFunctionExpression: 'body'\n  };\n\n  function wrap$1(raw, parent) {\n    if (!raw) {\n      return;\n    }\n\n    if ('length' in raw) {\n      var i = raw.length;\n\n      while (i--) {\n        wrap$1(raw[i], parent);\n      }\n\n      return;\n    } // with e.g. shorthand properties, key and value are\n    // the same node. We don't want to wrap an object twice\n\n\n    if (raw.__wrapped) {\n      return;\n    }\n\n    raw.__wrapped = true;\n\n    if (!keys[raw.type]) {\n      keys[raw.type] = Object.keys(raw).filter(function (key) {\n        return typeof raw[key] === 'object';\n      });\n    } // special case – body-less if/for/while statements. TODO others?\n\n\n    var bodyType = statementsWithBlocks[raw.type];\n\n    if (bodyType && raw[bodyType].type !== 'BlockStatement') {\n      var expression = raw[bodyType]; // create a synthetic block statement, otherwise all hell\n      // breaks loose when it comes to block scoping\n\n      raw[bodyType] = {\n        start: expression.start,\n        end: expression.end,\n        type: 'BlockStatement',\n        body: [expression],\n        synthetic: true\n      };\n    }\n\n    raw.parent = parent;\n    raw.program = parent.program || parent;\n    raw.depth = parent.depth + 1;\n    raw.keys = keys[raw.type];\n    raw.indentation = undefined;\n\n    for (var i$1 = 0, list = keys[raw.type]; i$1 < list.length; i$1 += 1) {\n      var key = list[i$1];\n      wrap$1(raw[key], raw);\n    }\n\n    raw.program.magicString.addSourcemapLocation(raw.start);\n    raw.program.magicString.addSourcemapLocation(raw.end);\n    var type = (raw.type === 'BlockStatement' ? BlockStatement : types$2[raw.type]) || Node$1;\n    raw.__proto__ = type.prototype;\n  }\n\n  function Program(source, ast, transforms, options) {\n    this.type = 'Root'; // options\n\n    this.jsx = options.jsx || 'React.createElement';\n    this.jsxFragment = options.jsxFragment || 'React.Fragment';\n    this.options = options;\n    this.source = source;\n    this.magicString = new MagicString(source);\n    this.ast = ast;\n    this.depth = 0;\n    wrap$1(this.body = ast, this);\n    this.body.__proto__ = BlockStatement.prototype;\n    this.templateLiteralQuasis = Object.create(null);\n\n    for (var i = 0; i < this.body.body.length; ++i) {\n      if (!this.body.body[i].directive) {\n        this.prependAt = this.body.body[i].start;\n        break;\n      }\n    }\n\n    this.objectWithoutPropertiesHelper = null;\n    this.indentExclusionElements = [];\n    this.body.initialise(transforms);\n    this.indentExclusions = Object.create(null);\n\n    for (var i$2 = 0, list = this.indentExclusionElements; i$2 < list.length; i$2 += 1) {\n      var node = list[i$2];\n\n      for (var i$1 = node.start; i$1 < node.end; i$1 += 1) {\n        this.indentExclusions[i$1] = true;\n      }\n    }\n\n    this.body.transpile(this.magicString, transforms);\n  }\n\n  Program.prototype = {\n    \"export\": function export$1(options) {\n      if (options === void 0) options = {};\n      return {\n        code: this.magicString.toString(),\n        map: this.magicString.generateMap({\n          file: options.file,\n          source: options.source,\n          includeContent: options.includeContent !== false\n        })\n      };\n    },\n    findNearest: function findNearest() {\n      return null;\n    },\n    findScope: function findScope() {\n      return null;\n    },\n    getObjectWithoutPropertiesHelper: function getObjectWithoutPropertiesHelper(code) {\n      if (!this.objectWithoutPropertiesHelper) {\n        this.objectWithoutPropertiesHelper = this.body.scope.createIdentifier('objectWithoutProperties');\n        code.prependLeft(this.prependAt, \"function \" + this.objectWithoutPropertiesHelper + \" (obj, exclude) { \" + \"var target = {}; for (var k in obj) \" + \"if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) \" + \"target[k] = obj[k]; return target; }\\n\");\n      }\n\n      return this.objectWithoutPropertiesHelper;\n    }\n  };\n  var matrix = {\n    chrome: {\n      48: 610719,\n      49: 652287,\n      50: 783359,\n      51: 783359,\n      52: 1045503,\n      53: 1045503,\n      54: 1045503,\n      55: 3142655,\n      56: 3142655,\n      57: 3142655,\n      58: 4191231,\n      59: 4191231,\n      60: 8385535,\n      61: 8385535,\n      62: 8385535,\n      63: 8385535,\n      64: 8385535,\n      65: 8385535,\n      66: 8385535,\n      67: 8385535,\n      68: 8385535,\n      69: 8385535,\n      70: 8385535,\n      71: 8385535\n    },\n    firefox: {\n      43: 643515,\n      44: 643515,\n      45: 643519,\n      46: 774591,\n      47: 774655,\n      48: 774655,\n      49: 774655,\n      50: 774655,\n      51: 775167,\n      52: 4191231,\n      53: 4191231,\n      54: 4191231,\n      55: 8385535,\n      56: 8385535,\n      57: 8385535,\n      58: 8385535,\n      59: 8385535,\n      60: 8385535,\n      61: 8385535,\n      62: 8385535,\n      63: 8385535,\n      64: 8385535\n    },\n    safari: {\n      8: 524297,\n      9: 594141,\n      10: 1831935,\n      '10.1': 4191231,\n      11: 4191231,\n      '11.1': 8385535,\n      12: 8385535\n    },\n    ie: {\n      8: 0,\n      9: 524289,\n      10: 524289,\n      11: 524289 // no let/const in for loops\n\n    },\n    edge: {\n      12: 610459,\n      13: 774559,\n      14: 2085887,\n      15: 4183039,\n      16: 4183039,\n      17: 4183039,\n      18: 4183039,\n      19: 4183039\n    },\n    node: {\n      '0.10': 524289,\n      '0.12': 524417,\n      4: 594335,\n      5: 594335,\n      6: 783359,\n      8: 4191231,\n      '8.3': 8385535,\n      '8.7': 8385535,\n      '8.10': 8385535\n    }\n  };\n  var features = ['getterSetter', 'arrow', 'classes', 'computedProperty', 'conciseMethodProperty', 'defaultParameter', 'destructuring', 'forOf', 'generator', 'letConst', 'moduleExport', 'moduleImport', 'numericLiteral', 'parameterDestructuring', 'spreadRest', 'stickyRegExp', 'templateString', 'unicodeRegExp', // ES2016\n  'exponentiation', // additional transforms, not from\n  // https://featuretests.io\n  'reservedProperties', 'trailingFunctionCommas', 'asyncAwait', 'objectRestSpread'];\n  var version$1 = \"0.19.8\";\n  var parser$1 = Parser.extend(acornDynamicImport, acornJsx());\n  var dangerousTransforms = ['dangerousTaggedTemplateString', 'dangerousForOf'];\n\n  function target(target) {\n    var targets = Object.keys(target);\n    var bitmask = targets.length ? 8388607 : 524289;\n    Object.keys(target).forEach(function (environment) {\n      var versions = matrix[environment];\n\n      if (!versions) {\n        throw new Error(\"Unknown environment '\" + environment + \"'. Please raise an issue at https://github.com/bublejs/buble/issues\");\n      }\n\n      var targetVersion = target[environment];\n\n      if (!(targetVersion in versions)) {\n        throw new Error(\"Support data exists for the following versions of \" + environment + \": \" + Object.keys(versions).join(', ') + \". Please raise an issue at https://github.com/bublejs/buble/issues\");\n      }\n\n      var support = versions[targetVersion];\n      bitmask &= support;\n    });\n    var transforms = Object.create(null);\n    features.forEach(function (name, i) {\n      transforms[name] = !(bitmask & 1 << i);\n    });\n    dangerousTransforms.forEach(function (name) {\n      transforms[name] = false;\n    });\n    return transforms;\n  }\n\n  function transform(source, options) {\n    if (options === void 0) options = {};\n    var ast;\n    var jsx = null;\n\n    try {\n      ast = parser$1.parse(source, {\n        ecmaVersion: 10,\n        preserveParens: true,\n        sourceType: 'module',\n        allowAwaitOutsideFunction: true,\n        allowReturnOutsideFunction: true,\n        allowHashBang: true,\n        onComment: function onComment(block, text) {\n          if (!jsx) {\n            var match = /@jsx\\s+([^\\s]+)/.exec(text);\n\n            if (match) {\n              jsx = match[1];\n            }\n          }\n        }\n      });\n      options.jsx = jsx || options.jsx;\n    } catch (err) {\n      err.snippet = getSnippet(source, err.loc);\n\n      err.toString = function () {\n        return err.name + \": \" + err.message + \"\\n\" + err.snippet;\n      };\n\n      throw err;\n    }\n\n    var transforms = target(options.target || {});\n    Object.keys(options.transforms || {}).forEach(function (name) {\n      if (name === 'modules') {\n        if (!('moduleImport' in options.transforms)) {\n          transforms.moduleImport = options.transforms.modules;\n        }\n\n        if (!('moduleExport' in options.transforms)) {\n          transforms.moduleExport = options.transforms.modules;\n        }\n\n        return;\n      }\n\n      if (!(name in transforms)) {\n        throw new Error(\"Unknown transform '\" + name + \"'\");\n      }\n\n      transforms[name] = options.transforms[name];\n    });\n\n    if (options.objectAssign === true) {\n      options.objectAssign = 'Object.assign';\n    }\n\n    return new Program(source, ast, transforms, options)[\"export\"](options);\n  }\n\n  exports.target = target;\n  exports.transform = transform;\n  exports.VERSION = version$1;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});"],"sourceRoot":""}